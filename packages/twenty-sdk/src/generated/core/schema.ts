// @ts-nocheck
export type Scalars = {
    String: string,
    UUID: any,
    DateTime: any,
    Boolean: boolean,
    JSON: any,
    Int: number,
    Float: number,
    JSONObject: any,
    ConnectionCursor: any,
    ID: string,
    Date: any,
    Upload: any,
    BigFloat: any,
    Cursor: any,
    Position: any,
    TSVector: any,
    BigInt: any,
}

export type BillingProductDTO = (BillingLicensedProduct | BillingMeteredProduct) & { __isUnion?: true }

export interface ApiKey {
    id: Scalars['UUID']
    name: Scalars['String']
    expiresAt: Scalars['DateTime']
    revokedAt?: Scalars['DateTime']
    workspaceId: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    workspace: Workspace
    role: Role
    __typename: 'ApiKey'
}

export interface FeatureFlag {
    id: Scalars['UUID']
    key: FeatureFlagKey
    workspaceId: Scalars['UUID']
    value: Scalars['Boolean']
    __typename: 'FeatureFlag'
}

export type FeatureFlagKey = 'IS_AIRTABLE_INTEGRATION_ENABLED' | 'IS_POSTGRESQL_INTEGRATION_ENABLED' | 'IS_STRIPE_INTEGRATION_ENABLED' | 'IS_UNIQUE_INDEXES_ENABLED' | 'IS_JSON_FILTER_ENABLED' | 'IS_AI_ENABLED' | 'IS_APPLICATION_ENABLED' | 'IS_IMAP_SMTP_CALDAV_ENABLED' | 'IS_MORPH_RELATION_ENABLED' | 'IS_RELATION_CONNECT_ENABLED' | 'IS_CORE_VIEW_SYNCING_ENABLED' | 'IS_CORE_VIEW_ENABLED' | 'IS_WORKSPACE_MIGRATION_V2_ENABLED' | 'IS_PAGE_LAYOUT_ENABLED' | 'IS_RECORD_PAGE_LAYOUT_ENABLED' | 'IS_MESSAGE_FOLDER_CONTROL_ENABLED' | 'IS_CALENDAR_VIEW_ENABLED' | 'IS_GROUP_BY_ENABLED' | 'IS_PUBLIC_DOMAIN_ENABLED' | 'IS_EMAILING_DOMAIN_ENABLED' | 'IS_DYNAMIC_SEARCH_FIELDS_ENABLED' | 'IS_COMMON_API_ENABLED'

export interface TwoFactorAuthenticationMethodDTO {
    twoFactorAuthenticationMethodId: Scalars['UUID']
    status: Scalars['String']
    strategy: Scalars['String']
    __typename: 'TwoFactorAuthenticationMethodDTO'
}

export interface ObjectPermission {
    objectMetadataId: Scalars['UUID']
    canReadObjectRecords?: Scalars['Boolean']
    canUpdateObjectRecords?: Scalars['Boolean']
    canSoftDeleteObjectRecords?: Scalars['Boolean']
    canDestroyObjectRecords?: Scalars['Boolean']
    restrictedFields?: Scalars['JSON']
    __typename: 'ObjectPermission'
}

export interface UserWorkspace {
    id: Scalars['UUID']
    user: User
    userId: Scalars['UUID']
    workspace?: Workspace
    workspaceId: Scalars['UUID']
    locale: Scalars['String']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    permissionFlags?: PermissionFlagType[]
    objectPermissions?: ObjectPermission[]
    objectsPermissions?: ObjectPermission[]
    twoFactorAuthenticationMethodSummary?: TwoFactorAuthenticationMethodDTO[]
    __typename: 'UserWorkspace'
}

export type PermissionFlagType = 'API_KEYS_AND_WEBHOOKS' | 'WORKSPACE' | 'WORKSPACE_MEMBERS' | 'ROLES' | 'DATA_MODEL' | 'ADMIN_PANEL' | 'SECURITY' | 'WORKFLOWS' | 'IMPERSONATE' | 'SEND_EMAIL_TOOL' | 'IMPORT_CSV' | 'EXPORT_CSV'

export interface Webhook {
    id: Scalars['UUID']
    targetUrl: Scalars['String']
    operations: Scalars['String'][]
    description?: Scalars['String']
    secret: Scalars['String']
    workspaceId: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    workspace: Workspace
    __typename: 'Webhook'
}

export interface Agent {
    id: Scalars['UUID']
    standardId?: Scalars['UUID']
    name: Scalars['String']
    label: Scalars['String']
    icon?: Scalars['String']
    description?: Scalars['String']
    prompt: Scalars['String']
    modelId: Scalars['String']
    responseFormat?: Scalars['JSON']
    roleId?: Scalars['UUID']
    isCustom: Scalars['Boolean']
    applicationId?: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    modelConfiguration?: Scalars['JSON']
    __typename: 'Agent'
}

export interface FullName {
    firstName: Scalars['String']
    lastName: Scalars['String']
    __typename: 'FullName'
}


/** A workspace member */
export interface WorkspaceMember {
    /** Id */
    id: Scalars['UUID']
    /** Workspace member name */
    name: FullName
    /** Related user email address */
    userEmail: Scalars['String']
    /** Preferred color scheme */
    colorScheme: Scalars['String']
    /** Workspace member avatar */
    avatarUrl?: Scalars['String']
    /** Preferred language */
    locale?: Scalars['String']
    /** User's preferred start day of the week */
    calendarStartDay?: Scalars['Int']
    /** User time zone */
    timeZone?: Scalars['String']
    /** User's preferred date format */
    dateFormat?: WorkspaceMemberDateFormatEnum
    /** User's preferred time format */
    timeFormat?: WorkspaceMemberTimeFormatEnum
    roles?: Role[]
    userWorkspaceId?: Scalars['UUID']
    /** User's preferred number format */
    numberFormat?: WorkspaceMemberNumberFormatEnum
    /** Workspace member position */
    position?: Scalars['Position']
    /** Associated User Id */
    userId?: Scalars['UUID']
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Tasks assigned to the workspace member */
    assignedTasks?: TaskConnection
    /** Favorites linked to the workspace member */
    favorites?: FavoriteConnection
    /** Account owner for companies */
    accountOwnerForCompanies?: CompanyConnection
    /** Attachments created by the workspace member */
    authoredAttachments?: AttachmentConnection
    /** Connected accounts */
    connectedAccounts?: ConnectedAccountConnection
    /** Message Participants */
    messageParticipants?: MessageParticipantConnection
    /** Blocklisted handles */
    blocklist?: BlocklistConnection
    /** Calendar Event Participants */
    calendarEventParticipants?: CalendarEventParticipantConnection
    /** Events linked to the workspace member */
    timelineActivities?: TimelineActivityConnection
    __typename: 'WorkspaceMember'
}


/** User's preferred date format */
export type WorkspaceMemberDateFormatEnum = 'SYSTEM' | 'MONTH_FIRST' | 'DAY_FIRST' | 'YEAR_FIRST'


/** User's preferred time format */
export type WorkspaceMemberTimeFormatEnum = 'SYSTEM' | 'HOUR_24' | 'HOUR_12'


/** User's preferred number format */
export type WorkspaceMemberNumberFormatEnum = 'SYSTEM' | 'COMMAS_AND_DOT' | 'SPACES_AND_COMMA' | 'DOTS_AND_COMMA' | 'APOSTROPHE_AND_DOT'

export interface FieldPermission {
    id: Scalars['UUID']
    objectMetadataId: Scalars['UUID']
    fieldMetadataId: Scalars['UUID']
    roleId: Scalars['UUID']
    canReadFieldValue?: Scalars['Boolean']
    canUpdateFieldValue?: Scalars['Boolean']
    __typename: 'FieldPermission'
}

export interface PermissionFlag {
    id: Scalars['UUID']
    roleId: Scalars['UUID']
    flag: PermissionFlagType
    __typename: 'PermissionFlag'
}

export interface ApiKeyForRole {
    id: Scalars['UUID']
    name: Scalars['String']
    expiresAt: Scalars['DateTime']
    revokedAt?: Scalars['DateTime']
    __typename: 'ApiKeyForRole'
}

export interface Role {
    id: Scalars['UUID']
    standardId?: Scalars['UUID']
    label: Scalars['String']
    description?: Scalars['String']
    icon?: Scalars['String']
    isEditable: Scalars['Boolean']
    canBeAssignedToUsers: Scalars['Boolean']
    canBeAssignedToAgents: Scalars['Boolean']
    canBeAssignedToApiKeys: Scalars['Boolean']
    workspaceMembers: WorkspaceMember[]
    agents: Agent[]
    apiKeys: ApiKeyForRole[]
    canUpdateAllSettings: Scalars['Boolean']
    canAccessAllTools: Scalars['Boolean']
    canReadAllObjectRecords: Scalars['Boolean']
    canUpdateAllObjectRecords: Scalars['Boolean']
    canSoftDeleteAllObjectRecords: Scalars['Boolean']
    canDestroyAllObjectRecords: Scalars['Boolean']
    permissionFlags?: PermissionFlag[]
    objectPermissions?: ObjectPermission[]
    fieldPermissions?: FieldPermission[]
    __typename: 'Role'
}

export interface CoreViewField {
    id: Scalars['UUID']
    fieldMetadataId: Scalars['UUID']
    isVisible: Scalars['Boolean']
    size: Scalars['Float']
    position: Scalars['Float']
    aggregateOperation?: AggregateOperations
    viewId: Scalars['UUID']
    workspaceId: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'CoreViewField'
}

export type AggregateOperations = 'MIN' | 'MAX' | 'AVG' | 'SUM' | 'COUNT' | 'COUNT_UNIQUE_VALUES' | 'COUNT_EMPTY' | 'COUNT_NOT_EMPTY' | 'COUNT_TRUE' | 'COUNT_FALSE' | 'PERCENTAGE_EMPTY' | 'PERCENTAGE_NOT_EMPTY'

export interface CoreViewFilterGroup {
    id: Scalars['UUID']
    parentViewFilterGroupId?: Scalars['UUID']
    logicalOperator: ViewFilterGroupLogicalOperator
    positionInViewFilterGroup?: Scalars['Float']
    viewId: Scalars['UUID']
    workspaceId: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'CoreViewFilterGroup'
}

export type ViewFilterGroupLogicalOperator = 'AND' | 'OR' | 'NOT'

export interface CoreViewFilter {
    id: Scalars['UUID']
    fieldMetadataId: Scalars['UUID']
    operand: ViewFilterOperand
    value: Scalars['JSON']
    viewFilterGroupId?: Scalars['UUID']
    positionInViewFilterGroup?: Scalars['Float']
    subFieldName?: Scalars['String']
    viewId: Scalars['UUID']
    workspaceId: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'CoreViewFilter'
}

export type ViewFilterOperand = 'IS' | 'IS_NOT_NULL' | 'IS_NOT' | 'LESS_THAN_OR_EQUAL' | 'GREATER_THAN_OR_EQUAL' | 'IS_BEFORE' | 'IS_AFTER' | 'CONTAINS' | 'DOES_NOT_CONTAIN' | 'IS_EMPTY' | 'IS_NOT_EMPTY' | 'IS_RELATIVE' | 'IS_IN_PAST' | 'IS_IN_FUTURE' | 'IS_TODAY' | 'VECTOR_SEARCH'

export interface CoreViewGroup {
    id: Scalars['UUID']
    fieldMetadataId: Scalars['UUID']
    isVisible: Scalars['Boolean']
    fieldValue: Scalars['String']
    position: Scalars['Float']
    viewId: Scalars['UUID']
    workspaceId: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'CoreViewGroup'
}

export interface CoreViewSort {
    id: Scalars['UUID']
    fieldMetadataId: Scalars['UUID']
    direction: ViewSortDirection
    viewId: Scalars['UUID']
    workspaceId: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'CoreViewSort'
}

export type ViewSortDirection = 'ASC' | 'DESC'

export interface CoreView {
    id: Scalars['UUID']
    name: Scalars['String']
    objectMetadataId: Scalars['UUID']
    type: ViewType
    key?: ViewKey
    icon: Scalars['String']
    position: Scalars['Float']
    isCompact: Scalars['Boolean']
    isCustom: Scalars['Boolean']
    openRecordIn: ViewOpenRecordIn
    kanbanAggregateOperation?: AggregateOperations
    kanbanAggregateOperationFieldMetadataId?: Scalars['UUID']
    calendarFieldMetadataId?: Scalars['UUID']
    workspaceId: Scalars['UUID']
    anyFieldFilterValue?: Scalars['String']
    calendarLayout?: ViewCalendarLayout
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    viewFields: CoreViewField[]
    viewFilters: CoreViewFilter[]
    viewFilterGroups: CoreViewFilterGroup[]
    viewSorts: CoreViewSort[]
    viewGroups: CoreViewGroup[]
    __typename: 'CoreView'
}

export type ViewType = 'TABLE' | 'KANBAN' | 'CALENDAR'

export type ViewKey = 'INDEX'

export type ViewOpenRecordIn = 'SIDE_PANEL' | 'RECORD_PAGE'

export type ViewCalendarLayout = 'DAY' | 'WEEK' | 'MONTH'

export interface Workspace {
    id: Scalars['UUID']
    displayName?: Scalars['String']
    logo?: Scalars['String']
    inviteHash?: Scalars['String']
    deletedAt?: Scalars['DateTime']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    allowImpersonation: Scalars['Boolean']
    isPublicInviteLinkEnabled: Scalars['Boolean']
    trashRetentionDays: Scalars['Float']
    workspaceMembersCount?: Scalars['Float']
    activationStatus: WorkspaceActivationStatus
    views?: CoreView[]
    viewFields?: CoreViewField[]
    viewFilters?: CoreViewFilter[]
    viewFilterGroups?: CoreViewFilterGroup[]
    viewGroups?: CoreViewGroup[]
    viewSorts?: CoreViewSort[]
    metadataVersion: Scalars['Float']
    databaseUrl: Scalars['String']
    databaseSchema: Scalars['String']
    subdomain: Scalars['String']
    customDomain?: Scalars['String']
    isGoogleAuthEnabled: Scalars['Boolean']
    isTwoFactorAuthenticationEnforced: Scalars['Boolean']
    isPasswordAuthEnabled: Scalars['Boolean']
    isMicrosoftAuthEnabled: Scalars['Boolean']
    isCustomDomainEnabled: Scalars['Boolean']
    defaultRole?: Role
    defaultAgent?: Agent
    version?: Scalars['String']
    featureFlags?: FeatureFlagDTO[]
    billingSubscriptions: BillingSubscription[]
    currentBillingSubscription?: BillingSubscription
    hasValidEnterpriseKey: Scalars['Boolean']
    workspaceUrls: WorkspaceUrls
    __typename: 'Workspace'
}

export type WorkspaceActivationStatus = 'ONGOING_CREATION' | 'PENDING_CREATION' | 'ACTIVE' | 'INACTIVE' | 'SUSPENDED'

export interface AppToken {
    id: Scalars['UUID']
    type: Scalars['String']
    expiresAt: Scalars['DateTime']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'AppToken'
}

export interface User {
    id: Scalars['UUID']
    firstName: Scalars['String']
    lastName: Scalars['String']
    email: Scalars['String']
    defaultAvatarUrl?: Scalars['String']
    isEmailVerified: Scalars['Boolean']
    disabled?: Scalars['Boolean']
    passwordHash?: Scalars['String']
    canImpersonate: Scalars['Boolean']
    canAccessFullAdminPanel: Scalars['Boolean']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    locale: Scalars['String']
    workspaceMember?: WorkspaceMember
    userWorkspaces: UserWorkspace[]
    onboardingStatus?: OnboardingStatus
    currentWorkspace?: Workspace
    currentUserWorkspace?: UserWorkspace
    userVars?: Scalars['JSONObject']
    workspaceMembers?: WorkspaceMember[]
    deletedWorkspaceMembers?: DeletedWorkspaceMember[]
    supportUserHash?: Scalars['String']
    workspaces: UserWorkspace[]
    availableWorkspaces: AvailableWorkspaces
    __typename: 'User'
}


/** Onboarding status */
export type OnboardingStatus = 'PLAN_REQUIRED' | 'WORKSPACE_ACTIVATION' | 'PROFILE_CREATION' | 'SYNC_EMAIL' | 'INVITE_TEAM' | 'BOOK_ONBOARDING' | 'COMPLETED'

export interface GridPosition {
    row: Scalars['Float']
    column: Scalars['Float']
    rowSpan: Scalars['Float']
    columnSpan: Scalars['Float']
    __typename: 'GridPosition'
}

export interface PageLayoutWidget {
    id: Scalars['UUID']
    pageLayoutTabId: Scalars['UUID']
    title: Scalars['String']
    type: WidgetType
    objectMetadataId?: Scalars['UUID']
    gridPosition: GridPosition
    configuration?: WidgetConfiguration
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'PageLayoutWidget'
}

export type WidgetType = 'VIEW' | 'IFRAME' | 'FIELDS' | 'GRAPH'

export type WidgetConfiguration = (BarChartConfiguration | LineChartConfiguration | PieChartConfiguration | NumberChartConfiguration | GaugeChartConfiguration | IframeConfiguration) & { __isUnion?: true }

export interface BarChartConfiguration {
    graphType: GraphType
    aggregateFieldMetadataId: Scalars['UUID']
    aggregateOperation: ExtendedAggregateOperations
    primaryAxisGroupByFieldMetadataId: Scalars['UUID']
    primaryAxisGroupBySubFieldName?: Scalars['String']
    primaryAxisOrderBy?: GraphOrderBy
    secondaryAxisGroupByFieldMetadataId?: Scalars['UUID']
    secondaryAxisGroupBySubFieldName?: Scalars['String']
    secondaryAxisOrderBy?: GraphOrderBy
    omitNullValues?: Scalars['Boolean']
    axisNameDisplay?: AxisNameDisplay
    displayDataLabel?: Scalars['Boolean']
    rangeMin?: Scalars['Float']
    rangeMax?: Scalars['Float']
    description?: Scalars['String']
    color?: Scalars['String']
    filter?: Scalars['JSON']
    groupMode?: BarChartGroupMode
    __typename: 'BarChartConfiguration'
}


/** Type of graph widget */
export type GraphType = 'NUMBER' | 'GAUGE' | 'PIE' | 'VERTICAL_BAR' | 'HORIZONTAL_BAR' | 'LINE'

export type ExtendedAggregateOperations = 'MIN' | 'MAX' | 'AVG' | 'SUM' | 'COUNT' | 'COUNT_UNIQUE_VALUES' | 'COUNT_EMPTY' | 'COUNT_NOT_EMPTY' | 'COUNT_TRUE' | 'COUNT_FALSE' | 'PERCENTAGE_EMPTY' | 'PERCENTAGE_NOT_EMPTY' | 'EARLIEST' | 'LATEST'


/** Order by options for graph widgets */
export type GraphOrderBy = 'FIELD_ASC' | 'FIELD_DESC' | 'VALUE_ASC' | 'VALUE_DESC'


/** Which axes should display labels */
export type AxisNameDisplay = 'NONE' | 'X' | 'Y' | 'BOTH'


/** Display mode for bar charts with secondary grouping */
export type BarChartGroupMode = 'STACKED' | 'GROUPED'

export interface LineChartConfiguration {
    graphType: GraphType
    aggregateFieldMetadataId: Scalars['UUID']
    aggregateOperation: ExtendedAggregateOperations
    primaryAxisGroupByFieldMetadataId: Scalars['UUID']
    primaryAxisGroupBySubFieldName?: Scalars['String']
    primaryAxisOrderBy?: GraphOrderBy
    secondaryAxisGroupByFieldMetadataId?: Scalars['UUID']
    secondaryAxisGroupBySubFieldName?: Scalars['String']
    secondaryAxisOrderBy?: GraphOrderBy
    omitNullValues?: Scalars['Boolean']
    axisNameDisplay?: AxisNameDisplay
    displayDataLabel?: Scalars['Boolean']
    rangeMin?: Scalars['Float']
    rangeMax?: Scalars['Float']
    description?: Scalars['String']
    color?: Scalars['String']
    filter?: Scalars['JSON']
    __typename: 'LineChartConfiguration'
}

export interface PieChartConfiguration {
    graphType: GraphType
    aggregateFieldMetadataId: Scalars['UUID']
    aggregateOperation: ExtendedAggregateOperations
    groupByFieldMetadataId: Scalars['UUID']
    groupBySubFieldName?: Scalars['String']
    orderBy?: GraphOrderBy
    displayDataLabel?: Scalars['Boolean']
    description?: Scalars['String']
    color?: Scalars['String']
    filter?: Scalars['JSON']
    __typename: 'PieChartConfiguration'
}

export interface NumberChartConfiguration {
    graphType: GraphType
    aggregateFieldMetadataId: Scalars['UUID']
    aggregateOperation: ExtendedAggregateOperations
    label?: Scalars['String']
    displayDataLabel?: Scalars['Boolean']
    format?: Scalars['String']
    description?: Scalars['String']
    filter?: Scalars['JSON']
    __typename: 'NumberChartConfiguration'
}

export interface GaugeChartConfiguration {
    graphType: GraphType
    aggregateFieldMetadataId: Scalars['UUID']
    aggregateOperation: ExtendedAggregateOperations
    displayDataLabel?: Scalars['Boolean']
    color?: Scalars['String']
    description?: Scalars['String']
    filter?: Scalars['JSON']
    __typename: 'GaugeChartConfiguration'
}

export interface IframeConfiguration {
    url: Scalars['String']
    __typename: 'IframeConfiguration'
}

export interface PageLayoutTab {
    id: Scalars['UUID']
    title: Scalars['String']
    position: Scalars['Float']
    pageLayoutId: Scalars['UUID']
    widgets?: PageLayoutWidget[]
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'PageLayoutTab'
}

export interface PageLayout {
    id: Scalars['UUID']
    name: Scalars['String']
    type: PageLayoutType
    objectMetadataId?: Scalars['UUID']
    tabs?: PageLayoutTab[]
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    deletedAt?: Scalars['DateTime']
    __typename: 'PageLayout'
}

export type PageLayoutType = 'RECORD_INDEX' | 'RECORD_PAGE' | 'DASHBOARD'

export interface StandardOverrides {
    label?: Scalars['String']
    description?: Scalars['String']
    icon?: Scalars['String']
    translations?: Scalars['JSON']
    __typename: 'StandardOverrides'
}

export interface ObjectStandardOverrides {
    labelSingular?: Scalars['String']
    labelPlural?: Scalars['String']
    description?: Scalars['String']
    icon?: Scalars['String']
    translations?: Scalars['JSON']
    __typename: 'ObjectStandardOverrides'
}

export interface Object {
    id: Scalars['UUID']
    nameSingular: Scalars['String']
    namePlural: Scalars['String']
    labelSingular: Scalars['String']
    labelPlural: Scalars['String']
    description?: Scalars['String']
    icon?: Scalars['String']
    standardOverrides?: ObjectStandardOverrides
    shortcut?: Scalars['String']
    isCustom: Scalars['Boolean']
    isRemote: Scalars['Boolean']
    isActive: Scalars['Boolean']
    isSystem: Scalars['Boolean']
    isUIReadOnly: Scalars['Boolean']
    isSearchable: Scalars['Boolean']
    applicationId?: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    labelIdentifierFieldMetadataId?: Scalars['UUID']
    imageIdentifierFieldMetadataId?: Scalars['UUID']
    isLabelSyncedWithName: Scalars['Boolean']
    duplicateCriteria?: Scalars['String'][][]
    fieldsList: Field[]
    indexMetadataList: Index[]
    fields: ObjectFieldsConnection
    indexMetadatas: ObjectIndexMetadatasConnection
    __typename: 'Object'
}

export interface Field {
    id: Scalars['UUID']
    type: FieldMetadataType
    name: Scalars['String']
    label: Scalars['String']
    description?: Scalars['String']
    icon?: Scalars['String']
    standardOverrides?: StandardOverrides
    isCustom?: Scalars['Boolean']
    isActive?: Scalars['Boolean']
    isSystem?: Scalars['Boolean']
    isUIReadOnly?: Scalars['Boolean']
    isNullable?: Scalars['Boolean']
    isUnique?: Scalars['Boolean']
    defaultValue?: Scalars['JSON']
    options?: Scalars['JSON']
    settings?: Scalars['JSON']
    isLabelSyncedWithName?: Scalars['Boolean']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    relation?: Relation
    morphRelations?: Relation[]
    object?: Object
    __typename: 'Field'
}


/** Type of the field */
export type FieldMetadataType = 'UUID' | 'TEXT' | 'PHONES' | 'EMAILS' | 'DATE_TIME' | 'DATE' | 'BOOLEAN' | 'NUMBER' | 'NUMERIC' | 'LINKS' | 'CURRENCY' | 'FULL_NAME' | 'RATING' | 'SELECT' | 'MULTI_SELECT' | 'RELATION' | 'MORPH_RELATION' | 'POSITION' | 'ADDRESS' | 'RAW_JSON' | 'RICH_TEXT' | 'RICH_TEXT_V2' | 'ACTOR' | 'ARRAY' | 'TS_VECTOR'

export interface IndexField {
    id: Scalars['UUID']
    fieldMetadataId: Scalars['UUID']
    order: Scalars['Float']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'IndexField'
}

export interface Index {
    id: Scalars['UUID']
    name: Scalars['String']
    isCustom?: Scalars['Boolean']
    isUnique: Scalars['Boolean']
    indexWhereClause?: Scalars['String']
    indexType: IndexType
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    indexFieldMetadataList: IndexField[]
    objectMetadata: IndexObjectMetadataConnection
    indexFieldMetadatas: IndexIndexFieldMetadatasConnection
    __typename: 'Index'
}


/** Type of the index */
export type IndexType = 'BTREE' | 'GIN'

export interface IndexEdge {
    /** The node containing the Index */
    node: Index
    /** Cursor for this node. */
    cursor: Scalars['ConnectionCursor']
    __typename: 'IndexEdge'
}

export interface PageInfo {
    /** true if paging forward and there are more records. */
    hasNextPage: Scalars['Boolean']
    /** true if paging backwards and there are more records. */
    hasPreviousPage: Scalars['Boolean']
    /** The cursor of the first returned record. */
    startCursor?: Scalars['ConnectionCursor']
    /** The cursor of the last returned record. */
    endCursor?: Scalars['ConnectionCursor']
    __typename: 'PageInfo'
}

export interface IndexConnection {
    /** Paging information */
    pageInfo: PageInfo
    /** Array of edges. */
    edges: IndexEdge[]
    __typename: 'IndexConnection'
}

export interface IndexFieldEdge {
    /** The node containing the IndexField */
    node: IndexField
    /** Cursor for this node. */
    cursor: Scalars['ConnectionCursor']
    __typename: 'IndexFieldEdge'
}

export interface IndexIndexFieldMetadatasConnection {
    /** Paging information */
    pageInfo: PageInfo
    /** Array of edges. */
    edges: IndexFieldEdge[]
    __typename: 'IndexIndexFieldMetadatasConnection'
}

export interface ObjectEdge {
    /** The node containing the Object */
    node: Object
    /** Cursor for this node. */
    cursor: Scalars['ConnectionCursor']
    __typename: 'ObjectEdge'
}

export interface IndexObjectMetadataConnection {
    /** Paging information */
    pageInfo: PageInfo
    /** Array of edges. */
    edges: ObjectEdge[]
    __typename: 'IndexObjectMetadataConnection'
}

export interface ObjectConnection {
    /** Paging information */
    pageInfo: PageInfo
    /** Array of edges. */
    edges: ObjectEdge[]
    __typename: 'ObjectConnection'
}

export interface ObjectIndexMetadatasConnection {
    /** Paging information */
    pageInfo: PageInfo
    /** Array of edges. */
    edges: IndexEdge[]
    __typename: 'ObjectIndexMetadatasConnection'
}

export interface FieldEdge {
    /** The node containing the Field */
    node: Field
    /** Cursor for this node. */
    cursor: Scalars['ConnectionCursor']
    __typename: 'FieldEdge'
}

export interface ObjectFieldsConnection {
    /** Paging information */
    pageInfo: PageInfo
    /** Array of edges. */
    edges: FieldEdge[]
    __typename: 'ObjectFieldsConnection'
}

export interface Analytics {
    /** Boolean that confirms query was dispatched */
    success: Scalars['Boolean']
    __typename: 'Analytics'
}

export interface BillingProductMetadata {
    planKey: BillingPlanKey
    priceUsageBased: BillingUsageType
    productKey: BillingProductKey
    __typename: 'BillingProductMetadata'
}


/** The different billing plans available */
export type BillingPlanKey = 'PRO' | 'ENTERPRISE'

export type BillingUsageType = 'METERED' | 'LICENSED'


/** The different billing products available */
export type BillingProductKey = 'BASE_PRODUCT' | 'WORKFLOW_NODE_EXECUTION'

export interface BillingPriceLicensedDTO {
    recurringInterval: SubscriptionInterval
    unitAmount: Scalars['Float']
    stripePriceId: Scalars['String']
    priceUsageType: BillingUsageType
    __typename: 'BillingPriceLicensedDTO'
}

export type SubscriptionInterval = 'Month' | 'Year'

export interface BillingPriceTierDTO {
    upTo?: Scalars['Float']
    flatAmount?: Scalars['Float']
    unitAmount?: Scalars['Float']
    __typename: 'BillingPriceTierDTO'
}

export interface BillingPriceMeteredDTO {
    tiers: BillingPriceTierDTO[]
    recurringInterval: SubscriptionInterval
    stripePriceId: Scalars['String']
    priceUsageType: BillingUsageType
    __typename: 'BillingPriceMeteredDTO'
}

export interface BillingProduct {
    name: Scalars['String']
    description: Scalars['String']
    images?: Scalars['String'][]
    metadata: BillingProductMetadata
    __typename: 'BillingProduct'
}

export interface BillingLicensedProduct {
    name: Scalars['String']
    description: Scalars['String']
    images?: Scalars['String'][]
    metadata: BillingProductMetadata
    prices?: BillingPriceLicensedDTO[]
    __typename: 'BillingLicensedProduct'
}

export interface BillingMeteredProduct {
    name: Scalars['String']
    description: Scalars['String']
    images?: Scalars['String'][]
    metadata: BillingProductMetadata
    prices?: BillingPriceMeteredDTO[]
    __typename: 'BillingMeteredProduct'
}

export interface BillingSubscriptionItemDTO {
    id: Scalars['UUID']
    hasReachedCurrentPeriodCap: Scalars['Boolean']
    quantity?: Scalars['Float']
    stripePriceId: Scalars['String']
    billingProduct: BillingProductDTO
    __typename: 'BillingSubscriptionItemDTO'
}

export interface BillingSubscriptionSchedulePhaseItem {
    price: Scalars['String']
    quantity?: Scalars['Float']
    __typename: 'BillingSubscriptionSchedulePhaseItem'
}

export interface BillingSubscriptionSchedulePhase {
    start_date: Scalars['Float']
    end_date: Scalars['Float']
    items: BillingSubscriptionSchedulePhaseItem[]
    __typename: 'BillingSubscriptionSchedulePhase'
}

export interface BillingSubscription {
    id: Scalars['UUID']
    status: SubscriptionStatus
    interval?: SubscriptionInterval
    billingSubscriptionItems?: BillingSubscriptionItemDTO[]
    currentPeriodEnd?: Scalars['DateTime']
    metadata: Scalars['JSON']
    phases: BillingSubscriptionSchedulePhase[]
    __typename: 'BillingSubscription'
}

export type SubscriptionStatus = 'Active' | 'Canceled' | 'Incomplete' | 'IncompleteExpired' | 'PastDue' | 'Paused' | 'Trialing' | 'Unpaid'

export interface ResendEmailVerificationTokenOutput {
    success: Scalars['Boolean']
    __typename: 'ResendEmailVerificationTokenOutput'
}

export interface ApprovedAccessDomain {
    id: Scalars['UUID']
    domain: Scalars['String']
    isValidated: Scalars['Boolean']
    createdAt: Scalars['DateTime']
    __typename: 'ApprovedAccessDomain'
}

export interface File {
    id: Scalars['UUID']
    name: Scalars['String']
    fullPath: Scalars['String']
    size: Scalars['Float']
    type: Scalars['String']
    createdAt: Scalars['DateTime']
    __typename: 'File'
}

export interface SignedFileDTO {
    path: Scalars['String']
    token: Scalars['String']
    __typename: 'SignedFileDTO'
}

export interface ServerlessFunctionLayer {
    id: Scalars['UUID']
    applicationId?: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'ServerlessFunctionLayer'
}

export interface ServerlessFunctionExecutionResult {
    /** Execution result in JSON format */
    data?: Scalars['JSON']
    /** Execution Logs */
    logs: Scalars['String']
    /** Execution duration in milliseconds */
    duration: Scalars['Float']
    /** Execution status */
    status: ServerlessFunctionExecutionStatus
    /** Execution error in JSON format */
    error?: Scalars['JSON']
    __typename: 'ServerlessFunctionExecutionResult'
}


/** Status of the serverless function execution */
export type ServerlessFunctionExecutionStatus = 'IDLE' | 'SUCCESS' | 'ERROR'

export interface CronTrigger {
    id: Scalars['UUID']
    settings: Scalars['JSON']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'CronTrigger'
}

export interface DatabaseEventTrigger {
    id: Scalars['UUID']
    settings: Scalars['JSON']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'DatabaseEventTrigger'
}

export interface RouteTrigger {
    id: Scalars['ID']
    path: Scalars['String']
    isAuthRequired: Scalars['Boolean']
    httpMethod: HTTPMethod
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'RouteTrigger'
}

export type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'

export interface ServerlessFunction {
    id: Scalars['UUID']
    name: Scalars['String']
    description?: Scalars['String']
    runtime: Scalars['String']
    timeoutSeconds: Scalars['Float']
    latestVersion?: Scalars['String']
    publishedVersions: Scalars['String'][]
    cronTriggers?: CronTrigger[]
    databaseEventTriggers?: DatabaseEventTrigger[]
    routeTriggers?: RouteTrigger[]
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'ServerlessFunction'
}

export interface BillingEndTrialPeriodOutput {
    /** Updated subscription status */
    status?: SubscriptionStatus
    /** Boolean that confirms if a payment method was found */
    hasPaymentMethod: Scalars['Boolean']
    __typename: 'BillingEndTrialPeriodOutput'
}

export interface BillingMeteredProductUsageOutput {
    productKey: BillingProductKey
    periodStart: Scalars['DateTime']
    periodEnd: Scalars['DateTime']
    usedCredits: Scalars['Float']
    grantedCredits: Scalars['Float']
    unitPriceCents: Scalars['Float']
    __typename: 'BillingMeteredProductUsageOutput'
}

export interface BillingPlanOutput {
    planKey: BillingPlanKey
    licensedProducts: BillingLicensedProduct[]
    meteredProducts: BillingMeteredProduct[]
    __typename: 'BillingPlanOutput'
}

export interface BillingSessionOutput {
    url?: Scalars['String']
    __typename: 'BillingSessionOutput'
}

export interface BillingUpdateOutput {
    /** Current billing subscription */
    currentBillingSubscription: BillingSubscription
    /** All billing subscriptions */
    billingSubscriptions: BillingSubscription[]
    __typename: 'BillingUpdateOutput'
}

export interface OnboardingStepSuccess {
    /** Boolean that confirms query was dispatched */
    success: Scalars['Boolean']
    __typename: 'OnboardingStepSuccess'
}

export interface WorkspaceInvitation {
    id: Scalars['UUID']
    email: Scalars['String']
    expiresAt: Scalars['DateTime']
    __typename: 'WorkspaceInvitation'
}

export interface SendInvitationsOutput {
    /** Boolean that confirms query was dispatched */
    success: Scalars['Boolean']
    errors: Scalars['String'][]
    result: WorkspaceInvitation[]
    __typename: 'SendInvitationsOutput'
}

export interface WorkspaceUrls {
    customUrl?: Scalars['String']
    subdomainUrl: Scalars['String']
    __typename: 'WorkspaceUrls'
}

export interface SSOConnection {
    type: IdentityProviderType
    id: Scalars['UUID']
    issuer: Scalars['String']
    name: Scalars['String']
    status: SSOIdentityProviderStatus
    __typename: 'SSOConnection'
}

export type IdentityProviderType = 'OIDC' | 'SAML'

export type SSOIdentityProviderStatus = 'Active' | 'Inactive' | 'Error'

export interface AvailableWorkspace {
    id: Scalars['UUID']
    displayName?: Scalars['String']
    loginToken?: Scalars['String']
    personalInviteToken?: Scalars['String']
    inviteHash?: Scalars['String']
    workspaceUrls: WorkspaceUrls
    logo?: Scalars['String']
    sso: SSOConnection[]
    __typename: 'AvailableWorkspace'
}

export interface AvailableWorkspaces {
    availableWorkspacesForSignIn: AvailableWorkspace[]
    availableWorkspacesForSignUp: AvailableWorkspace[]
    __typename: 'AvailableWorkspaces'
}

export interface DeletedWorkspaceMember {
    id: Scalars['UUID']
    name: FullName
    userEmail: Scalars['String']
    avatarUrl?: Scalars['String']
    userWorkspaceId?: Scalars['UUID']
    __typename: 'DeletedWorkspaceMember'
}

export interface DomainRecord {
    validationType: Scalars['String']
    type: Scalars['String']
    status: Scalars['String']
    key: Scalars['String']
    value: Scalars['String']
    __typename: 'DomainRecord'
}

export interface DomainValidRecords {
    id: Scalars['UUID']
    domain: Scalars['String']
    records: DomainRecord[]
    __typename: 'DomainValidRecords'
}

export interface FeatureFlagDTO {
    key: FeatureFlagKey
    value: Scalars['Boolean']
    __typename: 'FeatureFlagDTO'
}

export interface SSOIdentityProvider {
    id: Scalars['UUID']
    name: Scalars['String']
    type: IdentityProviderType
    status: SSOIdentityProviderStatus
    issuer: Scalars['String']
    __typename: 'SSOIdentityProvider'
}

export interface AuthProviders {
    sso: SSOIdentityProvider[]
    google: Scalars['Boolean']
    magicLink: Scalars['Boolean']
    password: Scalars['Boolean']
    microsoft: Scalars['Boolean']
    __typename: 'AuthProviders'
}

export interface PublicWorkspaceDataOutput {
    id: Scalars['UUID']
    authProviders: AuthProviders
    logo?: Scalars['String']
    displayName?: Scalars['String']
    workspaceUrls: WorkspaceUrls
    __typename: 'PublicWorkspaceDataOutput'
}

export interface AgentChatMessagePart {
    id: Scalars['UUID']
    messageId: Scalars['UUID']
    orderIndex: Scalars['Int']
    type: Scalars['String']
    textContent?: Scalars['String']
    reasoningContent?: Scalars['String']
    toolName?: Scalars['String']
    toolCallId?: Scalars['String']
    toolInput?: Scalars['JSON']
    toolOutput?: Scalars['JSON']
    state?: Scalars['String']
    errorMessage?: Scalars['String']
    errorDetails?: Scalars['JSON']
    sourceUrlSourceId?: Scalars['String']
    sourceUrlUrl?: Scalars['String']
    sourceUrlTitle?: Scalars['String']
    sourceDocumentSourceId?: Scalars['String']
    sourceDocumentMediaType?: Scalars['String']
    sourceDocumentTitle?: Scalars['String']
    sourceDocumentFilename?: Scalars['String']
    fileMediaType?: Scalars['String']
    fileFilename?: Scalars['String']
    fileUrl?: Scalars['String']
    providerMetadata?: Scalars['JSON']
    createdAt: Scalars['DateTime']
    __typename: 'AgentChatMessagePart'
}

export interface AgentChatMessage {
    id: Scalars['UUID']
    threadId: Scalars['UUID']
    role: Scalars['String']
    parts: AgentChatMessagePart[]
    createdAt: Scalars['DateTime']
    __typename: 'AgentChatMessage'
}

export interface AgentChatThread {
    id: Scalars['UUID']
    agentId: Scalars['UUID']
    title?: Scalars['String']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'AgentChatThread'
}

export interface AgentHandoffDTO {
    id: Scalars['UUID']
    description?: Scalars['String']
    toAgent: Agent
    __typename: 'AgentHandoffDTO'
}

export interface Relation {
    type: RelationType
    sourceObjectMetadata: Object
    targetObjectMetadata: Object
    sourceFieldMetadata: Field
    targetFieldMetadata: Field
    __typename: 'Relation'
}


/** Relation type */
export type RelationType = 'ONE_TO_MANY' | 'MANY_TO_ONE'

export interface FieldConnection {
    /** Paging information */
    pageInfo: PageInfo
    /** Array of edges. */
    edges: FieldEdge[]
    __typename: 'FieldConnection'
}

export interface WorkspaceEdge {
    /** The node containing the Workspace */
    node: Workspace
    /** Cursor for this node. */
    cursor: Scalars['ConnectionCursor']
    __typename: 'WorkspaceEdge'
}

export interface UserEdge {
    /** The node containing the User */
    node: User
    /** Cursor for this node. */
    cursor: Scalars['ConnectionCursor']
    __typename: 'UserEdge'
}

export interface DeleteSsoOutput {
    identityProviderId: Scalars['UUID']
    __typename: 'DeleteSsoOutput'
}

export interface EditSsoOutput {
    id: Scalars['UUID']
    type: IdentityProviderType
    issuer: Scalars['String']
    name: Scalars['String']
    status: SSOIdentityProviderStatus
    __typename: 'EditSsoOutput'
}

export interface WorkspaceNameAndId {
    displayName?: Scalars['String']
    id: Scalars['UUID']
    __typename: 'WorkspaceNameAndId'
}

export interface FindAvailableSSOIDPOutput {
    type: IdentityProviderType
    id: Scalars['UUID']
    issuer: Scalars['String']
    name: Scalars['String']
    status: SSOIdentityProviderStatus
    workspace: WorkspaceNameAndId
    __typename: 'FindAvailableSSOIDPOutput'
}

export interface SetupSsoOutput {
    id: Scalars['UUID']
    type: IdentityProviderType
    issuer: Scalars['String']
    name: Scalars['String']
    status: SSOIdentityProviderStatus
    __typename: 'SetupSsoOutput'
}

export interface DeleteTwoFactorAuthenticationMethodOutput {
    /** Boolean that confirms query was dispatched */
    success: Scalars['Boolean']
    __typename: 'DeleteTwoFactorAuthenticationMethodOutput'
}

export interface InitiateTwoFactorAuthenticationProvisioningOutput {
    uri: Scalars['String']
    __typename: 'InitiateTwoFactorAuthenticationProvisioningOutput'
}

export interface VerifyTwoFactorAuthenticationMethodOutput {
    success: Scalars['Boolean']
    __typename: 'VerifyTwoFactorAuthenticationMethodOutput'
}

export interface AuthorizeApp {
    redirectUrl: Scalars['String']
    __typename: 'AuthorizeApp'
}

export interface EmailPasswordResetLink {
    /** Boolean that confirms query was dispatched */
    success: Scalars['Boolean']
    __typename: 'EmailPasswordResetLink'
}

export interface InvalidatePassword {
    /** Boolean that confirms query was dispatched */
    success: Scalars['Boolean']
    __typename: 'InvalidatePassword'
}

export interface AuthToken {
    token: Scalars['String']
    expiresAt: Scalars['DateTime']
    __typename: 'AuthToken'
}

export interface ApiKeyToken {
    token: Scalars['String']
    __typename: 'ApiKeyToken'
}

export interface AuthTokenPair {
    accessOrWorkspaceAgnosticToken: AuthToken
    refreshToken: AuthToken
    __typename: 'AuthTokenPair'
}

export interface AuthTokens {
    tokens: AuthTokenPair
    __typename: 'AuthTokens'
}

export interface TransientToken {
    transientToken: AuthToken
    __typename: 'TransientToken'
}

export interface ValidatePasswordResetToken {
    id: Scalars['UUID']
    email: Scalars['String']
    __typename: 'ValidatePasswordResetToken'
}

export interface AvailableWorkspacesAndAccessTokensOutput {
    tokens: AuthTokenPair
    availableWorkspaces: AvailableWorkspaces
    __typename: 'AvailableWorkspacesAndAccessTokensOutput'
}

export interface GetAuthorizationUrlForSSOOutput {
    authorizationURL: Scalars['String']
    type: Scalars['String']
    id: Scalars['UUID']
    __typename: 'GetAuthorizationUrlForSSOOutput'
}

export interface GetLoginTokenFromEmailVerificationTokenOutput {
    loginToken: AuthToken
    workspaceUrls: WorkspaceUrls
    __typename: 'GetLoginTokenFromEmailVerificationTokenOutput'
}

export interface WorkspaceUrlsAndId {
    workspaceUrls: WorkspaceUrls
    id: Scalars['UUID']
    __typename: 'WorkspaceUrlsAndId'
}

export interface SignUpOutput {
    loginToken: AuthToken
    workspace: WorkspaceUrlsAndId
    __typename: 'SignUpOutput'
}

export interface LoginToken {
    loginToken: AuthToken
    __typename: 'LoginToken'
}

export interface CheckUserExistOutput {
    exists: Scalars['Boolean']
    availableWorkspacesCount: Scalars['Float']
    isEmailVerified: Scalars['Boolean']
    __typename: 'CheckUserExistOutput'
}

export interface WorkspaceInviteHashValid {
    isValid: Scalars['Boolean']
    __typename: 'WorkspaceInviteHashValid'
}

export interface OnDbEventDTO {
    action: DatabaseEventAction
    objectNameSingular: Scalars['String']
    eventDate: Scalars['DateTime']
    record: Scalars['JSON']
    updatedFields?: Scalars['String'][]
    __typename: 'OnDbEventDTO'
}


/** Database Event Action */
export type DatabaseEventAction = 'CREATED' | 'UPDATED' | 'DELETED' | 'DESTROYED' | 'RESTORED' | 'UPSERTED'

export interface UserMappingOptionsUser {
    user?: Scalars['String']
    __typename: 'UserMappingOptionsUser'
}

export interface RemoteServer {
    id: Scalars['UUID']
    foreignDataWrapperId: Scalars['UUID']
    foreignDataWrapperType: Scalars['String']
    label: Scalars['String']
    foreignDataWrapperOptions?: Scalars['JSON']
    userMappingOptions?: UserMappingOptionsUser
    schema?: Scalars['String']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    __typename: 'RemoteServer'
}

export interface RemoteTable {
    id?: Scalars['UUID']
    name: Scalars['String']
    status: RemoteTableStatus
    schema?: Scalars['String']
    schemaPendingUpdates?: DistantTableUpdate[]
    __typename: 'RemoteTable'
}


/** Status of the table */
export type RemoteTableStatus = 'SYNCED' | 'NOT_SYNCED'


/** Schema update on a table */
export type DistantTableUpdate = 'TABLE_DELETED' | 'COLUMNS_DELETED' | 'COLUMNS_ADDED' | 'COLUMNS_TYPE_CHANGED'

export interface ConfigVariable {
    name: Scalars['String']
    description: Scalars['String']
    value?: Scalars['JSON']
    isSensitive: Scalars['Boolean']
    source: ConfigSource
    isEnvOnly: Scalars['Boolean']
    type: ConfigVariableType
    options?: Scalars['JSON']
    __typename: 'ConfigVariable'
}

export type ConfigSource = 'ENVIRONMENT' | 'DATABASE' | 'DEFAULT'

export type ConfigVariableType = 'BOOLEAN' | 'NUMBER' | 'ARRAY' | 'STRING' | 'ENUM'

export interface ConfigVariablesGroupData {
    variables: ConfigVariable[]
    name: ConfigVariablesGroup
    description: Scalars['String']
    isHiddenOnLoad: Scalars['Boolean']
    __typename: 'ConfigVariablesGroupData'
}

export type ConfigVariablesGroup = 'ServerConfig' | 'RateLimiting' | 'StorageConfig' | 'GoogleAuth' | 'MicrosoftAuth' | 'EmailSettings' | 'Logging' | 'Metering' | 'ExceptionHandler' | 'Other' | 'BillingConfig' | 'CaptchaConfig' | 'CloudflareConfig' | 'LLM' | 'ServerlessConfig' | 'SSL' | 'SupportChatConfig' | 'AnalyticsConfig' | 'TokensDuration' | 'TwoFactorAuthentication' | 'AwsSesSettings'

export interface ConfigVariablesOutput {
    groups: ConfigVariablesGroupData[]
    __typename: 'ConfigVariablesOutput'
}

export interface SystemHealthService {
    id: HealthIndicatorId
    label: Scalars['String']
    status: AdminPanelHealthServiceStatus
    __typename: 'SystemHealthService'
}

export type HealthIndicatorId = 'database' | 'redis' | 'worker' | 'connectedAccount' | 'app'

export type AdminPanelHealthServiceStatus = 'OPERATIONAL' | 'OUTAGE'

export interface SystemHealth {
    services: SystemHealthService[]
    __typename: 'SystemHealth'
}

export interface UserInfo {
    id: Scalars['UUID']
    email: Scalars['String']
    firstName?: Scalars['String']
    lastName?: Scalars['String']
    __typename: 'UserInfo'
}

export interface WorkspaceInfo {
    id: Scalars['UUID']
    name: Scalars['String']
    allowImpersonation: Scalars['Boolean']
    logo?: Scalars['String']
    totalUsers: Scalars['Float']
    workspaceUrls: WorkspaceUrls
    users: UserInfo[]
    featureFlags: FeatureFlag[]
    __typename: 'WorkspaceInfo'
}

export interface UserLookup {
    user: UserInfo
    workspaces: WorkspaceInfo[]
    __typename: 'UserLookup'
}

export interface VersionInfo {
    currentVersion?: Scalars['String']
    latestVersion: Scalars['String']
    __typename: 'VersionInfo'
}

export interface AdminPanelWorkerQueueHealth {
    id: Scalars['String']
    queueName: Scalars['String']
    status: AdminPanelHealthServiceStatus
    __typename: 'AdminPanelWorkerQueueHealth'
}

export interface AdminPanelHealthServiceData {
    id: HealthIndicatorId
    label: Scalars['String']
    description: Scalars['String']
    status: AdminPanelHealthServiceStatus
    errorMessage?: Scalars['String']
    details?: Scalars['String']
    queues?: AdminPanelWorkerQueueHealth[]
    __typename: 'AdminPanelHealthServiceData'
}

export interface QueueMetricsDataPoint {
    x: Scalars['Float']
    y: Scalars['Float']
    __typename: 'QueueMetricsDataPoint'
}

export interface QueueMetricsSeries {
    id: Scalars['String']
    data: QueueMetricsDataPoint[]
    __typename: 'QueueMetricsSeries'
}

export interface WorkerQueueMetrics {
    failed: Scalars['Float']
    completed: Scalars['Float']
    waiting: Scalars['Float']
    active: Scalars['Float']
    delayed: Scalars['Float']
    failureRate: Scalars['Float']
    failedData?: Scalars['Float'][]
    completedData?: Scalars['Float'][]
    __typename: 'WorkerQueueMetrics'
}

export interface QueueMetricsData {
    queueName: Scalars['String']
    workers: Scalars['Float']
    timeRange: QueueMetricsTimeRange
    details?: WorkerQueueMetrics
    data: QueueMetricsSeries[]
    __typename: 'QueueMetricsData'
}

export type QueueMetricsTimeRange = 'SevenDays' | 'OneDay' | 'TwelveHours' | 'FourHours' | 'OneHour'

export interface ImpersonateOutput {
    loginToken: AuthToken
    workspace: WorkspaceUrlsAndId
    __typename: 'ImpersonateOutput'
}

export interface AppTokenEdge {
    /** The node containing the AppToken */
    node: AppToken
    /** Cursor for this node. */
    cursor: Scalars['ConnectionCursor']
    __typename: 'AppTokenEdge'
}

export interface ApplicationVariable {
    id: Scalars['UUID']
    key: Scalars['String']
    value: Scalars['String']
    description: Scalars['String']
    isSecret: Scalars['Boolean']
    __typename: 'ApplicationVariable'
}

export interface Application {
    id: Scalars['UUID']
    name: Scalars['String']
    description: Scalars['String']
    version: Scalars['String']
    agents: Agent[]
    serverlessFunctions: ServerlessFunction[]
    objects: Object[]
    applicationVariables: ApplicationVariable[]
    __typename: 'Application'
}

export interface TimelineCalendarEventParticipant {
    personId?: Scalars['UUID']
    workspaceMemberId?: Scalars['UUID']
    firstName: Scalars['String']
    lastName: Scalars['String']
    displayName: Scalars['String']
    avatarUrl: Scalars['String']
    handle: Scalars['String']
    __typename: 'TimelineCalendarEventParticipant'
}

export interface LinkMetadata {
    label: Scalars['String']
    url: Scalars['String']
    __typename: 'LinkMetadata'
}

export interface LinksMetadata {
    primaryLinkLabel: Scalars['String']
    primaryLinkUrl: Scalars['String']
    secondaryLinks?: LinkMetadata[]
    __typename: 'LinksMetadata'
}

export interface TimelineCalendarEvent {
    id: Scalars['UUID']
    title: Scalars['String']
    isCanceled: Scalars['Boolean']
    isFullDay: Scalars['Boolean']
    startsAt: Scalars['DateTime']
    endsAt: Scalars['DateTime']
    description: Scalars['String']
    location: Scalars['String']
    conferenceSolution: Scalars['String']
    conferenceLink: LinksMetadata
    participants: TimelineCalendarEventParticipant[]
    visibility: CalendarChannelVisibility
    __typename: 'TimelineCalendarEvent'
}

export type CalendarChannelVisibility = 'METADATA' | 'SHARE_EVERYTHING'

export interface TimelineCalendarEventsWithTotal {
    totalNumberOfCalendarEvents: Scalars['Int']
    timelineCalendarEvents: TimelineCalendarEvent[]
    __typename: 'TimelineCalendarEventsWithTotal'
}

export interface PublicDomain {
    id: Scalars['UUID']
    domain: Scalars['String']
    isValidated: Scalars['Boolean']
    createdAt: Scalars['DateTime']
    __typename: 'PublicDomain'
}

export interface VerificationRecord {
    type: Scalars['String']
    key: Scalars['String']
    value: Scalars['String']
    priority?: Scalars['Float']
    __typename: 'VerificationRecord'
}

export interface EmailingDomain {
    id: Scalars['UUID']
    createdAt: Scalars['DateTime']
    updatedAt: Scalars['DateTime']
    domain: Scalars['String']
    driver: EmailingDomainDriver
    status: EmailingDomainStatus
    verificationRecords?: VerificationRecord[]
    verifiedAt?: Scalars['DateTime']
    __typename: 'EmailingDomain'
}

export type EmailingDomainDriver = 'AWS_SES'

export type EmailingDomainStatus = 'PENDING' | 'VERIFIED' | 'FAILED' | 'TEMPORARY_FAILURE'

export interface AutocompleteResultDto {
    text: Scalars['String']
    placeId: Scalars['String']
    __typename: 'AutocompleteResultDto'
}

export interface LocationDto {
    lat?: Scalars['Float']
    lng?: Scalars['Float']
    __typename: 'LocationDto'
}

export interface PlaceDetailsResultDto {
    state?: Scalars['String']
    postcode?: Scalars['String']
    city?: Scalars['String']
    country?: Scalars['String']
    location?: LocationDto
    __typename: 'PlaceDetailsResultDto'
}

export interface ConnectionParametersOutput {
    host: Scalars['String']
    port: Scalars['Float']
    username?: Scalars['String']
    password: Scalars['String']
    secure?: Scalars['Boolean']
    __typename: 'ConnectionParametersOutput'
}

export interface ImapSmtpCaldavConnectionParameters {
    IMAP?: ConnectionParametersOutput
    SMTP?: ConnectionParametersOutput
    CALDAV?: ConnectionParametersOutput
    __typename: 'ImapSmtpCaldavConnectionParameters'
}

export interface ConnectedImapSmtpCaldavAccount {
    id: Scalars['UUID']
    handle: Scalars['String']
    provider: Scalars['String']
    accountOwnerId: Scalars['UUID']
    connectionParameters?: ImapSmtpCaldavConnectionParameters
    __typename: 'ConnectedImapSmtpCaldavAccount'
}

export interface ImapSmtpCaldavConnectionSuccess {
    success: Scalars['Boolean']
    connectedAccountId: Scalars['String']
    __typename: 'ImapSmtpCaldavConnectionSuccess'
}

export interface TimelineThreadParticipant {
    personId?: Scalars['UUID']
    workspaceMemberId?: Scalars['UUID']
    firstName: Scalars['String']
    lastName: Scalars['String']
    displayName: Scalars['String']
    avatarUrl: Scalars['String']
    handle: Scalars['String']
    __typename: 'TimelineThreadParticipant'
}

export interface TimelineThread {
    id: Scalars['UUID']
    read: Scalars['Boolean']
    visibility: MessageChannelVisibility
    firstParticipant: TimelineThreadParticipant
    lastTwoParticipants: TimelineThreadParticipant[]
    lastMessageReceivedAt: Scalars['DateTime']
    lastMessageBody: Scalars['String']
    subject: Scalars['String']
    numberOfMessagesInThread: Scalars['Float']
    participantCount: Scalars['Float']
    __typename: 'TimelineThread'
}

export type MessageChannelVisibility = 'METADATA' | 'SUBJECT' | 'SHARE_EVERYTHING'

export interface TimelineThreadsWithTotal {
    totalNumberOfThreads: Scalars['Int']
    timelineThreads: TimelineThread[]
    __typename: 'TimelineThreadsWithTotal'
}

export interface PostgresCredentials {
    id: Scalars['UUID']
    user: Scalars['String']
    password: Scalars['String']
    workspaceId: Scalars['UUID']
    __typename: 'PostgresCredentials'
}

export interface SearchRecord {
    recordId: Scalars['UUID']
    objectNameSingular: Scalars['String']
    label: Scalars['String']
    imageUrl?: Scalars['String']
    tsRankCD: Scalars['Float']
    tsRank: Scalars['Float']
    __typename: 'SearchRecord'
}

export interface SearchResultEdge {
    node: SearchRecord
    cursor: Scalars['String']
    __typename: 'SearchResultEdge'
}

export interface SearchResultPageInfo {
    endCursor?: Scalars['String']
    hasNextPage: Scalars['Boolean']
    __typename: 'SearchResultPageInfo'
}

export interface SearchResultConnection {
    edges: SearchResultEdge[]
    pageInfo: SearchResultPageInfo
    __typename: 'SearchResultConnection'
}


/** A workflow run */
export interface WorkflowRun {
    workflowRunId: Scalars['UUID']
    /** Name of the workflow run */
    name?: Scalars['String']
    /** Workflow run enqueued at */
    enqueuedAt?: Scalars['DateTime']
    /** Workflow run started at */
    startedAt?: Scalars['DateTime']
    /** Workflow run ended at */
    endedAt?: Scalars['DateTime']
    /** Workflow run status */
    status?: WorkflowRunStatusEnum
    /** The executor of the workflow */
    createdBy?: Actor
    /** State of the workflow run */
    state?: Scalars['JSON']
    /** Workflow run position */
    position?: Scalars['Position']
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Workflow version linked to the run. */
    workflowVersionId?: Scalars['ID']
    /** Workflow linked to the run. */
    workflowId?: Scalars['ID']
    /** Workflow version linked to the run. */
    workflowVersion?: WorkflowVersion
    /** Workflow linked to the run. */
    workflow?: Workflow
    /** Favorites linked to the workflow run */
    favorites?: FavoriteConnection
    /** Timeline activities linked to the run */
    timelineActivities?: TimelineActivityConnection
    __typename: 'WorkflowRun'
}

export interface WorkflowVersionStepChanges {
    triggerDiff?: Scalars['JSON']
    stepsDiff?: Scalars['JSON']
    __typename: 'WorkflowVersionStepChanges'
}

export interface WorkflowStepPosition {
    x: Scalars['Float']
    y: Scalars['Float']
    __typename: 'WorkflowStepPosition'
}

export interface WorkflowAction {
    id: Scalars['UUID']
    name: Scalars['String']
    type: Scalars['String']
    settings: Scalars['JSON']
    valid: Scalars['Boolean']
    nextStepIds?: Scalars['UUID'][]
    position?: WorkflowStepPosition
    __typename: 'WorkflowAction'
}

export interface WorkflowVersionDTO {
    id: Scalars['UUID']
    name: Scalars['String']
    createdAt: Scalars['String']
    updatedAt: Scalars['String']
    workflowId: Scalars['UUID']
    status: Scalars['String']
    trigger?: Scalars['JSON']
    steps?: Scalars['JSON']
    __typename: 'WorkflowVersionDTO'
}

export interface ChannelSyncSuccess {
    success: Scalars['Boolean']
    __typename: 'ChannelSyncSuccess'
}

export interface BillingTrialPeriodDTO {
    duration: Scalars['Float']
    isCreditCardRequired: Scalars['Boolean']
    __typename: 'BillingTrialPeriodDTO'
}

export interface NativeModelCapabilities {
    webSearch?: Scalars['Boolean']
    twitterSearch?: Scalars['Boolean']
    __typename: 'NativeModelCapabilities'
}

export interface ClientAIModelConfig {
    modelId: Scalars['String']
    label: Scalars['String']
    provider: ModelProvider
    inputCostPer1kTokensInCredits: Scalars['Float']
    outputCostPer1kTokensInCredits: Scalars['Float']
    nativeCapabilities?: NativeModelCapabilities
    __typename: 'ClientAIModelConfig'
}

export type ModelProvider = 'NONE' | 'OPENAI' | 'ANTHROPIC' | 'OPENAI_COMPATIBLE' | 'XAI'

export interface Billing {
    isBillingEnabled: Scalars['Boolean']
    billingUrl?: Scalars['String']
    trialPeriods: BillingTrialPeriodDTO[]
    __typename: 'Billing'
}

export interface Support {
    supportDriver: SupportDriver
    supportFrontChatId?: Scalars['String']
    __typename: 'Support'
}

export type SupportDriver = 'NONE' | 'FRONT'

export interface Sentry {
    environment?: Scalars['String']
    release?: Scalars['String']
    dsn?: Scalars['String']
    __typename: 'Sentry'
}

export interface Captcha {
    provider?: CaptchaDriverType
    siteKey?: Scalars['String']
    __typename: 'Captcha'
}

export type CaptchaDriverType = 'GOOGLE_RECAPTCHA' | 'TURNSTILE'

export interface ApiConfig {
    mutationMaximumAffectedRecords: Scalars['Float']
    __typename: 'ApiConfig'
}

export interface PublicFeatureFlagMetadata {
    label: Scalars['String']
    description: Scalars['String']
    imagePath: Scalars['String']
    __typename: 'PublicFeatureFlagMetadata'
}

export interface PublicFeatureFlag {
    key: FeatureFlagKey
    metadata: PublicFeatureFlagMetadata
    __typename: 'PublicFeatureFlag'
}

export interface Query {
    object: Object
    objects: ObjectConnection
    getCoreViewFields: CoreViewField[]
    getCoreViewField?: CoreViewField
    getCoreViews: CoreView[]
    getCoreView?: CoreView
    getCoreViewSorts: CoreViewSort[]
    getCoreViewSort?: CoreViewSort
    getCoreViewGroups: CoreViewGroup[]
    getCoreViewGroup?: CoreViewGroup
    getCoreViewFilterGroups: CoreViewFilterGroup[]
    getCoreViewFilterGroup?: CoreViewFilterGroup
    getCoreViewFilters: CoreViewFilter[]
    getCoreViewFilter?: CoreViewFilter
    index: Index
    indexMetadatas: IndexConnection
    findOneServerlessFunction: ServerlessFunction
    findManyServerlessFunctions: ServerlessFunction[]
    getAvailablePackages: Scalars['JSON']
    getServerlessFunctionSourceCode?: Scalars['JSON']
    findOneDatabaseEventTrigger: DatabaseEventTrigger
    findManyDatabaseEventTriggers: DatabaseEventTrigger[]
    findOneCronTrigger: CronTrigger
    findManyCronTriggers: CronTrigger[]
    findOneRouteTrigger: RouteTrigger
    findManyRouteTriggers: RouteTrigger[]
    checkUserExists: CheckUserExistOutput
    checkWorkspaceInviteHashIsValid: WorkspaceInviteHashValid
    findWorkspaceFromInviteHash: Workspace
    validatePasswordResetToken: ValidatePasswordResetToken
    apiKeys: ApiKey[]
    apiKey?: ApiKey
    currentUser: User
    findWorkspaceInvitations: WorkspaceInvitation[]
    billingPortalSession: BillingSessionOutput
    listPlans: BillingPlanOutput[]
    getMeteredProductsUsage: BillingMeteredProductUsageOutput[]
    getApprovedAccessDomains: ApprovedAccessDomain[]
    currentWorkspace: Workspace
    getPublicWorkspaceDataByDomain: PublicWorkspaceDataOutput
    findManyAgents: Agent[]
    findOneAgent: Agent
    findAgentHandoffTargets: Agent[]
    findAgentHandoffs: AgentHandoffDTO[]
    agentChatThreads: AgentChatThread[]
    agentChatThread: AgentChatThread
    agentChatMessages: AgentChatMessage[]
    getRoles: Role[]
    field: Field
    fields: FieldConnection
    getSSOIdentityProviders: FindAvailableSSOIDPOutput[]
    getPageLayouts: PageLayout[]
    getPageLayout?: PageLayout
    getPageLayoutTabs: PageLayoutTab[]
    getPageLayoutTab: PageLayoutTab
    getPageLayoutWidgets: PageLayoutWidget[]
    getPageLayoutWidget: PageLayoutWidget
    webhooks: Webhook[]
    webhook?: Webhook
    search: SearchResultConnection
    getConnectedImapSmtpCaldavAccount: ConnectedImapSmtpCaldavAccount
    getAutoCompleteAddress: AutocompleteResultDto[]
    getAddressDetails: PlaceDetailsResultDto
    getConfigVariablesGrouped: ConfigVariablesOutput
    getSystemHealthStatus: SystemHealth
    getIndicatorHealthStatus: AdminPanelHealthServiceData
    getQueueMetrics: QueueMetricsData
    versionInfo: VersionInfo
    getDatabaseConfigVariable: ConfigVariable
    getPostgresCredentials?: PostgresCredentials
    findManyPublicDomains: PublicDomain[]
    getEmailingDomains: EmailingDomain[]
    getTimelineCalendarEventsFromPersonId: TimelineCalendarEventsWithTotal
    getTimelineCalendarEventsFromCompanyId: TimelineCalendarEventsWithTotal
    getTimelineCalendarEventsFromOpportunityId: TimelineCalendarEventsWithTotal
    getTimelineThreadsFromPersonId: TimelineThreadsWithTotal
    getTimelineThreadsFromCompanyId: TimelineThreadsWithTotal
    getTimelineThreadsFromOpportunityId: TimelineThreadsWithTotal
    findManyApplications: Application[]
    findOneApplication: Application
    attachments?: AttachmentConnection
    attachment?: Attachment
    attachmentsGroupBy?: AttachmentGroupByConnection[]
    blocklists?: BlocklistConnection
    blocklist?: Blocklist
    blocklistsGroupBy?: BlocklistGroupByConnection[]
    calendarEvents?: CalendarEventConnection
    calendarEvent?: CalendarEvent
    calendarEventsGroupBy?: CalendarEventGroupByConnection[]
    calendarChannels?: CalendarChannelConnection
    calendarChannel?: CalendarChannel
    calendarChannelsGroupBy?: CalendarChannelGroupByConnection[]
    calendarChannelEventAssociations?: CalendarChannelEventAssociationConnection
    calendarChannelEventAssociation?: CalendarChannelEventAssociation
    calendarChannelEventAssociationsGroupBy?: CalendarChannelEventAssociationGroupByConnection[]
    calendarEventParticipants?: CalendarEventParticipantConnection
    calendarEventParticipant?: CalendarEventParticipant
    calendarEventParticipantsGroupBy?: CalendarEventParticipantGroupByConnection[]
    companies?: CompanyConnection
    company?: Company
    companyDuplicates?: CompanyConnection[]
    companiesGroupBy?: CompanyGroupByConnection[]
    connectedAccounts?: ConnectedAccountConnection
    connectedAccount?: ConnectedAccount
    connectedAccountsGroupBy?: ConnectedAccountGroupByConnection[]
    dashboards?: DashboardConnection
    dashboard?: Dashboard
    dashboardsGroupBy?: DashboardGroupByConnection[]
    favorites?: FavoriteConnection
    favorite?: Favorite
    favoritesGroupBy?: FavoriteGroupByConnection[]
    favoriteFolders?: FavoriteFolderConnection
    favoriteFolder?: FavoriteFolder
    favoriteFoldersGroupBy?: FavoriteFolderGroupByConnection[]
    timelineActivities?: TimelineActivityConnection
    timelineActivity?: TimelineActivity
    timelineActivitiesGroupBy?: TimelineActivityGroupByConnection[]
    viewFields?: ViewFieldConnection
    viewField?: ViewField
    viewFieldsGroupBy?: ViewFieldGroupByConnection[]
    viewFilterGroups?: ViewFilterGroupConnection
    viewFilterGroup?: ViewFilterGroup
    viewFilterGroupsGroupBy?: ViewFilterGroupGroupByConnection[]
    viewGroups?: ViewGroupConnection
    viewGroup?: ViewGroup
    viewGroupsGroupBy?: ViewGroupGroupByConnection[]
    viewFilters?: ViewFilterConnection
    viewFilter?: ViewFilter
    viewFiltersGroupBy?: ViewFilterGroupByConnection[]
    viewSorts?: ViewSortConnection
    viewSort?: ViewSort
    viewSortsGroupBy?: ViewSortGroupByConnection[]
    views?: ViewConnection
    view?: View
    viewsGroupBy?: ViewGroupByConnection[]
    workflows?: WorkflowConnection
    workflow?: Workflow
    workflowsGroupBy?: WorkflowGroupByConnection[]
    workflowVersions?: WorkflowVersionConnection
    workflowVersion?: WorkflowVersion
    workflowVersionsGroupBy?: WorkflowVersionGroupByConnection[]
    workflowRuns?: WorkflowRunConnection
    workflowRun?: WorkflowRun
    workflowRunsGroupBy?: WorkflowRunGroupByConnection[]
    workflowAutomatedTriggers?: WorkflowAutomatedTriggerConnection
    workflowAutomatedTrigger?: WorkflowAutomatedTrigger
    workflowAutomatedTriggersGroupBy?: WorkflowAutomatedTriggerGroupByConnection[]
    workspaceMembers?: WorkspaceMemberConnection
    workspaceMember?: WorkspaceMember
    workspaceMembersGroupBy?: WorkspaceMemberGroupByConnection[]
    messages?: MessageConnection
    message?: Message
    messagesGroupBy?: MessageGroupByConnection[]
    messageThreads?: MessageThreadConnection
    messageThread?: MessageThread
    messageThreadsGroupBy?: MessageThreadGroupByConnection[]
    messageChannels?: MessageChannelConnection
    messageChannel?: MessageChannel
    messageChannelsGroupBy?: MessageChannelGroupByConnection[]
    messageParticipants?: MessageParticipantConnection
    messageParticipant?: MessageParticipant
    messageParticipantsGroupBy?: MessageParticipantGroupByConnection[]
    messageFolders?: MessageFolderConnection
    messageFolder?: MessageFolder
    messageFoldersGroupBy?: MessageFolderGroupByConnection[]
    messageChannelMessageAssociations?: MessageChannelMessageAssociationConnection
    messageChannelMessageAssociation?: MessageChannelMessageAssociation
    messageChannelMessageAssociationsGroupBy?: MessageChannelMessageAssociationGroupByConnection[]
    notes?: NoteConnection
    note?: Note
    notesGroupBy?: NoteGroupByConnection[]
    noteTargets?: NoteTargetConnection
    noteTarget?: NoteTarget
    noteTargetsGroupBy?: NoteTargetGroupByConnection[]
    opportunities?: OpportunityConnection
    opportunity?: Opportunity
    opportunitiesGroupBy?: OpportunityGroupByConnection[]
    people?: PersonConnection
    person?: Person
    personDuplicates?: PersonConnection[]
    peopleGroupBy?: PersonGroupByConnection[]
    tasks?: TaskConnection
    task?: Task
    tasksGroupBy?: TaskGroupByConnection[]
    taskTargets?: TaskTargetConnection
    taskTarget?: TaskTarget
    taskTargetsGroupBy?: TaskTargetGroupByConnection[]
    pets?: PetConnection
    pet?: Pet
    petsGroupBy?: PetGroupByConnection[]
    rockets?: RocketConnection
    rocket?: Rocket
    rocketsGroupBy?: RocketGroupByConnection[]
    surveyResults?: SurveyResultConnection
    surveyResult?: SurveyResult
    surveyResultsGroupBy?: SurveyResultGroupByConnection[]
    __typename: 'Query'
}


/** This enum to filter by nullability */
export type FilterIs = 'NULL' | 'NOT_NULL' | 'NotNull' | 'Null'

export interface Mutation {
    createObjectEvent: Analytics
    trackAnalytics: Analytics
    deleteOneObject: Object
    updateOneObject: Object
    createOneObject: Object
    updateCoreViewField: CoreViewField
    createCoreViewField: CoreViewField
    deleteCoreViewField: CoreViewField
    destroyCoreViewField: CoreViewField
    createCoreView: CoreView
    updateCoreView: CoreView
    deleteCoreView: Scalars['Boolean']
    destroyCoreView: Scalars['Boolean']
    createCoreViewSort: CoreViewSort
    updateCoreViewSort: CoreViewSort
    deleteCoreViewSort: Scalars['Boolean']
    destroyCoreViewSort: Scalars['Boolean']
    createCoreViewGroup: CoreViewGroup
    updateCoreViewGroup: CoreViewGroup
    deleteCoreViewGroup: CoreViewGroup
    destroyCoreViewGroup: CoreViewGroup
    createCoreViewFilterGroup: CoreViewFilterGroup
    updateCoreViewFilterGroup: CoreViewFilterGroup
    deleteCoreViewFilterGroup: Scalars['Boolean']
    destroyCoreViewFilterGroup: Scalars['Boolean']
    createCoreViewFilter: CoreViewFilter
    updateCoreViewFilter: CoreViewFilter
    deleteCoreViewFilter: CoreViewFilter
    destroyCoreViewFilter: CoreViewFilter
    deleteOneServerlessFunction: ServerlessFunction
    updateOneServerlessFunction: ServerlessFunction
    createOneServerlessFunction: ServerlessFunction
    executeOneServerlessFunction: ServerlessFunctionExecutionResult
    publishServerlessFunction: ServerlessFunction
    createOneServerlessFunctionLayer: ServerlessFunctionLayer
    createFile: File
    deleteFile: File
    uploadFile: SignedFileDTO
    uploadImage: SignedFileDTO
    deleteOneDatabaseEventTrigger: DatabaseEventTrigger
    updateOneDatabaseEventTrigger: DatabaseEventTrigger
    createOneDatabaseEventTrigger: DatabaseEventTrigger
    deleteOneCronTrigger: CronTrigger
    updateOneCronTrigger: CronTrigger
    createOneCronTrigger: CronTrigger
    deleteOneRouteTrigger: RouteTrigger
    updateOneRouteTrigger: RouteTrigger
    createOneRouteTrigger: RouteTrigger
    getAuthorizationUrlForSSO: GetAuthorizationUrlForSSOOutput
    getLoginTokenFromCredentials: LoginToken
    signIn: AvailableWorkspacesAndAccessTokensOutput
    getLoginTokenFromEmailVerificationToken: GetLoginTokenFromEmailVerificationTokenOutput
    getWorkspaceAgnosticTokenFromEmailVerificationToken: AvailableWorkspacesAndAccessTokensOutput
    getAuthTokensFromOTP: AuthTokens
    signUp: AvailableWorkspacesAndAccessTokensOutput
    signUpInWorkspace: SignUpOutput
    signUpInNewWorkspace: SignUpOutput
    generateTransientToken: TransientToken
    getAuthTokensFromLoginToken: AuthTokens
    authorizeApp: AuthorizeApp
    renewToken: AuthTokens
    generateApiKeyToken: ApiKeyToken
    emailPasswordResetLink: EmailPasswordResetLink
    updatePasswordViaResetToken: InvalidatePassword
    createApiKey: ApiKey
    updateApiKey?: ApiKey
    revokeApiKey?: ApiKey
    assignRoleToApiKey: Scalars['Boolean']
    initiateOTPProvisioning: InitiateTwoFactorAuthenticationProvisioningOutput
    initiateOTPProvisioningForAuthenticatedUser: InitiateTwoFactorAuthenticationProvisioningOutput
    deleteTwoFactorAuthenticationMethod: DeleteTwoFactorAuthenticationMethodOutput
    verifyTwoFactorAuthenticationMethodForAuthenticatedUser: VerifyTwoFactorAuthenticationMethodOutput
    uploadProfilePicture: SignedFileDTO
    deleteUser: User
    deleteWorkspaceInvitation: Scalars['String']
    resendWorkspaceInvitation: SendInvitationsOutput
    sendInvitations: SendInvitationsOutput
    skipSyncEmailOnboardingStep: OnboardingStepSuccess
    skipBookOnboardingStep: OnboardingStepSuccess
    checkoutSession: BillingSessionOutput
    switchSubscriptionInterval: BillingUpdateOutput
    switchBillingPlan: BillingUpdateOutput
    cancelSwitchBillingPlan: BillingUpdateOutput
    cancelSwitchBillingInterval: BillingUpdateOutput
    setMeteredSubscriptionPrice: BillingUpdateOutput
    endSubscriptionTrialPeriod: BillingEndTrialPeriodOutput
    cancelSwitchMeteredPrice: BillingUpdateOutput
    createApprovedAccessDomain: ApprovedAccessDomain
    deleteApprovedAccessDomain: Scalars['Boolean']
    validateApprovedAccessDomain: ApprovedAccessDomain
    activateWorkspace: Workspace
    updateWorkspace: Workspace
    uploadWorkspaceLogo: SignedFileDTO
    deleteCurrentWorkspace: Workspace
    checkCustomDomainValidRecords?: DomainValidRecords
    createOneAgent: Agent
    updateOneAgent: Agent
    deleteOneAgent: Agent
    createAgentHandoff: Scalars['Boolean']
    removeAgentHandoff: Scalars['Boolean']
    createAgentChatThread: AgentChatThread
    updateWorkspaceMemberRole: WorkspaceMember
    createOneRole: Role
    updateOneRole: Role
    deleteOneRole: Scalars['String']
    upsertObjectPermissions: ObjectPermission[]
    upsertPermissionFlags: PermissionFlag[]
    upsertFieldPermissions: FieldPermission[]
    assignRoleToAgent: Scalars['Boolean']
    removeRoleFromAgent: Scalars['Boolean']
    createOneField: Field
    updateOneField: Field
    deleteOneField: Field
    resendEmailVerificationToken: ResendEmailVerificationTokenOutput
    createOIDCIdentityProvider: SetupSsoOutput
    createSAMLIdentityProvider: SetupSsoOutput
    deleteSSOIdentityProvider: DeleteSsoOutput
    editSSOIdentityProvider: EditSsoOutput
    impersonate: ImpersonateOutput
    createPageLayout: PageLayout
    updatePageLayout: PageLayout
    deletePageLayout: PageLayout
    destroyPageLayout: Scalars['Boolean']
    restorePageLayout: PageLayout
    updatePageLayoutWithTabsAndWidgets: PageLayout
    createPageLayoutTab: PageLayoutTab
    updatePageLayoutTab: PageLayoutTab
    deletePageLayoutTab: Scalars['Boolean']
    destroyPageLayoutTab: Scalars['Boolean']
    restorePageLayoutTab: PageLayoutTab
    createPageLayoutWidget: PageLayoutWidget
    updatePageLayoutWidget: PageLayoutWidget
    deletePageLayoutWidget: PageLayoutWidget
    destroyPageLayoutWidget: Scalars['Boolean']
    restorePageLayoutWidget: PageLayoutWidget
    createWebhook: Webhook
    updateWebhook?: Webhook
    deleteWebhook: Scalars['Boolean']
    startChannelSync: ChannelSyncSuccess
    saveImapSmtpCaldavAccount: ImapSmtpCaldavConnectionSuccess
    updateLabPublicFeatureFlag: FeatureFlagDTO
    userLookupAdminPanel: UserLookup
    updateWorkspaceFeatureFlag: Scalars['Boolean']
    createDatabaseConfigVariable: Scalars['Boolean']
    updateDatabaseConfigVariable: Scalars['Boolean']
    deleteDatabaseConfigVariable: Scalars['Boolean']
    activateWorkflowVersion: Scalars['Boolean']
    deactivateWorkflowVersion: Scalars['Boolean']
    runWorkflowVersion: WorkflowRun
    computeStepOutputSchema: Scalars['JSON']
    createWorkflowVersionStep: WorkflowVersionStepChanges
    updateWorkflowVersionStep: WorkflowAction
    deleteWorkflowVersionStep: WorkflowVersionStepChanges
    submitFormStep: Scalars['Boolean']
    updateWorkflowRunStep: WorkflowAction
    duplicateWorkflowVersionStep: WorkflowVersionStepChanges
    createWorkflowVersionEdge: WorkflowVersionStepChanges
    deleteWorkflowVersionEdge: WorkflowVersionStepChanges
    createDraftFromWorkflowVersion: WorkflowVersionDTO
    updateWorkflowVersionPositions: Scalars['Boolean']
    enablePostgresProxy: PostgresCredentials
    disablePostgresProxy: PostgresCredentials
    createPublicDomain: PublicDomain
    deletePublicDomain: Scalars['Boolean']
    checkPublicDomainValidRecords?: DomainValidRecords
    createEmailingDomain: EmailingDomain
    deleteEmailingDomain: Scalars['Boolean']
    verifyEmailingDomain: EmailingDomain
    createOneAppToken: AppToken
    syncApplication: Scalars['Boolean']
    deleteApplication: Scalars['Boolean']
    updateOneApplicationVariable: Scalars['Boolean']
    createAttachments?: Attachment[]
    createAttachment?: Attachment
    updateAttachment?: Attachment
    deleteAttachment?: Attachment
    updateAttachments?: Attachment[]
    deleteAttachments?: Attachment[]
    destroyAttachment?: Attachment
    destroyAttachments?: Attachment[]
    restoreAttachment?: Attachment
    restoreAttachments?: Attachment[]
    createBlocklists?: Blocklist[]
    createBlocklist?: Blocklist
    updateBlocklist?: Blocklist
    deleteBlocklist?: Blocklist
    updateBlocklists?: Blocklist[]
    deleteBlocklists?: Blocklist[]
    destroyBlocklist?: Blocklist
    destroyBlocklists?: Blocklist[]
    restoreBlocklist?: Blocklist
    restoreBlocklists?: Blocklist[]
    createCalendarEvents?: CalendarEvent[]
    createCalendarEvent?: CalendarEvent
    updateCalendarEvent?: CalendarEvent
    deleteCalendarEvent?: CalendarEvent
    updateCalendarEvents?: CalendarEvent[]
    deleteCalendarEvents?: CalendarEvent[]
    destroyCalendarEvent?: CalendarEvent
    destroyCalendarEvents?: CalendarEvent[]
    restoreCalendarEvent?: CalendarEvent
    restoreCalendarEvents?: CalendarEvent[]
    createCalendarChannels?: CalendarChannel[]
    createCalendarChannel?: CalendarChannel
    updateCalendarChannel?: CalendarChannel
    deleteCalendarChannel?: CalendarChannel
    updateCalendarChannels?: CalendarChannel[]
    deleteCalendarChannels?: CalendarChannel[]
    destroyCalendarChannel?: CalendarChannel
    destroyCalendarChannels?: CalendarChannel[]
    restoreCalendarChannel?: CalendarChannel
    restoreCalendarChannels?: CalendarChannel[]
    createCalendarChannelEventAssociations?: CalendarChannelEventAssociation[]
    createCalendarChannelEventAssociation?: CalendarChannelEventAssociation
    updateCalendarChannelEventAssociation?: CalendarChannelEventAssociation
    deleteCalendarChannelEventAssociation?: CalendarChannelEventAssociation
    updateCalendarChannelEventAssociations?: CalendarChannelEventAssociation[]
    deleteCalendarChannelEventAssociations?: CalendarChannelEventAssociation[]
    destroyCalendarChannelEventAssociation?: CalendarChannelEventAssociation
    destroyCalendarChannelEventAssociations?: CalendarChannelEventAssociation[]
    restoreCalendarChannelEventAssociation?: CalendarChannelEventAssociation
    restoreCalendarChannelEventAssociations?: CalendarChannelEventAssociation[]
    createCalendarEventParticipants?: CalendarEventParticipant[]
    createCalendarEventParticipant?: CalendarEventParticipant
    updateCalendarEventParticipant?: CalendarEventParticipant
    deleteCalendarEventParticipant?: CalendarEventParticipant
    updateCalendarEventParticipants?: CalendarEventParticipant[]
    deleteCalendarEventParticipants?: CalendarEventParticipant[]
    destroyCalendarEventParticipant?: CalendarEventParticipant
    destroyCalendarEventParticipants?: CalendarEventParticipant[]
    restoreCalendarEventParticipant?: CalendarEventParticipant
    restoreCalendarEventParticipants?: CalendarEventParticipant[]
    createCompanies?: Company[]
    createCompany?: Company
    updateCompany?: Company
    deleteCompany?: Company
    updateCompanies?: Company[]
    deleteCompanies?: Company[]
    destroyCompany?: Company
    destroyCompanies?: Company[]
    restoreCompany?: Company
    restoreCompanies?: Company[]
    mergeCompanies?: Company
    createConnectedAccounts?: ConnectedAccount[]
    createConnectedAccount?: ConnectedAccount
    updateConnectedAccount?: ConnectedAccount
    deleteConnectedAccount?: ConnectedAccount
    updateConnectedAccounts?: ConnectedAccount[]
    deleteConnectedAccounts?: ConnectedAccount[]
    destroyConnectedAccount?: ConnectedAccount
    destroyConnectedAccounts?: ConnectedAccount[]
    restoreConnectedAccount?: ConnectedAccount
    restoreConnectedAccounts?: ConnectedAccount[]
    createDashboards?: Dashboard[]
    createDashboard?: Dashboard
    updateDashboard?: Dashboard
    deleteDashboard?: Dashboard
    updateDashboards?: Dashboard[]
    deleteDashboards?: Dashboard[]
    destroyDashboard?: Dashboard
    destroyDashboards?: Dashboard[]
    restoreDashboard?: Dashboard
    restoreDashboards?: Dashboard[]
    createFavorites?: Favorite[]
    createFavorite?: Favorite
    updateFavorite?: Favorite
    deleteFavorite?: Favorite
    updateFavorites?: Favorite[]
    deleteFavorites?: Favorite[]
    destroyFavorite?: Favorite
    destroyFavorites?: Favorite[]
    restoreFavorite?: Favorite
    restoreFavorites?: Favorite[]
    createFavoriteFolders?: FavoriteFolder[]
    createFavoriteFolder?: FavoriteFolder
    updateFavoriteFolder?: FavoriteFolder
    deleteFavoriteFolder?: FavoriteFolder
    updateFavoriteFolders?: FavoriteFolder[]
    deleteFavoriteFolders?: FavoriteFolder[]
    destroyFavoriteFolder?: FavoriteFolder
    destroyFavoriteFolders?: FavoriteFolder[]
    restoreFavoriteFolder?: FavoriteFolder
    restoreFavoriteFolders?: FavoriteFolder[]
    createTimelineActivities?: TimelineActivity[]
    createTimelineActivity?: TimelineActivity
    updateTimelineActivity?: TimelineActivity
    deleteTimelineActivity?: TimelineActivity
    updateTimelineActivities?: TimelineActivity[]
    deleteTimelineActivities?: TimelineActivity[]
    destroyTimelineActivity?: TimelineActivity
    destroyTimelineActivities?: TimelineActivity[]
    restoreTimelineActivity?: TimelineActivity
    restoreTimelineActivities?: TimelineActivity[]
    createViewFields?: ViewField[]
    createViewField?: ViewField
    updateViewField?: ViewField
    deleteViewField?: ViewField
    updateViewFields?: ViewField[]
    deleteViewFields?: ViewField[]
    destroyViewField?: ViewField
    destroyViewFields?: ViewField[]
    restoreViewField?: ViewField
    restoreViewFields?: ViewField[]
    createViewFilterGroups?: ViewFilterGroup[]
    createViewFilterGroup?: ViewFilterGroup
    updateViewFilterGroup?: ViewFilterGroup
    deleteViewFilterGroup?: ViewFilterGroup
    updateViewFilterGroups?: ViewFilterGroup[]
    deleteViewFilterGroups?: ViewFilterGroup[]
    destroyViewFilterGroup?: ViewFilterGroup
    destroyViewFilterGroups?: ViewFilterGroup[]
    restoreViewFilterGroup?: ViewFilterGroup
    restoreViewFilterGroups?: ViewFilterGroup[]
    createViewGroups?: ViewGroup[]
    createViewGroup?: ViewGroup
    updateViewGroup?: ViewGroup
    deleteViewGroup?: ViewGroup
    updateViewGroups?: ViewGroup[]
    deleteViewGroups?: ViewGroup[]
    destroyViewGroup?: ViewGroup
    destroyViewGroups?: ViewGroup[]
    restoreViewGroup?: ViewGroup
    restoreViewGroups?: ViewGroup[]
    createViewFilters?: ViewFilter[]
    createViewFilter?: ViewFilter
    updateViewFilter?: ViewFilter
    deleteViewFilter?: ViewFilter
    updateViewFilters?: ViewFilter[]
    deleteViewFilters?: ViewFilter[]
    destroyViewFilter?: ViewFilter
    destroyViewFilters?: ViewFilter[]
    restoreViewFilter?: ViewFilter
    restoreViewFilters?: ViewFilter[]
    createViewSorts?: ViewSort[]
    createViewSort?: ViewSort
    updateViewSort?: ViewSort
    deleteViewSort?: ViewSort
    updateViewSorts?: ViewSort[]
    deleteViewSorts?: ViewSort[]
    destroyViewSort?: ViewSort
    destroyViewSorts?: ViewSort[]
    restoreViewSort?: ViewSort
    restoreViewSorts?: ViewSort[]
    createViews?: View[]
    createView?: View
    updateView?: View
    deleteView?: View
    updateViews?: View[]
    deleteViews?: View[]
    destroyView?: View
    destroyViews?: View[]
    restoreView?: View
    restoreViews?: View[]
    createWorkflows?: Workflow[]
    createWorkflow?: Workflow
    updateWorkflow?: Workflow
    deleteWorkflow?: Workflow
    updateWorkflows?: Workflow[]
    deleteWorkflows?: Workflow[]
    destroyWorkflow?: Workflow
    destroyWorkflows?: Workflow[]
    restoreWorkflow?: Workflow
    restoreWorkflows?: Workflow[]
    createWorkflowVersions?: WorkflowVersion[]
    createWorkflowVersion?: WorkflowVersion
    updateWorkflowVersion?: WorkflowVersion
    deleteWorkflowVersion?: WorkflowVersion
    updateWorkflowVersions?: WorkflowVersion[]
    deleteWorkflowVersions?: WorkflowVersion[]
    destroyWorkflowVersion?: WorkflowVersion
    destroyWorkflowVersions?: WorkflowVersion[]
    restoreWorkflowVersion?: WorkflowVersion
    restoreWorkflowVersions?: WorkflowVersion[]
    createWorkflowRuns?: WorkflowRun[]
    createWorkflowRun?: WorkflowRun
    updateWorkflowRun?: WorkflowRun
    deleteWorkflowRun?: WorkflowRun
    updateWorkflowRuns?: WorkflowRun[]
    deleteWorkflowRuns?: WorkflowRun[]
    destroyWorkflowRun?: WorkflowRun
    destroyWorkflowRuns?: WorkflowRun[]
    restoreWorkflowRun?: WorkflowRun
    restoreWorkflowRuns?: WorkflowRun[]
    createWorkflowAutomatedTriggers?: WorkflowAutomatedTrigger[]
    createWorkflowAutomatedTrigger?: WorkflowAutomatedTrigger
    updateWorkflowAutomatedTrigger?: WorkflowAutomatedTrigger
    deleteWorkflowAutomatedTrigger?: WorkflowAutomatedTrigger
    updateWorkflowAutomatedTriggers?: WorkflowAutomatedTrigger[]
    deleteWorkflowAutomatedTriggers?: WorkflowAutomatedTrigger[]
    destroyWorkflowAutomatedTrigger?: WorkflowAutomatedTrigger
    destroyWorkflowAutomatedTriggers?: WorkflowAutomatedTrigger[]
    restoreWorkflowAutomatedTrigger?: WorkflowAutomatedTrigger
    restoreWorkflowAutomatedTriggers?: WorkflowAutomatedTrigger[]
    createWorkspaceMembers?: WorkspaceMember[]
    createWorkspaceMember?: WorkspaceMember
    updateWorkspaceMember?: WorkspaceMember
    deleteWorkspaceMember?: WorkspaceMember
    updateWorkspaceMembers?: WorkspaceMember[]
    deleteWorkspaceMembers?: WorkspaceMember[]
    destroyWorkspaceMember?: WorkspaceMember
    destroyWorkspaceMembers?: WorkspaceMember[]
    restoreWorkspaceMember?: WorkspaceMember
    restoreWorkspaceMembers?: WorkspaceMember[]
    createMessages?: Message[]
    createMessage?: Message
    updateMessage?: Message
    deleteMessage?: Message
    updateMessages?: Message[]
    deleteMessages?: Message[]
    destroyMessage?: Message
    destroyMessages?: Message[]
    restoreMessage?: Message
    restoreMessages?: Message[]
    createMessageThreads?: MessageThread[]
    createMessageThread?: MessageThread
    updateMessageThread?: MessageThread
    deleteMessageThread?: MessageThread
    updateMessageThreads?: MessageThread[]
    deleteMessageThreads?: MessageThread[]
    destroyMessageThread?: MessageThread
    destroyMessageThreads?: MessageThread[]
    restoreMessageThread?: MessageThread
    restoreMessageThreads?: MessageThread[]
    createMessageChannels?: MessageChannel[]
    createMessageChannel?: MessageChannel
    updateMessageChannel?: MessageChannel
    deleteMessageChannel?: MessageChannel
    updateMessageChannels?: MessageChannel[]
    deleteMessageChannels?: MessageChannel[]
    destroyMessageChannel?: MessageChannel
    destroyMessageChannels?: MessageChannel[]
    restoreMessageChannel?: MessageChannel
    restoreMessageChannels?: MessageChannel[]
    createMessageParticipants?: MessageParticipant[]
    createMessageParticipant?: MessageParticipant
    updateMessageParticipant?: MessageParticipant
    deleteMessageParticipant?: MessageParticipant
    updateMessageParticipants?: MessageParticipant[]
    deleteMessageParticipants?: MessageParticipant[]
    destroyMessageParticipant?: MessageParticipant
    destroyMessageParticipants?: MessageParticipant[]
    restoreMessageParticipant?: MessageParticipant
    restoreMessageParticipants?: MessageParticipant[]
    createMessageFolders?: MessageFolder[]
    createMessageFolder?: MessageFolder
    updateMessageFolder?: MessageFolder
    deleteMessageFolder?: MessageFolder
    updateMessageFolders?: MessageFolder[]
    deleteMessageFolders?: MessageFolder[]
    destroyMessageFolder?: MessageFolder
    destroyMessageFolders?: MessageFolder[]
    restoreMessageFolder?: MessageFolder
    restoreMessageFolders?: MessageFolder[]
    createMessageChannelMessageAssociations?: MessageChannelMessageAssociation[]
    createMessageChannelMessageAssociation?: MessageChannelMessageAssociation
    updateMessageChannelMessageAssociation?: MessageChannelMessageAssociation
    deleteMessageChannelMessageAssociation?: MessageChannelMessageAssociation
    updateMessageChannelMessageAssociations?: MessageChannelMessageAssociation[]
    deleteMessageChannelMessageAssociations?: MessageChannelMessageAssociation[]
    destroyMessageChannelMessageAssociation?: MessageChannelMessageAssociation
    destroyMessageChannelMessageAssociations?: MessageChannelMessageAssociation[]
    restoreMessageChannelMessageAssociation?: MessageChannelMessageAssociation
    restoreMessageChannelMessageAssociations?: MessageChannelMessageAssociation[]
    createNotes?: Note[]
    createNote?: Note
    updateNote?: Note
    deleteNote?: Note
    updateNotes?: Note[]
    deleteNotes?: Note[]
    destroyNote?: Note
    destroyNotes?: Note[]
    restoreNote?: Note
    restoreNotes?: Note[]
    createNoteTargets?: NoteTarget[]
    createNoteTarget?: NoteTarget
    updateNoteTarget?: NoteTarget
    deleteNoteTarget?: NoteTarget
    updateNoteTargets?: NoteTarget[]
    deleteNoteTargets?: NoteTarget[]
    destroyNoteTarget?: NoteTarget
    destroyNoteTargets?: NoteTarget[]
    restoreNoteTarget?: NoteTarget
    restoreNoteTargets?: NoteTarget[]
    createOpportunities?: Opportunity[]
    createOpportunity?: Opportunity
    updateOpportunity?: Opportunity
    deleteOpportunity?: Opportunity
    updateOpportunities?: Opportunity[]
    deleteOpportunities?: Opportunity[]
    destroyOpportunity?: Opportunity
    destroyOpportunities?: Opportunity[]
    restoreOpportunity?: Opportunity
    restoreOpportunities?: Opportunity[]
    createPeople?: Person[]
    createPerson?: Person
    updatePerson?: Person
    deletePerson?: Person
    updatePeople?: Person[]
    deletePeople?: Person[]
    destroyPerson?: Person
    destroyPeople?: Person[]
    restorePerson?: Person
    restorePeople?: Person[]
    mergePeople?: Person
    createTasks?: Task[]
    createTask?: Task
    updateTask?: Task
    deleteTask?: Task
    updateTasks?: Task[]
    deleteTasks?: Task[]
    destroyTask?: Task
    destroyTasks?: Task[]
    restoreTask?: Task
    restoreTasks?: Task[]
    createTaskTargets?: TaskTarget[]
    createTaskTarget?: TaskTarget
    updateTaskTarget?: TaskTarget
    deleteTaskTarget?: TaskTarget
    updateTaskTargets?: TaskTarget[]
    deleteTaskTargets?: TaskTarget[]
    destroyTaskTarget?: TaskTarget
    destroyTaskTargets?: TaskTarget[]
    restoreTaskTarget?: TaskTarget
    restoreTaskTargets?: TaskTarget[]
    createPets?: Pet[]
    createPet?: Pet
    updatePet?: Pet
    deletePet?: Pet
    updatePets?: Pet[]
    deletePets?: Pet[]
    destroyPet?: Pet
    destroyPets?: Pet[]
    restorePet?: Pet
    restorePets?: Pet[]
    createRockets?: Rocket[]
    createRocket?: Rocket
    updateRocket?: Rocket
    deleteRocket?: Rocket
    updateRockets?: Rocket[]
    deleteRockets?: Rocket[]
    destroyRocket?: Rocket
    destroyRockets?: Rocket[]
    restoreRocket?: Rocket
    restoreRockets?: Rocket[]
    createSurveyResults?: SurveyResult[]
    createSurveyResult?: SurveyResult
    updateSurveyResult?: SurveyResult
    deleteSurveyResult?: SurveyResult
    updateSurveyResults?: SurveyResult[]
    deleteSurveyResults?: SurveyResult[]
    destroySurveyResult?: SurveyResult
    destroySurveyResults?: SurveyResult[]
    restoreSurveyResult?: SurveyResult
    restoreSurveyResults?: SurveyResult[]
    __typename: 'Mutation'
}

export type AnalyticsType = 'PAGEVIEW' | 'TRACK'

export type FileFolder = 'ProfilePicture' | 'WorkspaceLogo' | 'Attachment' | 'PersonPicture' | 'ServerlessFunction' | 'ServerlessFunctionToDelete' | 'File' | 'AgentChat'

export interface Subscription {
    onDbEvent: OnDbEventDTO
    __typename: 'Subscription'
}

export interface Links {
    primaryLinkLabel?: Scalars['String']
    primaryLinkUrl?: Scalars['String']
    secondaryLinks?: Scalars['JSON']
    __typename: 'Links'
}


/** This enum is used to specify the order of results */
export type OrderByDirection = 'AscNullsFirst' | 'AscNullsLast' | 'DescNullsFirst' | 'DescNullsLast'

export interface Currency {
    amountMicros?: Scalars['BigFloat']
    currencyCode?: Scalars['String']
    __typename: 'Currency'
}

export interface Address {
    addressStreet1?: Scalars['String']
    addressStreet2?: Scalars['String']
    addressCity?: Scalars['String']
    addressPostcode?: Scalars['String']
    addressState?: Scalars['String']
    addressCountry?: Scalars['String']
    addressLat?: Scalars['BigFloat']
    addressLng?: Scalars['BigFloat']
    __typename: 'Address'
}

export type ActorSourceEnum = 'EMAIL' | 'CALENDAR' | 'WORKFLOW' | 'AGENT' | 'API' | 'IMPORT' | 'MANUAL' | 'SYSTEM' | 'WEBHOOK'

export interface Actor {
    source?: ActorSourceEnum
    workspaceMemberId?: Scalars['UUID']
    name?: Scalars['String']
    context?: Scalars['JSON']
    __typename: 'Actor'
}

export interface Emails {
    primaryEmail?: Scalars['String']
    additionalEmails?: Scalars['JSON']
    __typename: 'Emails'
}

export interface Phones {
    primaryPhoneNumber?: Scalars['String']
    primaryPhoneCountryCode?: Scalars['String']
    primaryPhoneCallingCode?: Scalars['String']
    additionalPhones?: Scalars['JSON']
    __typename: 'Phones'
}

export interface RichTextV2 {
    blocknote?: Scalars['String']
    markdown?: Scalars['String']
    __typename: 'RichTextV2'
}


/** Date granularity (e.g. day, month, quarter, year, day of the week, quarter of the year, month of the year) */
export type DateGranularityEnum = 'DAY' | 'MONTH' | 'QUARTER' | 'YEAR' | 'DAY_OF_THE_WEEK' | 'MONTH_OF_THE_YEAR' | 'QUARTER_OF_THE_YEAR' | 'NONE'


/** An attachment */
export interface Attachment {
    /** Attachment name */
    name?: Scalars['String']
    /** Attachment full path */
    fullPath?: Scalars['String']
    /** Attachment type */
    type?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Attachment author */
    authorId?: Scalars['ID']
    /** Attachment task */
    taskId?: Scalars['ID']
    /** Attachment note */
    noteId?: Scalars['ID']
    /** Attachment person */
    personId?: Scalars['ID']
    /** Attachment company */
    companyId?: Scalars['ID']
    /** Attachment opportunity */
    opportunityId?: Scalars['ID']
    /** Attachment dashboard */
    dashboardId?: Scalars['ID']
    /** Attachment workflow */
    workflowId?: Scalars['ID']
    /** Attachments Rocket */
    rocketId?: Scalars['ID']
    /** Attachments Pet */
    petId?: Scalars['ID']
    /** Attachments Survey result */
    surveyResultId?: Scalars['ID']
    /** Attachment author */
    author?: WorkspaceMember
    /** Attachment task */
    task?: Task
    /** Attachment note */
    note?: Note
    /** Attachment person */
    person?: Person
    /** Attachment company */
    company?: Company
    /** Attachment opportunity */
    opportunity?: Opportunity
    /** Attachment dashboard */
    dashboard?: Dashboard
    /** Attachment workflow */
    workflow?: Workflow
    /** Attachments Rocket */
    rocket?: Rocket
    /** Attachments Pet */
    pet?: Pet
    /** Attachments Survey result */
    surveyResult?: SurveyResult
    __typename: 'Attachment'
}


/** An attachment */
export interface AttachmentEdge {
    node?: Attachment
    cursor?: Scalars['Cursor']
    __typename: 'AttachmentEdge'
}


/** An attachment */
export interface AttachmentConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for fullPath */
    countUniqueValuesFullPath?: Scalars['Int']
    /** Number of empty values for fullPath */
    countEmptyFullPath?: Scalars['Int']
    /** Number of non-empty values for fullPath */
    countNotEmptyFullPath?: Scalars['Int']
    /** Percentage of empty values for fullPath */
    percentageEmptyFullPath?: Scalars['Float']
    /** Percentage of non-empty values for fullPath */
    percentageNotEmptyFullPath?: Scalars['Float']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: AttachmentEdge[]
    pageInfo?: PageInfo
    __typename: 'AttachmentConnection'
}


/** An attachment */
export interface AttachmentGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for fullPath */
    countUniqueValuesFullPath?: Scalars['Int']
    /** Number of empty values for fullPath */
    countEmptyFullPath?: Scalars['Int']
    /** Number of non-empty values for fullPath */
    countNotEmptyFullPath?: Scalars['Int']
    /** Percentage of empty values for fullPath */
    percentageEmptyFullPath?: Scalars['Float']
    /** Percentage of non-empty values for fullPath */
    percentageNotEmptyFullPath?: Scalars['Float']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: AttachmentEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'AttachmentGroupByConnection'
}


/** Blocklist */
export interface Blocklist {
    /** Handle */
    handle?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** WorkspaceMember */
    workspaceMemberId?: Scalars['ID']
    /** WorkspaceMember */
    workspaceMember?: WorkspaceMember
    __typename: 'Blocklist'
}


/** Blocklist */
export interface BlocklistEdge {
    node?: Blocklist
    cursor?: Scalars['Cursor']
    __typename: 'BlocklistEdge'
}


/** Blocklist */
export interface BlocklistConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: BlocklistEdge[]
    pageInfo?: PageInfo
    __typename: 'BlocklistConnection'
}


/** Blocklist */
export interface BlocklistGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: BlocklistEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'BlocklistGroupByConnection'
}


/** Calendar events */
export interface CalendarEvent {
    /** Title */
    title?: Scalars['String']
    /** Is canceled */
    isCanceled?: Scalars['Boolean']
    /** Is Full Day */
    isFullDay?: Scalars['Boolean']
    /** Start Date */
    startsAt?: Scalars['DateTime']
    /** End Date */
    endsAt?: Scalars['DateTime']
    /** Creation DateTime */
    externalCreatedAt?: Scalars['DateTime']
    /** Update DateTime */
    externalUpdatedAt?: Scalars['DateTime']
    /** Description */
    description?: Scalars['String']
    /** Location */
    location?: Scalars['String']
    /** iCal UID */
    iCalUID?: Scalars['String']
    /** Conference Solution */
    conferenceSolution?: Scalars['String']
    /** Meet Link */
    conferenceLink?: Links
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Calendar Channel Event Associations */
    calendarChannelEventAssociations?: CalendarChannelEventAssociationConnection
    /** Event Participants */
    calendarEventParticipants?: CalendarEventParticipantConnection
    __typename: 'CalendarEvent'
}


/** Calendar events */
export interface CalendarEventEdge {
    node?: CalendarEvent
    cursor?: Scalars['Cursor']
    __typename: 'CalendarEventEdge'
}


/** Calendar events */
export interface CalendarEventConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for isCanceled */
    countUniqueValuesIsCanceled?: Scalars['Int']
    /** Number of empty values for isCanceled */
    countEmptyIsCanceled?: Scalars['Int']
    /** Number of non-empty values for isCanceled */
    countNotEmptyIsCanceled?: Scalars['Int']
    /** Percentage of empty values for isCanceled */
    percentageEmptyIsCanceled?: Scalars['Float']
    /** Percentage of non-empty values for isCanceled */
    percentageNotEmptyIsCanceled?: Scalars['Float']
    /** Count of true values in the field isCanceled */
    countTrueIsCanceled?: Scalars['Int']
    /** Count of false values in the field isCanceled */
    countFalseIsCanceled?: Scalars['Int']
    /** Number of unique values for isFullDay */
    countUniqueValuesIsFullDay?: Scalars['Int']
    /** Number of empty values for isFullDay */
    countEmptyIsFullDay?: Scalars['Int']
    /** Number of non-empty values for isFullDay */
    countNotEmptyIsFullDay?: Scalars['Int']
    /** Percentage of empty values for isFullDay */
    percentageEmptyIsFullDay?: Scalars['Float']
    /** Percentage of non-empty values for isFullDay */
    percentageNotEmptyIsFullDay?: Scalars['Float']
    /** Count of true values in the field isFullDay */
    countTrueIsFullDay?: Scalars['Int']
    /** Count of false values in the field isFullDay */
    countFalseIsFullDay?: Scalars['Int']
    /** Number of unique values for startsAt */
    countUniqueValuesStartsAt?: Scalars['Int']
    /** Number of empty values for startsAt */
    countEmptyStartsAt?: Scalars['Int']
    /** Number of non-empty values for startsAt */
    countNotEmptyStartsAt?: Scalars['Int']
    /** Percentage of empty values for startsAt */
    percentageEmptyStartsAt?: Scalars['Float']
    /** Percentage of non-empty values for startsAt */
    percentageNotEmptyStartsAt?: Scalars['Float']
    /** Earliest date contained in the field startsAt */
    minStartsAt?: Scalars['DateTime']
    /** Latest date contained in the field startsAt */
    maxStartsAt?: Scalars['DateTime']
    /** Number of unique values for endsAt */
    countUniqueValuesEndsAt?: Scalars['Int']
    /** Number of empty values for endsAt */
    countEmptyEndsAt?: Scalars['Int']
    /** Number of non-empty values for endsAt */
    countNotEmptyEndsAt?: Scalars['Int']
    /** Percentage of empty values for endsAt */
    percentageEmptyEndsAt?: Scalars['Float']
    /** Percentage of non-empty values for endsAt */
    percentageNotEmptyEndsAt?: Scalars['Float']
    /** Earliest date contained in the field endsAt */
    minEndsAt?: Scalars['DateTime']
    /** Latest date contained in the field endsAt */
    maxEndsAt?: Scalars['DateTime']
    /** Number of unique values for externalCreatedAt */
    countUniqueValuesExternalCreatedAt?: Scalars['Int']
    /** Number of empty values for externalCreatedAt */
    countEmptyExternalCreatedAt?: Scalars['Int']
    /** Number of non-empty values for externalCreatedAt */
    countNotEmptyExternalCreatedAt?: Scalars['Int']
    /** Percentage of empty values for externalCreatedAt */
    percentageEmptyExternalCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for externalCreatedAt */
    percentageNotEmptyExternalCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field externalCreatedAt */
    minExternalCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field externalCreatedAt */
    maxExternalCreatedAt?: Scalars['DateTime']
    /** Number of unique values for externalUpdatedAt */
    countUniqueValuesExternalUpdatedAt?: Scalars['Int']
    /** Number of empty values for externalUpdatedAt */
    countEmptyExternalUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for externalUpdatedAt */
    countNotEmptyExternalUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for externalUpdatedAt */
    percentageEmptyExternalUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for externalUpdatedAt */
    percentageNotEmptyExternalUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field externalUpdatedAt */
    minExternalUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field externalUpdatedAt */
    maxExternalUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for description */
    countUniqueValuesDescription?: Scalars['Int']
    /** Number of empty values for description */
    countEmptyDescription?: Scalars['Int']
    /** Number of non-empty values for description */
    countNotEmptyDescription?: Scalars['Int']
    /** Percentage of empty values for description */
    percentageEmptyDescription?: Scalars['Float']
    /** Percentage of non-empty values for description */
    percentageNotEmptyDescription?: Scalars['Float']
    /** Number of unique values for location */
    countUniqueValuesLocation?: Scalars['Int']
    /** Number of empty values for location */
    countEmptyLocation?: Scalars['Int']
    /** Number of non-empty values for location */
    countNotEmptyLocation?: Scalars['Int']
    /** Percentage of empty values for location */
    percentageEmptyLocation?: Scalars['Float']
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: Scalars['Float']
    /** Number of unique values for iCalUID */
    countUniqueValuesICalUID?: Scalars['Int']
    /** Number of empty values for iCalUID */
    countEmptyICalUID?: Scalars['Int']
    /** Number of non-empty values for iCalUID */
    countNotEmptyICalUID?: Scalars['Int']
    /** Percentage of empty values for iCalUID */
    percentageEmptyICalUID?: Scalars['Float']
    /** Percentage of non-empty values for iCalUID */
    percentageNotEmptyICalUID?: Scalars['Float']
    /** Number of unique values for conferenceSolution */
    countUniqueValuesConferenceSolution?: Scalars['Int']
    /** Number of empty values for conferenceSolution */
    countEmptyConferenceSolution?: Scalars['Int']
    /** Number of non-empty values for conferenceSolution */
    countNotEmptyConferenceSolution?: Scalars['Int']
    /** Percentage of empty values for conferenceSolution */
    percentageEmptyConferenceSolution?: Scalars['Float']
    /** Percentage of non-empty values for conferenceSolution */
    percentageNotEmptyConferenceSolution?: Scalars['Float']
    /** Number of unique values for conferenceLink */
    countUniqueValuesConferenceLink?: Scalars['Int']
    /** Number of empty values for conferenceLink */
    countEmptyConferenceLink?: Scalars['Int']
    /** Number of non-empty values for conferenceLink */
    countNotEmptyConferenceLink?: Scalars['Int']
    /** Percentage of empty values for conferenceLink */
    percentageEmptyConferenceLink?: Scalars['Float']
    /** Percentage of non-empty values for conferenceLink */
    percentageNotEmptyConferenceLink?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarEventEdge[]
    pageInfo?: PageInfo
    __typename: 'CalendarEventConnection'
}


/** Calendar events */
export interface CalendarEventGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for isCanceled */
    countUniqueValuesIsCanceled?: Scalars['Int']
    /** Number of empty values for isCanceled */
    countEmptyIsCanceled?: Scalars['Int']
    /** Number of non-empty values for isCanceled */
    countNotEmptyIsCanceled?: Scalars['Int']
    /** Percentage of empty values for isCanceled */
    percentageEmptyIsCanceled?: Scalars['Float']
    /** Percentage of non-empty values for isCanceled */
    percentageNotEmptyIsCanceled?: Scalars['Float']
    /** Count of true values in the field isCanceled */
    countTrueIsCanceled?: Scalars['Int']
    /** Count of false values in the field isCanceled */
    countFalseIsCanceled?: Scalars['Int']
    /** Number of unique values for isFullDay */
    countUniqueValuesIsFullDay?: Scalars['Int']
    /** Number of empty values for isFullDay */
    countEmptyIsFullDay?: Scalars['Int']
    /** Number of non-empty values for isFullDay */
    countNotEmptyIsFullDay?: Scalars['Int']
    /** Percentage of empty values for isFullDay */
    percentageEmptyIsFullDay?: Scalars['Float']
    /** Percentage of non-empty values for isFullDay */
    percentageNotEmptyIsFullDay?: Scalars['Float']
    /** Count of true values in the field isFullDay */
    countTrueIsFullDay?: Scalars['Int']
    /** Count of false values in the field isFullDay */
    countFalseIsFullDay?: Scalars['Int']
    /** Number of unique values for startsAt */
    countUniqueValuesStartsAt?: Scalars['Int']
    /** Number of empty values for startsAt */
    countEmptyStartsAt?: Scalars['Int']
    /** Number of non-empty values for startsAt */
    countNotEmptyStartsAt?: Scalars['Int']
    /** Percentage of empty values for startsAt */
    percentageEmptyStartsAt?: Scalars['Float']
    /** Percentage of non-empty values for startsAt */
    percentageNotEmptyStartsAt?: Scalars['Float']
    /** Earliest date contained in the field startsAt */
    minStartsAt?: Scalars['DateTime']
    /** Latest date contained in the field startsAt */
    maxStartsAt?: Scalars['DateTime']
    /** Number of unique values for endsAt */
    countUniqueValuesEndsAt?: Scalars['Int']
    /** Number of empty values for endsAt */
    countEmptyEndsAt?: Scalars['Int']
    /** Number of non-empty values for endsAt */
    countNotEmptyEndsAt?: Scalars['Int']
    /** Percentage of empty values for endsAt */
    percentageEmptyEndsAt?: Scalars['Float']
    /** Percentage of non-empty values for endsAt */
    percentageNotEmptyEndsAt?: Scalars['Float']
    /** Earliest date contained in the field endsAt */
    minEndsAt?: Scalars['DateTime']
    /** Latest date contained in the field endsAt */
    maxEndsAt?: Scalars['DateTime']
    /** Number of unique values for externalCreatedAt */
    countUniqueValuesExternalCreatedAt?: Scalars['Int']
    /** Number of empty values for externalCreatedAt */
    countEmptyExternalCreatedAt?: Scalars['Int']
    /** Number of non-empty values for externalCreatedAt */
    countNotEmptyExternalCreatedAt?: Scalars['Int']
    /** Percentage of empty values for externalCreatedAt */
    percentageEmptyExternalCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for externalCreatedAt */
    percentageNotEmptyExternalCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field externalCreatedAt */
    minExternalCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field externalCreatedAt */
    maxExternalCreatedAt?: Scalars['DateTime']
    /** Number of unique values for externalUpdatedAt */
    countUniqueValuesExternalUpdatedAt?: Scalars['Int']
    /** Number of empty values for externalUpdatedAt */
    countEmptyExternalUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for externalUpdatedAt */
    countNotEmptyExternalUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for externalUpdatedAt */
    percentageEmptyExternalUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for externalUpdatedAt */
    percentageNotEmptyExternalUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field externalUpdatedAt */
    minExternalUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field externalUpdatedAt */
    maxExternalUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for description */
    countUniqueValuesDescription?: Scalars['Int']
    /** Number of empty values for description */
    countEmptyDescription?: Scalars['Int']
    /** Number of non-empty values for description */
    countNotEmptyDescription?: Scalars['Int']
    /** Percentage of empty values for description */
    percentageEmptyDescription?: Scalars['Float']
    /** Percentage of non-empty values for description */
    percentageNotEmptyDescription?: Scalars['Float']
    /** Number of unique values for location */
    countUniqueValuesLocation?: Scalars['Int']
    /** Number of empty values for location */
    countEmptyLocation?: Scalars['Int']
    /** Number of non-empty values for location */
    countNotEmptyLocation?: Scalars['Int']
    /** Percentage of empty values for location */
    percentageEmptyLocation?: Scalars['Float']
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: Scalars['Float']
    /** Number of unique values for iCalUID */
    countUniqueValuesICalUID?: Scalars['Int']
    /** Number of empty values for iCalUID */
    countEmptyICalUID?: Scalars['Int']
    /** Number of non-empty values for iCalUID */
    countNotEmptyICalUID?: Scalars['Int']
    /** Percentage of empty values for iCalUID */
    percentageEmptyICalUID?: Scalars['Float']
    /** Percentage of non-empty values for iCalUID */
    percentageNotEmptyICalUID?: Scalars['Float']
    /** Number of unique values for conferenceSolution */
    countUniqueValuesConferenceSolution?: Scalars['Int']
    /** Number of empty values for conferenceSolution */
    countEmptyConferenceSolution?: Scalars['Int']
    /** Number of non-empty values for conferenceSolution */
    countNotEmptyConferenceSolution?: Scalars['Int']
    /** Percentage of empty values for conferenceSolution */
    percentageEmptyConferenceSolution?: Scalars['Float']
    /** Percentage of non-empty values for conferenceSolution */
    percentageNotEmptyConferenceSolution?: Scalars['Float']
    /** Number of unique values for conferenceLink */
    countUniqueValuesConferenceLink?: Scalars['Int']
    /** Number of empty values for conferenceLink */
    countEmptyConferenceLink?: Scalars['Int']
    /** Number of non-empty values for conferenceLink */
    countNotEmptyConferenceLink?: Scalars['Int']
    /** Percentage of empty values for conferenceLink */
    percentageEmptyConferenceLink?: Scalars['Float']
    /** Percentage of non-empty values for conferenceLink */
    percentageNotEmptyConferenceLink?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarEventEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'CalendarEventGroupByConnection'
}


/** Sync status */
export type CalendarChannelSyncStatusEnum = 'ONGOING' | 'NOT_SYNCED' | 'ACTIVE' | 'FAILED_INSUFFICIENT_PERMISSIONS' | 'FAILED_UNKNOWN'


/** Sync stage */
export type CalendarChannelSyncStageEnum = 'CALENDAR_EVENT_LIST_FETCH_PENDING' | 'CALENDAR_EVENT_LIST_FETCH_SCHEDULED' | 'CALENDAR_EVENT_LIST_FETCH_ONGOING' | 'CALENDAR_EVENTS_IMPORT_PENDING' | 'CALENDAR_EVENTS_IMPORT_SCHEDULED' | 'CALENDAR_EVENTS_IMPORT_ONGOING' | 'FAILED' | 'FULL_CALENDAR_EVENT_LIST_FETCH_PENDING' | 'PARTIAL_CALENDAR_EVENT_LIST_FETCH_PENDING' | 'PENDING_CONFIGURATION'


/** Visibility */
export type CalendarChannelVisibilityEnum = 'METADATA' | 'SHARE_EVERYTHING'


/** Automatically create records for people you participated with in an event. */
export type CalendarChannelContactAutoCreationPolicyEnum = 'AS_PARTICIPANT_AND_ORGANIZER' | 'AS_PARTICIPANT' | 'AS_ORGANIZER' | 'NONE'


/** Calendar Channels */
export interface CalendarChannel {
    /** Handle */
    handle?: Scalars['String']
    /** Sync status */
    syncStatus?: CalendarChannelSyncStatusEnum
    /** Sync stage */
    syncStage?: CalendarChannelSyncStageEnum
    /** Visibility */
    visibility?: CalendarChannelVisibilityEnum
    /** Is Contact Auto Creation Enabled */
    isContactAutoCreationEnabled?: Scalars['Boolean']
    /** Automatically create records for people you participated with in an event. */
    contactAutoCreationPolicy?: CalendarChannelContactAutoCreationPolicyEnum
    /** Is Sync Enabled */
    isSyncEnabled?: Scalars['Boolean']
    /** Sync Cursor. Used for syncing events from the calendar provider */
    syncCursor?: Scalars['String']
    /** Last sync date */
    syncedAt?: Scalars['DateTime']
    /** Sync stage started at */
    syncStageStartedAt?: Scalars['DateTime']
    /** Throttle Failure Count */
    throttleFailureCount?: Scalars['Float']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Connected Account */
    connectedAccountId?: Scalars['ID']
    /** Connected Account */
    connectedAccount?: ConnectedAccount
    /** Calendar Channel Event Associations */
    calendarChannelEventAssociations?: CalendarChannelEventAssociationConnection
    __typename: 'CalendarChannel'
}


/** Calendar Channels */
export interface CalendarChannelEdge {
    node?: CalendarChannel
    cursor?: Scalars['Cursor']
    __typename: 'CalendarChannelEdge'
}


/** Calendar Channels */
export interface CalendarChannelConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: Scalars['Int']
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: Scalars['Int']
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: Scalars['Int']
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: Scalars['Float']
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: Scalars['Float']
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: Scalars['Int']
    /** Number of empty values for syncStage */
    countEmptySyncStage?: Scalars['Int']
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: Scalars['Int']
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: Scalars['Float']
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: Scalars['Float']
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: Scalars['Int']
    /** Number of empty values for visibility */
    countEmptyVisibility?: Scalars['Int']
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: Scalars['Int']
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: Scalars['Float']
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: Scalars['Float']
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: Scalars['Int']
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: Scalars['Int']
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: Scalars['Int']
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: Scalars['Int']
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: Scalars['Int']
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: Scalars['Float']
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: Scalars['Int']
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: Scalars['Int']
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: Scalars['Int']
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: Scalars['Int']
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: Scalars['Int']
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: Scalars['Float']
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: Scalars['Float']
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: Scalars['Int']
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: Scalars['Int']
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: Scalars['Int']
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: Scalars['Float']
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: Scalars['DateTime']
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: Scalars['Int']
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: Scalars['Int']
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: Scalars['Int']
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: Scalars['Float']
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: Scalars['DateTime']
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: Scalars['Int']
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: Scalars['Int']
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: Scalars['Int']
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: Scalars['Float']
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: Scalars['Float']
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: Scalars['Float']
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: Scalars['Float']
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: Scalars['Float']
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarChannelEdge[]
    pageInfo?: PageInfo
    __typename: 'CalendarChannelConnection'
}


/** Calendar Channels */
export interface CalendarChannelGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: Scalars['Int']
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: Scalars['Int']
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: Scalars['Int']
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: Scalars['Float']
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: Scalars['Float']
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: Scalars['Int']
    /** Number of empty values for syncStage */
    countEmptySyncStage?: Scalars['Int']
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: Scalars['Int']
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: Scalars['Float']
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: Scalars['Float']
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: Scalars['Int']
    /** Number of empty values for visibility */
    countEmptyVisibility?: Scalars['Int']
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: Scalars['Int']
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: Scalars['Float']
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: Scalars['Float']
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: Scalars['Int']
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: Scalars['Int']
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: Scalars['Int']
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: Scalars['Int']
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: Scalars['Int']
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: Scalars['Float']
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: Scalars['Int']
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: Scalars['Int']
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: Scalars['Int']
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: Scalars['Int']
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: Scalars['Int']
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: Scalars['Float']
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: Scalars['Float']
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: Scalars['Int']
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: Scalars['Int']
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: Scalars['Int']
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: Scalars['Float']
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: Scalars['DateTime']
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: Scalars['Int']
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: Scalars['Int']
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: Scalars['Int']
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: Scalars['Float']
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: Scalars['DateTime']
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: Scalars['Int']
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: Scalars['Int']
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: Scalars['Int']
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: Scalars['Float']
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: Scalars['Float']
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: Scalars['Float']
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: Scalars['Float']
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: Scalars['Float']
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarChannelEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'CalendarChannelGroupByConnection'
}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociation {
    /** Event external ID */
    eventExternalId?: Scalars['String']
    /** Recurring Event ID */
    recurringEventExternalId?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Channel ID */
    calendarChannelId?: Scalars['ID']
    /** Event ID */
    calendarEventId?: Scalars['ID']
    /** Channel ID */
    calendarChannel?: CalendarChannel
    /** Event ID */
    calendarEvent?: CalendarEvent
    __typename: 'CalendarChannelEventAssociation'
}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationEdge {
    node?: CalendarChannelEventAssociation
    cursor?: Scalars['Cursor']
    __typename: 'CalendarChannelEventAssociationEdge'
}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for eventExternalId */
    countUniqueValuesEventExternalId?: Scalars['Int']
    /** Number of empty values for eventExternalId */
    countEmptyEventExternalId?: Scalars['Int']
    /** Number of non-empty values for eventExternalId */
    countNotEmptyEventExternalId?: Scalars['Int']
    /** Percentage of empty values for eventExternalId */
    percentageEmptyEventExternalId?: Scalars['Float']
    /** Percentage of non-empty values for eventExternalId */
    percentageNotEmptyEventExternalId?: Scalars['Float']
    /** Number of unique values for recurringEventExternalId */
    countUniqueValuesRecurringEventExternalId?: Scalars['Int']
    /** Number of empty values for recurringEventExternalId */
    countEmptyRecurringEventExternalId?: Scalars['Int']
    /** Number of non-empty values for recurringEventExternalId */
    countNotEmptyRecurringEventExternalId?: Scalars['Int']
    /** Percentage of empty values for recurringEventExternalId */
    percentageEmptyRecurringEventExternalId?: Scalars['Float']
    /** Percentage of non-empty values for recurringEventExternalId */
    percentageNotEmptyRecurringEventExternalId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarChannelEventAssociationEdge[]
    pageInfo?: PageInfo
    __typename: 'CalendarChannelEventAssociationConnection'
}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for eventExternalId */
    countUniqueValuesEventExternalId?: Scalars['Int']
    /** Number of empty values for eventExternalId */
    countEmptyEventExternalId?: Scalars['Int']
    /** Number of non-empty values for eventExternalId */
    countNotEmptyEventExternalId?: Scalars['Int']
    /** Percentage of empty values for eventExternalId */
    percentageEmptyEventExternalId?: Scalars['Float']
    /** Percentage of non-empty values for eventExternalId */
    percentageNotEmptyEventExternalId?: Scalars['Float']
    /** Number of unique values for recurringEventExternalId */
    countUniqueValuesRecurringEventExternalId?: Scalars['Int']
    /** Number of empty values for recurringEventExternalId */
    countEmptyRecurringEventExternalId?: Scalars['Int']
    /** Number of non-empty values for recurringEventExternalId */
    countNotEmptyRecurringEventExternalId?: Scalars['Int']
    /** Percentage of empty values for recurringEventExternalId */
    percentageEmptyRecurringEventExternalId?: Scalars['Float']
    /** Percentage of non-empty values for recurringEventExternalId */
    percentageNotEmptyRecurringEventExternalId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarChannelEventAssociationEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'CalendarChannelEventAssociationGroupByConnection'
}


/** Response Status */
export type CalendarEventParticipantResponseStatusEnum = 'NEEDS_ACTION' | 'DECLINED' | 'TENTATIVE' | 'ACCEPTED'


/** Calendar event participants */
export interface CalendarEventParticipant {
    /** Handle */
    handle?: Scalars['String']
    /** Display Name */
    displayName?: Scalars['String']
    /** Is Organizer */
    isOrganizer?: Scalars['Boolean']
    /** Response Status */
    responseStatus?: CalendarEventParticipantResponseStatusEnum
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Event ID */
    calendarEventId?: Scalars['ID']
    /** Person */
    personId?: Scalars['ID']
    /** Workspace Member */
    workspaceMemberId?: Scalars['ID']
    /** Event ID */
    calendarEvent?: CalendarEvent
    /** Person */
    person?: Person
    /** Workspace Member */
    workspaceMember?: WorkspaceMember
    __typename: 'CalendarEventParticipant'
}


/** Calendar event participants */
export interface CalendarEventParticipantEdge {
    node?: CalendarEventParticipant
    cursor?: Scalars['Cursor']
    __typename: 'CalendarEventParticipantEdge'
}


/** Calendar event participants */
export interface CalendarEventParticipantConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: Scalars['Int']
    /** Number of empty values for displayName */
    countEmptyDisplayName?: Scalars['Int']
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: Scalars['Int']
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: Scalars['Float']
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: Scalars['Float']
    /** Number of unique values for isOrganizer */
    countUniqueValuesIsOrganizer?: Scalars['Int']
    /** Number of empty values for isOrganizer */
    countEmptyIsOrganizer?: Scalars['Int']
    /** Number of non-empty values for isOrganizer */
    countNotEmptyIsOrganizer?: Scalars['Int']
    /** Percentage of empty values for isOrganizer */
    percentageEmptyIsOrganizer?: Scalars['Float']
    /** Percentage of non-empty values for isOrganizer */
    percentageNotEmptyIsOrganizer?: Scalars['Float']
    /** Count of true values in the field isOrganizer */
    countTrueIsOrganizer?: Scalars['Int']
    /** Count of false values in the field isOrganizer */
    countFalseIsOrganizer?: Scalars['Int']
    /** Number of unique values for responseStatus */
    countUniqueValuesResponseStatus?: Scalars['Int']
    /** Number of empty values for responseStatus */
    countEmptyResponseStatus?: Scalars['Int']
    /** Number of non-empty values for responseStatus */
    countNotEmptyResponseStatus?: Scalars['Int']
    /** Percentage of empty values for responseStatus */
    percentageEmptyResponseStatus?: Scalars['Float']
    /** Percentage of non-empty values for responseStatus */
    percentageNotEmptyResponseStatus?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarEventParticipantEdge[]
    pageInfo?: PageInfo
    __typename: 'CalendarEventParticipantConnection'
}


/** Calendar event participants */
export interface CalendarEventParticipantGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: Scalars['Int']
    /** Number of empty values for displayName */
    countEmptyDisplayName?: Scalars['Int']
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: Scalars['Int']
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: Scalars['Float']
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: Scalars['Float']
    /** Number of unique values for isOrganizer */
    countUniqueValuesIsOrganizer?: Scalars['Int']
    /** Number of empty values for isOrganizer */
    countEmptyIsOrganizer?: Scalars['Int']
    /** Number of non-empty values for isOrganizer */
    countNotEmptyIsOrganizer?: Scalars['Int']
    /** Percentage of empty values for isOrganizer */
    percentageEmptyIsOrganizer?: Scalars['Float']
    /** Percentage of non-empty values for isOrganizer */
    percentageNotEmptyIsOrganizer?: Scalars['Float']
    /** Count of true values in the field isOrganizer */
    countTrueIsOrganizer?: Scalars['Int']
    /** Count of false values in the field isOrganizer */
    countFalseIsOrganizer?: Scalars['Int']
    /** Number of unique values for responseStatus */
    countUniqueValuesResponseStatus?: Scalars['Int']
    /** Number of empty values for responseStatus */
    countEmptyResponseStatus?: Scalars['Int']
    /** Number of non-empty values for responseStatus */
    countNotEmptyResponseStatus?: Scalars['Int']
    /** Percentage of empty values for responseStatus */
    percentageEmptyResponseStatus?: Scalars['Float']
    /** Percentage of non-empty values for responseStatus */
    percentageNotEmptyResponseStatus?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: CalendarEventParticipantEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'CalendarEventParticipantGroupByConnection'
}


/** Company's Work Policy */
export type CompanyWorkPolicyEnum = 'ON_SITE' | 'HYBRID' | 'REMOTE_WORK'


/** A company */
export interface Company {
    /** The company name */
    name?: Scalars['String']
    /** The company website URL. We use this url to fetch the company icon */
    domainName?: Links
    /** Number of employees in the company */
    employees?: Scalars['Float']
    /** The company Linkedin account */
    linkedinLink?: Links
    /** The company Twitter/X account */
    xLink?: Links
    /** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
    annualRecurringRevenue?: Currency
    /** Address of the company */
    address?: Address
    /** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
    idealCustomerProfile?: Scalars['Boolean']
    /** Company record position */
    position?: Scalars['Position']
    /** The creator of the record */
    createdBy?: Actor
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Your team member responsible for managing the company account */
    accountOwnerId?: Scalars['ID']
    /** Company's Tagline */
    tagline?: Scalars['String']
    /** Company's Intro Video */
    introVideo?: Links
    /** Company's Work Policy */
    workPolicy?: (CompanyWorkPolicyEnum | undefined)[]
    /** Company's Visa Sponsorship Policy */
    visaSponsorship?: Scalars['Boolean']
    /** People linked to the company. */
    people?: PersonConnection
    /** Your team member responsible for managing the company account */
    accountOwner?: WorkspaceMember
    /** Tasks tied to the company */
    taskTargets?: TaskTargetConnection
    /** Notes tied to the company */
    noteTargets?: NoteTargetConnection
    /** Opportunities linked to the company. */
    opportunities?: OpportunityConnection
    /** Favorites linked to the company */
    favorites?: FavoriteConnection
    /** Attachments linked to the company */
    attachments?: AttachmentConnection
    /** Timeline Activities linked to the company */
    timelineActivities?: TimelineActivityConnection
    __typename: 'Company'
}


/** A company */
export interface CompanyEdge {
    node?: Company
    cursor?: Scalars['Cursor']
    __typename: 'CompanyEdge'
}


/** A company */
export interface CompanyConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for domainName */
    countUniqueValuesDomainName?: Scalars['Int']
    /** Number of empty values for domainName */
    countEmptyDomainName?: Scalars['Int']
    /** Number of non-empty values for domainName */
    countNotEmptyDomainName?: Scalars['Int']
    /** Percentage of empty values for domainName */
    percentageEmptyDomainName?: Scalars['Float']
    /** Percentage of non-empty values for domainName */
    percentageNotEmptyDomainName?: Scalars['Float']
    /** Number of unique values for employees */
    countUniqueValuesEmployees?: Scalars['Int']
    /** Number of empty values for employees */
    countEmptyEmployees?: Scalars['Int']
    /** Number of non-empty values for employees */
    countNotEmptyEmployees?: Scalars['Int']
    /** Percentage of empty values for employees */
    percentageEmptyEmployees?: Scalars['Float']
    /** Percentage of non-empty values for employees */
    percentageNotEmptyEmployees?: Scalars['Float']
    /** Minimum amount contained in the field employees */
    minEmployees?: Scalars['Float']
    /** Maximum amount contained in the field employees */
    maxEmployees?: Scalars['Float']
    /** Average amount contained in the field employees */
    avgEmployees?: Scalars['Float']
    /** Sum of amounts contained in the field employees */
    sumEmployees?: Scalars['Float']
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: Scalars['Int']
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: Scalars['Int']
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: Scalars['Int']
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: Scalars['Float']
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: Scalars['Float']
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: Scalars['Int']
    /** Number of empty values for xLink */
    countEmptyXLink?: Scalars['Int']
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: Scalars['Int']
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: Scalars['Float']
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: Scalars['Float']
    /** Number of unique values for annualRecurringRevenue */
    countUniqueValuesAnnualRecurringRevenue?: Scalars['Int']
    /** Number of empty values for annualRecurringRevenue */
    countEmptyAnnualRecurringRevenue?: Scalars['Int']
    /** Number of non-empty values for annualRecurringRevenue */
    countNotEmptyAnnualRecurringRevenue?: Scalars['Int']
    /** Percentage of empty values for annualRecurringRevenue */
    percentageEmptyAnnualRecurringRevenue?: Scalars['Float']
    /** Percentage of non-empty values for annualRecurringRevenue */
    percentageNotEmptyAnnualRecurringRevenue?: Scalars['Float']
    /** Minimum amount contained in the field annualRecurringRevenue */
    minAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Maximal amount contained in the field annualRecurringRevenue */
    maxAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Sum of amounts contained in the field annualRecurringRevenue */
    sumAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Average amount contained in the field annualRecurringRevenue */
    avgAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Number of unique values for address */
    countUniqueValuesAddress?: Scalars['Int']
    /** Number of empty values for address */
    countEmptyAddress?: Scalars['Int']
    /** Number of non-empty values for address */
    countNotEmptyAddress?: Scalars['Int']
    /** Percentage of empty values for address */
    percentageEmptyAddress?: Scalars['Float']
    /** Percentage of non-empty values for address */
    percentageNotEmptyAddress?: Scalars['Float']
    /** Number of unique values for idealCustomerProfile */
    countUniqueValuesIdealCustomerProfile?: Scalars['Int']
    /** Number of empty values for idealCustomerProfile */
    countEmptyIdealCustomerProfile?: Scalars['Int']
    /** Number of non-empty values for idealCustomerProfile */
    countNotEmptyIdealCustomerProfile?: Scalars['Int']
    /** Percentage of empty values for idealCustomerProfile */
    percentageEmptyIdealCustomerProfile?: Scalars['Float']
    /** Percentage of non-empty values for idealCustomerProfile */
    percentageNotEmptyIdealCustomerProfile?: Scalars['Float']
    /** Count of true values in the field idealCustomerProfile */
    countTrueIdealCustomerProfile?: Scalars['Int']
    /** Count of false values in the field idealCustomerProfile */
    countFalseIdealCustomerProfile?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for tagline */
    countUniqueValuesTagline?: Scalars['Int']
    /** Number of empty values for tagline */
    countEmptyTagline?: Scalars['Int']
    /** Number of non-empty values for tagline */
    countNotEmptyTagline?: Scalars['Int']
    /** Percentage of empty values for tagline */
    percentageEmptyTagline?: Scalars['Float']
    /** Percentage of non-empty values for tagline */
    percentageNotEmptyTagline?: Scalars['Float']
    /** Number of unique values for introVideo */
    countUniqueValuesIntroVideo?: Scalars['Int']
    /** Number of empty values for introVideo */
    countEmptyIntroVideo?: Scalars['Int']
    /** Number of non-empty values for introVideo */
    countNotEmptyIntroVideo?: Scalars['Int']
    /** Percentage of empty values for introVideo */
    percentageEmptyIntroVideo?: Scalars['Float']
    /** Percentage of non-empty values for introVideo */
    percentageNotEmptyIntroVideo?: Scalars['Float']
    /** Number of unique values for workPolicy */
    countUniqueValuesWorkPolicy?: Scalars['Int']
    /** Number of empty values for workPolicy */
    countEmptyWorkPolicy?: Scalars['Int']
    /** Number of non-empty values for workPolicy */
    countNotEmptyWorkPolicy?: Scalars['Int']
    /** Percentage of empty values for workPolicy */
    percentageEmptyWorkPolicy?: Scalars['Float']
    /** Percentage of non-empty values for workPolicy */
    percentageNotEmptyWorkPolicy?: Scalars['Float']
    /** Number of unique values for visaSponsorship */
    countUniqueValuesVisaSponsorship?: Scalars['Int']
    /** Number of empty values for visaSponsorship */
    countEmptyVisaSponsorship?: Scalars['Int']
    /** Number of non-empty values for visaSponsorship */
    countNotEmptyVisaSponsorship?: Scalars['Int']
    /** Percentage of empty values for visaSponsorship */
    percentageEmptyVisaSponsorship?: Scalars['Float']
    /** Percentage of non-empty values for visaSponsorship */
    percentageNotEmptyVisaSponsorship?: Scalars['Float']
    /** Count of true values in the field visaSponsorship */
    countTrueVisaSponsorship?: Scalars['Int']
    /** Count of false values in the field visaSponsorship */
    countFalseVisaSponsorship?: Scalars['Int']
    edges?: CompanyEdge[]
    pageInfo?: PageInfo
    __typename: 'CompanyConnection'
}


/** A company */
export interface CompanyGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for domainName */
    countUniqueValuesDomainName?: Scalars['Int']
    /** Number of empty values for domainName */
    countEmptyDomainName?: Scalars['Int']
    /** Number of non-empty values for domainName */
    countNotEmptyDomainName?: Scalars['Int']
    /** Percentage of empty values for domainName */
    percentageEmptyDomainName?: Scalars['Float']
    /** Percentage of non-empty values for domainName */
    percentageNotEmptyDomainName?: Scalars['Float']
    /** Number of unique values for employees */
    countUniqueValuesEmployees?: Scalars['Int']
    /** Number of empty values for employees */
    countEmptyEmployees?: Scalars['Int']
    /** Number of non-empty values for employees */
    countNotEmptyEmployees?: Scalars['Int']
    /** Percentage of empty values for employees */
    percentageEmptyEmployees?: Scalars['Float']
    /** Percentage of non-empty values for employees */
    percentageNotEmptyEmployees?: Scalars['Float']
    /** Minimum amount contained in the field employees */
    minEmployees?: Scalars['Float']
    /** Maximum amount contained in the field employees */
    maxEmployees?: Scalars['Float']
    /** Average amount contained in the field employees */
    avgEmployees?: Scalars['Float']
    /** Sum of amounts contained in the field employees */
    sumEmployees?: Scalars['Float']
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: Scalars['Int']
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: Scalars['Int']
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: Scalars['Int']
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: Scalars['Float']
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: Scalars['Float']
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: Scalars['Int']
    /** Number of empty values for xLink */
    countEmptyXLink?: Scalars['Int']
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: Scalars['Int']
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: Scalars['Float']
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: Scalars['Float']
    /** Number of unique values for annualRecurringRevenue */
    countUniqueValuesAnnualRecurringRevenue?: Scalars['Int']
    /** Number of empty values for annualRecurringRevenue */
    countEmptyAnnualRecurringRevenue?: Scalars['Int']
    /** Number of non-empty values for annualRecurringRevenue */
    countNotEmptyAnnualRecurringRevenue?: Scalars['Int']
    /** Percentage of empty values for annualRecurringRevenue */
    percentageEmptyAnnualRecurringRevenue?: Scalars['Float']
    /** Percentage of non-empty values for annualRecurringRevenue */
    percentageNotEmptyAnnualRecurringRevenue?: Scalars['Float']
    /** Minimum amount contained in the field annualRecurringRevenue */
    minAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Maximal amount contained in the field annualRecurringRevenue */
    maxAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Sum of amounts contained in the field annualRecurringRevenue */
    sumAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Average amount contained in the field annualRecurringRevenue */
    avgAnnualRecurringRevenueAmountMicros?: Scalars['Float']
    /** Number of unique values for address */
    countUniqueValuesAddress?: Scalars['Int']
    /** Number of empty values for address */
    countEmptyAddress?: Scalars['Int']
    /** Number of non-empty values for address */
    countNotEmptyAddress?: Scalars['Int']
    /** Percentage of empty values for address */
    percentageEmptyAddress?: Scalars['Float']
    /** Percentage of non-empty values for address */
    percentageNotEmptyAddress?: Scalars['Float']
    /** Number of unique values for idealCustomerProfile */
    countUniqueValuesIdealCustomerProfile?: Scalars['Int']
    /** Number of empty values for idealCustomerProfile */
    countEmptyIdealCustomerProfile?: Scalars['Int']
    /** Number of non-empty values for idealCustomerProfile */
    countNotEmptyIdealCustomerProfile?: Scalars['Int']
    /** Percentage of empty values for idealCustomerProfile */
    percentageEmptyIdealCustomerProfile?: Scalars['Float']
    /** Percentage of non-empty values for idealCustomerProfile */
    percentageNotEmptyIdealCustomerProfile?: Scalars['Float']
    /** Count of true values in the field idealCustomerProfile */
    countTrueIdealCustomerProfile?: Scalars['Int']
    /** Count of false values in the field idealCustomerProfile */
    countFalseIdealCustomerProfile?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for tagline */
    countUniqueValuesTagline?: Scalars['Int']
    /** Number of empty values for tagline */
    countEmptyTagline?: Scalars['Int']
    /** Number of non-empty values for tagline */
    countNotEmptyTagline?: Scalars['Int']
    /** Percentage of empty values for tagline */
    percentageEmptyTagline?: Scalars['Float']
    /** Percentage of non-empty values for tagline */
    percentageNotEmptyTagline?: Scalars['Float']
    /** Number of unique values for introVideo */
    countUniqueValuesIntroVideo?: Scalars['Int']
    /** Number of empty values for introVideo */
    countEmptyIntroVideo?: Scalars['Int']
    /** Number of non-empty values for introVideo */
    countNotEmptyIntroVideo?: Scalars['Int']
    /** Percentage of empty values for introVideo */
    percentageEmptyIntroVideo?: Scalars['Float']
    /** Percentage of non-empty values for introVideo */
    percentageNotEmptyIntroVideo?: Scalars['Float']
    /** Number of unique values for workPolicy */
    countUniqueValuesWorkPolicy?: Scalars['Int']
    /** Number of empty values for workPolicy */
    countEmptyWorkPolicy?: Scalars['Int']
    /** Number of non-empty values for workPolicy */
    countNotEmptyWorkPolicy?: Scalars['Int']
    /** Percentage of empty values for workPolicy */
    percentageEmptyWorkPolicy?: Scalars['Float']
    /** Percentage of non-empty values for workPolicy */
    percentageNotEmptyWorkPolicy?: Scalars['Float']
    /** Number of unique values for visaSponsorship */
    countUniqueValuesVisaSponsorship?: Scalars['Int']
    /** Number of empty values for visaSponsorship */
    countEmptyVisaSponsorship?: Scalars['Int']
    /** Number of non-empty values for visaSponsorship */
    countNotEmptyVisaSponsorship?: Scalars['Int']
    /** Percentage of empty values for visaSponsorship */
    percentageEmptyVisaSponsorship?: Scalars['Float']
    /** Percentage of non-empty values for visaSponsorship */
    percentageNotEmptyVisaSponsorship?: Scalars['Float']
    /** Count of true values in the field visaSponsorship */
    countTrueVisaSponsorship?: Scalars['Int']
    /** Count of false values in the field visaSponsorship */
    countFalseVisaSponsorship?: Scalars['Int']
    edges?: CompanyEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'CompanyGroupByConnection'
}


/** A connected account */
export interface ConnectedAccount {
    /** The account handle (email, username, phone number, etc.) */
    handle?: Scalars['String']
    /** The account provider */
    provider?: Scalars['String']
    /** Messaging provider access token */
    accessToken?: Scalars['String']
    /** Messaging provider refresh token */
    refreshToken?: Scalars['String']
    /** Last sync history ID */
    lastSyncHistoryId?: Scalars['String']
    /** Auth failed at */
    authFailedAt?: Scalars['DateTime']
    /** Handle Aliases */
    handleAliases?: Scalars['String']
    /** Scopes */
    scopes?: (Scalars['String'] | undefined)[]
    /** JSON object containing custom connection parameters */
    connectionParameters?: Scalars['JSON']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Account Owner */
    accountOwnerId?: Scalars['ID']
    /** Account Owner */
    accountOwner?: WorkspaceMember
    /** Message Channels */
    messageChannels?: MessageChannelConnection
    /** Calendar Channels */
    calendarChannels?: CalendarChannelConnection
    __typename: 'ConnectedAccount'
}


/** A connected account */
export interface ConnectedAccountEdge {
    node?: ConnectedAccount
    cursor?: Scalars['Cursor']
    __typename: 'ConnectedAccountEdge'
}


/** A connected account */
export interface ConnectedAccountConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for provider */
    countUniqueValuesProvider?: Scalars['Int']
    /** Number of empty values for provider */
    countEmptyProvider?: Scalars['Int']
    /** Number of non-empty values for provider */
    countNotEmptyProvider?: Scalars['Int']
    /** Percentage of empty values for provider */
    percentageEmptyProvider?: Scalars['Float']
    /** Percentage of non-empty values for provider */
    percentageNotEmptyProvider?: Scalars['Float']
    /** Number of unique values for accessToken */
    countUniqueValuesAccessToken?: Scalars['Int']
    /** Number of empty values for accessToken */
    countEmptyAccessToken?: Scalars['Int']
    /** Number of non-empty values for accessToken */
    countNotEmptyAccessToken?: Scalars['Int']
    /** Percentage of empty values for accessToken */
    percentageEmptyAccessToken?: Scalars['Float']
    /** Percentage of non-empty values for accessToken */
    percentageNotEmptyAccessToken?: Scalars['Float']
    /** Number of unique values for refreshToken */
    countUniqueValuesRefreshToken?: Scalars['Int']
    /** Number of empty values for refreshToken */
    countEmptyRefreshToken?: Scalars['Int']
    /** Number of non-empty values for refreshToken */
    countNotEmptyRefreshToken?: Scalars['Int']
    /** Percentage of empty values for refreshToken */
    percentageEmptyRefreshToken?: Scalars['Float']
    /** Percentage of non-empty values for refreshToken */
    percentageNotEmptyRefreshToken?: Scalars['Float']
    /** Number of unique values for lastSyncHistoryId */
    countUniqueValuesLastSyncHistoryId?: Scalars['Int']
    /** Number of empty values for lastSyncHistoryId */
    countEmptyLastSyncHistoryId?: Scalars['Int']
    /** Number of non-empty values for lastSyncHistoryId */
    countNotEmptyLastSyncHistoryId?: Scalars['Int']
    /** Percentage of empty values for lastSyncHistoryId */
    percentageEmptyLastSyncHistoryId?: Scalars['Float']
    /** Percentage of non-empty values for lastSyncHistoryId */
    percentageNotEmptyLastSyncHistoryId?: Scalars['Float']
    /** Number of unique values for authFailedAt */
    countUniqueValuesAuthFailedAt?: Scalars['Int']
    /** Number of empty values for authFailedAt */
    countEmptyAuthFailedAt?: Scalars['Int']
    /** Number of non-empty values for authFailedAt */
    countNotEmptyAuthFailedAt?: Scalars['Int']
    /** Percentage of empty values for authFailedAt */
    percentageEmptyAuthFailedAt?: Scalars['Float']
    /** Percentage of non-empty values for authFailedAt */
    percentageNotEmptyAuthFailedAt?: Scalars['Float']
    /** Earliest date contained in the field authFailedAt */
    minAuthFailedAt?: Scalars['DateTime']
    /** Latest date contained in the field authFailedAt */
    maxAuthFailedAt?: Scalars['DateTime']
    /** Number of unique values for handleAliases */
    countUniqueValuesHandleAliases?: Scalars['Int']
    /** Number of empty values for handleAliases */
    countEmptyHandleAliases?: Scalars['Int']
    /** Number of non-empty values for handleAliases */
    countNotEmptyHandleAliases?: Scalars['Int']
    /** Percentage of empty values for handleAliases */
    percentageEmptyHandleAliases?: Scalars['Float']
    /** Percentage of non-empty values for handleAliases */
    percentageNotEmptyHandleAliases?: Scalars['Float']
    /** Number of unique values for scopes */
    countUniqueValuesScopes?: Scalars['Int']
    /** Number of empty values for scopes */
    countEmptyScopes?: Scalars['Int']
    /** Number of non-empty values for scopes */
    countNotEmptyScopes?: Scalars['Int']
    /** Percentage of empty values for scopes */
    percentageEmptyScopes?: Scalars['Float']
    /** Percentage of non-empty values for scopes */
    percentageNotEmptyScopes?: Scalars['Float']
    /** Number of unique values for connectionParameters */
    countUniqueValuesConnectionParameters?: Scalars['Int']
    /** Number of empty values for connectionParameters */
    countEmptyConnectionParameters?: Scalars['Int']
    /** Number of non-empty values for connectionParameters */
    countNotEmptyConnectionParameters?: Scalars['Int']
    /** Percentage of empty values for connectionParameters */
    percentageEmptyConnectionParameters?: Scalars['Float']
    /** Percentage of non-empty values for connectionParameters */
    percentageNotEmptyConnectionParameters?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ConnectedAccountEdge[]
    pageInfo?: PageInfo
    __typename: 'ConnectedAccountConnection'
}


/** A connected account */
export interface ConnectedAccountGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for provider */
    countUniqueValuesProvider?: Scalars['Int']
    /** Number of empty values for provider */
    countEmptyProvider?: Scalars['Int']
    /** Number of non-empty values for provider */
    countNotEmptyProvider?: Scalars['Int']
    /** Percentage of empty values for provider */
    percentageEmptyProvider?: Scalars['Float']
    /** Percentage of non-empty values for provider */
    percentageNotEmptyProvider?: Scalars['Float']
    /** Number of unique values for accessToken */
    countUniqueValuesAccessToken?: Scalars['Int']
    /** Number of empty values for accessToken */
    countEmptyAccessToken?: Scalars['Int']
    /** Number of non-empty values for accessToken */
    countNotEmptyAccessToken?: Scalars['Int']
    /** Percentage of empty values for accessToken */
    percentageEmptyAccessToken?: Scalars['Float']
    /** Percentage of non-empty values for accessToken */
    percentageNotEmptyAccessToken?: Scalars['Float']
    /** Number of unique values for refreshToken */
    countUniqueValuesRefreshToken?: Scalars['Int']
    /** Number of empty values for refreshToken */
    countEmptyRefreshToken?: Scalars['Int']
    /** Number of non-empty values for refreshToken */
    countNotEmptyRefreshToken?: Scalars['Int']
    /** Percentage of empty values for refreshToken */
    percentageEmptyRefreshToken?: Scalars['Float']
    /** Percentage of non-empty values for refreshToken */
    percentageNotEmptyRefreshToken?: Scalars['Float']
    /** Number of unique values for lastSyncHistoryId */
    countUniqueValuesLastSyncHistoryId?: Scalars['Int']
    /** Number of empty values for lastSyncHistoryId */
    countEmptyLastSyncHistoryId?: Scalars['Int']
    /** Number of non-empty values for lastSyncHistoryId */
    countNotEmptyLastSyncHistoryId?: Scalars['Int']
    /** Percentage of empty values for lastSyncHistoryId */
    percentageEmptyLastSyncHistoryId?: Scalars['Float']
    /** Percentage of non-empty values for lastSyncHistoryId */
    percentageNotEmptyLastSyncHistoryId?: Scalars['Float']
    /** Number of unique values for authFailedAt */
    countUniqueValuesAuthFailedAt?: Scalars['Int']
    /** Number of empty values for authFailedAt */
    countEmptyAuthFailedAt?: Scalars['Int']
    /** Number of non-empty values for authFailedAt */
    countNotEmptyAuthFailedAt?: Scalars['Int']
    /** Percentage of empty values for authFailedAt */
    percentageEmptyAuthFailedAt?: Scalars['Float']
    /** Percentage of non-empty values for authFailedAt */
    percentageNotEmptyAuthFailedAt?: Scalars['Float']
    /** Earliest date contained in the field authFailedAt */
    minAuthFailedAt?: Scalars['DateTime']
    /** Latest date contained in the field authFailedAt */
    maxAuthFailedAt?: Scalars['DateTime']
    /** Number of unique values for handleAliases */
    countUniqueValuesHandleAliases?: Scalars['Int']
    /** Number of empty values for handleAliases */
    countEmptyHandleAliases?: Scalars['Int']
    /** Number of non-empty values for handleAliases */
    countNotEmptyHandleAliases?: Scalars['Int']
    /** Percentage of empty values for handleAliases */
    percentageEmptyHandleAliases?: Scalars['Float']
    /** Percentage of non-empty values for handleAliases */
    percentageNotEmptyHandleAliases?: Scalars['Float']
    /** Number of unique values for scopes */
    countUniqueValuesScopes?: Scalars['Int']
    /** Number of empty values for scopes */
    countEmptyScopes?: Scalars['Int']
    /** Number of non-empty values for scopes */
    countNotEmptyScopes?: Scalars['Int']
    /** Percentage of empty values for scopes */
    percentageEmptyScopes?: Scalars['Float']
    /** Percentage of non-empty values for scopes */
    percentageNotEmptyScopes?: Scalars['Float']
    /** Number of unique values for connectionParameters */
    countUniqueValuesConnectionParameters?: Scalars['Int']
    /** Number of empty values for connectionParameters */
    countEmptyConnectionParameters?: Scalars['Int']
    /** Number of non-empty values for connectionParameters */
    countNotEmptyConnectionParameters?: Scalars['Int']
    /** Percentage of empty values for connectionParameters */
    percentageEmptyConnectionParameters?: Scalars['Float']
    /** Percentage of non-empty values for connectionParameters */
    percentageNotEmptyConnectionParameters?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ConnectedAccountEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'ConnectedAccountGroupByConnection'
}


/** A dashboard */
export interface Dashboard {
    /** Dashboard title */
    title?: Scalars['String']
    /** Dashboard page layout */
    pageLayoutId?: Scalars['UUID']
    /** Dashboard record Position */
    position?: Scalars['Position']
    /** The creator of the record */
    createdBy?: Actor
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Timeline activities linked to the dashboard */
    timelineActivities?: TimelineActivityConnection
    /** Favorites linked to the dashboard */
    favorites?: FavoriteConnection
    /** Attachments linked to the dashboard */
    attachments?: AttachmentConnection
    __typename: 'Dashboard'
}


/** A dashboard */
export interface DashboardEdge {
    node?: Dashboard
    cursor?: Scalars['Cursor']
    __typename: 'DashboardEdge'
}


/** A dashboard */
export interface DashboardConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for pageLayoutId */
    countUniqueValuesPageLayoutId?: Scalars['Int']
    /** Number of empty values for pageLayoutId */
    countEmptyPageLayoutId?: Scalars['Int']
    /** Number of non-empty values for pageLayoutId */
    countNotEmptyPageLayoutId?: Scalars['Int']
    /** Percentage of empty values for pageLayoutId */
    percentageEmptyPageLayoutId?: Scalars['Float']
    /** Percentage of non-empty values for pageLayoutId */
    percentageNotEmptyPageLayoutId?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: DashboardEdge[]
    pageInfo?: PageInfo
    __typename: 'DashboardConnection'
}


/** A dashboard */
export interface DashboardGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for pageLayoutId */
    countUniqueValuesPageLayoutId?: Scalars['Int']
    /** Number of empty values for pageLayoutId */
    countEmptyPageLayoutId?: Scalars['Int']
    /** Number of non-empty values for pageLayoutId */
    countNotEmptyPageLayoutId?: Scalars['Int']
    /** Percentage of empty values for pageLayoutId */
    percentageEmptyPageLayoutId?: Scalars['Float']
    /** Percentage of non-empty values for pageLayoutId */
    percentageNotEmptyPageLayoutId?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: DashboardEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'DashboardGroupByConnection'
}


/** A favorite that can be accessed from the left menu */
export interface Favorite {
    /** Favorite position */
    position?: Scalars['Float']
    /** ViewId */
    viewId?: Scalars['UUID']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Favorite workspace member */
    forWorkspaceMemberId?: Scalars['ID']
    /** Favorite person */
    personId?: Scalars['ID']
    /** Favorite company */
    companyId?: Scalars['ID']
    /** The folder this favorite belongs to */
    favoriteFolderId?: Scalars['ID']
    /** Favorite opportunity */
    opportunityId?: Scalars['ID']
    /** Favorite workflow */
    workflowId?: Scalars['ID']
    /** Favorite workflow version */
    workflowVersionId?: Scalars['ID']
    /** Favorite workflow run */
    workflowRunId?: Scalars['ID']
    /** Favorite task */
    taskId?: Scalars['ID']
    /** Favorite note */
    noteId?: Scalars['ID']
    /** Favorite dashboard */
    dashboardId?: Scalars['ID']
    /** Favorites Rocket */
    rocketId?: Scalars['ID']
    /** Favorites Pet */
    petId?: Scalars['ID']
    /** Favorites Survey result */
    surveyResultId?: Scalars['ID']
    /** Favorite workspace member */
    forWorkspaceMember?: WorkspaceMember
    /** Favorite person */
    person?: Person
    /** Favorite company */
    company?: Company
    /** The folder this favorite belongs to */
    favoriteFolder?: FavoriteFolder
    /** Favorite opportunity */
    opportunity?: Opportunity
    /** Favorite workflow */
    workflow?: Workflow
    /** Favorite workflow version */
    workflowVersion?: WorkflowVersion
    /** Favorite workflow run */
    workflowRun?: WorkflowRun
    /** Favorite task */
    task?: Task
    /** Favorite note */
    note?: Note
    /** Favorite dashboard */
    dashboard?: Dashboard
    /** Favorites Rocket */
    rocket?: Rocket
    /** Favorites Pet */
    pet?: Pet
    /** Favorites Survey result */
    surveyResult?: SurveyResult
    __typename: 'Favorite'
}


/** A favorite that can be accessed from the left menu */
export interface FavoriteEdge {
    node?: Favorite
    cursor?: Scalars['Cursor']
    __typename: 'FavoriteEdge'
}


/** A favorite that can be accessed from the left menu */
export interface FavoriteConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for viewId */
    countUniqueValuesViewId?: Scalars['Int']
    /** Number of empty values for viewId */
    countEmptyViewId?: Scalars['Int']
    /** Number of non-empty values for viewId */
    countNotEmptyViewId?: Scalars['Int']
    /** Percentage of empty values for viewId */
    percentageEmptyViewId?: Scalars['Float']
    /** Percentage of non-empty values for viewId */
    percentageNotEmptyViewId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: FavoriteEdge[]
    pageInfo?: PageInfo
    __typename: 'FavoriteConnection'
}


/** A favorite that can be accessed from the left menu */
export interface FavoriteGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for viewId */
    countUniqueValuesViewId?: Scalars['Int']
    /** Number of empty values for viewId */
    countEmptyViewId?: Scalars['Int']
    /** Number of non-empty values for viewId */
    countNotEmptyViewId?: Scalars['Int']
    /** Percentage of empty values for viewId */
    percentageEmptyViewId?: Scalars['Float']
    /** Percentage of non-empty values for viewId */
    percentageNotEmptyViewId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: FavoriteEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'FavoriteGroupByConnection'
}


/** A Folder of favorites */
export interface FavoriteFolder {
    /** Favorite folder position */
    position?: Scalars['Float']
    /** Name of the favorite folder */
    name?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Favorites in this folder */
    favorites?: FavoriteConnection
    __typename: 'FavoriteFolder'
}


/** A Folder of favorites */
export interface FavoriteFolderEdge {
    node?: FavoriteFolder
    cursor?: Scalars['Cursor']
    __typename: 'FavoriteFolderEdge'
}


/** A Folder of favorites */
export interface FavoriteFolderConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: FavoriteFolderEdge[]
    pageInfo?: PageInfo
    __typename: 'FavoriteFolderConnection'
}


/** A Folder of favorites */
export interface FavoriteFolderGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: FavoriteFolderEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'FavoriteFolderGroupByConnection'
}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivity {
    /** Creation date */
    happensAt?: Scalars['DateTime']
    /** Event name */
    name?: Scalars['String']
    /** Json value for event details */
    properties?: Scalars['JSON']
    /** Cached record name */
    linkedRecordCachedName?: Scalars['String']
    /** Linked Record id */
    linkedRecordId?: Scalars['UUID']
    /** Linked Object Metadata Id */
    linkedObjectMetadataId?: Scalars['UUID']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Event workspace member */
    workspaceMemberId?: Scalars['ID']
    /** Event person */
    personId?: Scalars['ID']
    /** Event company */
    companyId?: Scalars['ID']
    /** Event opportunity */
    opportunityId?: Scalars['ID']
    /** Event note */
    noteId?: Scalars['ID']
    /** Event task */
    taskId?: Scalars['ID']
    /** Event workflow */
    workflowId?: Scalars['ID']
    /** Event workflow version */
    workflowVersionId?: Scalars['ID']
    /** Event workflow run */
    workflowRunId?: Scalars['ID']
    /** Event dashboard */
    dashboardId?: Scalars['ID']
    /** TimelineActivities Rocket */
    rocketId?: Scalars['ID']
    /** TimelineActivities Pet */
    petId?: Scalars['ID']
    /** TimelineActivities Survey result */
    surveyResultId?: Scalars['ID']
    /** Event workspace member */
    workspaceMember?: WorkspaceMember
    /** Event person */
    person?: Person
    /** Event company */
    company?: Company
    /** Event opportunity */
    opportunity?: Opportunity
    /** Event note */
    note?: Note
    /** Event task */
    task?: Task
    /** Event workflow */
    workflow?: Workflow
    /** Event workflow version */
    workflowVersion?: WorkflowVersion
    /** Event workflow run */
    workflowRun?: WorkflowRun
    /** Event dashboard */
    dashboard?: Dashboard
    /** TimelineActivities Rocket */
    rocket?: Rocket
    /** TimelineActivities Pet */
    pet?: Pet
    /** TimelineActivities Survey result */
    surveyResult?: SurveyResult
    __typename: 'TimelineActivity'
}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityEdge {
    node?: TimelineActivity
    cursor?: Scalars['Cursor']
    __typename: 'TimelineActivityEdge'
}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for happensAt */
    countUniqueValuesHappensAt?: Scalars['Int']
    /** Number of empty values for happensAt */
    countEmptyHappensAt?: Scalars['Int']
    /** Number of non-empty values for happensAt */
    countNotEmptyHappensAt?: Scalars['Int']
    /** Percentage of empty values for happensAt */
    percentageEmptyHappensAt?: Scalars['Float']
    /** Percentage of non-empty values for happensAt */
    percentageNotEmptyHappensAt?: Scalars['Float']
    /** Earliest date contained in the field happensAt */
    minHappensAt?: Scalars['DateTime']
    /** Latest date contained in the field happensAt */
    maxHappensAt?: Scalars['DateTime']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for properties */
    countUniqueValuesProperties?: Scalars['Int']
    /** Number of empty values for properties */
    countEmptyProperties?: Scalars['Int']
    /** Number of non-empty values for properties */
    countNotEmptyProperties?: Scalars['Int']
    /** Percentage of empty values for properties */
    percentageEmptyProperties?: Scalars['Float']
    /** Percentage of non-empty values for properties */
    percentageNotEmptyProperties?: Scalars['Float']
    /** Number of unique values for linkedRecordCachedName */
    countUniqueValuesLinkedRecordCachedName?: Scalars['Int']
    /** Number of empty values for linkedRecordCachedName */
    countEmptyLinkedRecordCachedName?: Scalars['Int']
    /** Number of non-empty values for linkedRecordCachedName */
    countNotEmptyLinkedRecordCachedName?: Scalars['Int']
    /** Percentage of empty values for linkedRecordCachedName */
    percentageEmptyLinkedRecordCachedName?: Scalars['Float']
    /** Percentage of non-empty values for linkedRecordCachedName */
    percentageNotEmptyLinkedRecordCachedName?: Scalars['Float']
    /** Number of unique values for linkedRecordId */
    countUniqueValuesLinkedRecordId?: Scalars['Int']
    /** Number of empty values for linkedRecordId */
    countEmptyLinkedRecordId?: Scalars['Int']
    /** Number of non-empty values for linkedRecordId */
    countNotEmptyLinkedRecordId?: Scalars['Int']
    /** Percentage of empty values for linkedRecordId */
    percentageEmptyLinkedRecordId?: Scalars['Float']
    /** Percentage of non-empty values for linkedRecordId */
    percentageNotEmptyLinkedRecordId?: Scalars['Float']
    /** Number of unique values for linkedObjectMetadataId */
    countUniqueValuesLinkedObjectMetadataId?: Scalars['Int']
    /** Number of empty values for linkedObjectMetadataId */
    countEmptyLinkedObjectMetadataId?: Scalars['Int']
    /** Number of non-empty values for linkedObjectMetadataId */
    countNotEmptyLinkedObjectMetadataId?: Scalars['Int']
    /** Percentage of empty values for linkedObjectMetadataId */
    percentageEmptyLinkedObjectMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for linkedObjectMetadataId */
    percentageNotEmptyLinkedObjectMetadataId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: TimelineActivityEdge[]
    pageInfo?: PageInfo
    __typename: 'TimelineActivityConnection'
}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for happensAt */
    countUniqueValuesHappensAt?: Scalars['Int']
    /** Number of empty values for happensAt */
    countEmptyHappensAt?: Scalars['Int']
    /** Number of non-empty values for happensAt */
    countNotEmptyHappensAt?: Scalars['Int']
    /** Percentage of empty values for happensAt */
    percentageEmptyHappensAt?: Scalars['Float']
    /** Percentage of non-empty values for happensAt */
    percentageNotEmptyHappensAt?: Scalars['Float']
    /** Earliest date contained in the field happensAt */
    minHappensAt?: Scalars['DateTime']
    /** Latest date contained in the field happensAt */
    maxHappensAt?: Scalars['DateTime']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for properties */
    countUniqueValuesProperties?: Scalars['Int']
    /** Number of empty values for properties */
    countEmptyProperties?: Scalars['Int']
    /** Number of non-empty values for properties */
    countNotEmptyProperties?: Scalars['Int']
    /** Percentage of empty values for properties */
    percentageEmptyProperties?: Scalars['Float']
    /** Percentage of non-empty values for properties */
    percentageNotEmptyProperties?: Scalars['Float']
    /** Number of unique values for linkedRecordCachedName */
    countUniqueValuesLinkedRecordCachedName?: Scalars['Int']
    /** Number of empty values for linkedRecordCachedName */
    countEmptyLinkedRecordCachedName?: Scalars['Int']
    /** Number of non-empty values for linkedRecordCachedName */
    countNotEmptyLinkedRecordCachedName?: Scalars['Int']
    /** Percentage of empty values for linkedRecordCachedName */
    percentageEmptyLinkedRecordCachedName?: Scalars['Float']
    /** Percentage of non-empty values for linkedRecordCachedName */
    percentageNotEmptyLinkedRecordCachedName?: Scalars['Float']
    /** Number of unique values for linkedRecordId */
    countUniqueValuesLinkedRecordId?: Scalars['Int']
    /** Number of empty values for linkedRecordId */
    countEmptyLinkedRecordId?: Scalars['Int']
    /** Number of non-empty values for linkedRecordId */
    countNotEmptyLinkedRecordId?: Scalars['Int']
    /** Percentage of empty values for linkedRecordId */
    percentageEmptyLinkedRecordId?: Scalars['Float']
    /** Percentage of non-empty values for linkedRecordId */
    percentageNotEmptyLinkedRecordId?: Scalars['Float']
    /** Number of unique values for linkedObjectMetadataId */
    countUniqueValuesLinkedObjectMetadataId?: Scalars['Int']
    /** Number of empty values for linkedObjectMetadataId */
    countEmptyLinkedObjectMetadataId?: Scalars['Int']
    /** Number of non-empty values for linkedObjectMetadataId */
    countNotEmptyLinkedObjectMetadataId?: Scalars['Int']
    /** Percentage of empty values for linkedObjectMetadataId */
    percentageEmptyLinkedObjectMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for linkedObjectMetadataId */
    percentageNotEmptyLinkedObjectMetadataId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: TimelineActivityEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'TimelineActivityGroupByConnection'
}


/** Optional aggregate operation */
export type ViewFieldAggregateOperationEnum = 'AVG' | 'COUNT' | 'MAX' | 'MIN' | 'SUM' | 'COUNT_EMPTY' | 'COUNT_NOT_EMPTY' | 'COUNT_UNIQUE_VALUES' | 'PERCENTAGE_EMPTY' | 'PERCENTAGE_NOT_EMPTY' | 'COUNT_TRUE' | 'COUNT_FALSE'


/** (System) View Fields */
export interface ViewField {
    /** View Field target field */
    fieldMetadataId?: Scalars['UUID']
    /** View Field visibility */
    isVisible?: Scalars['Boolean']
    /** View Field size */
    size?: Scalars['Float']
    /** View Field position */
    position?: Scalars['Float']
    /** Optional aggregate operation */
    aggregateOperation?: ViewFieldAggregateOperationEnum
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** View Field related view */
    viewId?: Scalars['ID']
    /** View Field related view */
    view?: View
    __typename: 'ViewField'
}


/** (System) View Fields */
export interface ViewFieldEdge {
    node?: ViewField
    cursor?: Scalars['Cursor']
    __typename: 'ViewFieldEdge'
}


/** (System) View Fields */
export interface ViewFieldConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: Scalars['Int']
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: Scalars['Int']
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: Scalars['Int']
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: Scalars['Float']
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: Scalars['Float']
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: Scalars['Int']
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: Scalars['Int']
    /** Number of unique values for size */
    countUniqueValuesSize?: Scalars['Int']
    /** Number of empty values for size */
    countEmptySize?: Scalars['Int']
    /** Number of non-empty values for size */
    countNotEmptySize?: Scalars['Int']
    /** Percentage of empty values for size */
    percentageEmptySize?: Scalars['Float']
    /** Percentage of non-empty values for size */
    percentageNotEmptySize?: Scalars['Float']
    /** Minimum amount contained in the field size */
    minSize?: Scalars['Float']
    /** Maximum amount contained in the field size */
    maxSize?: Scalars['Float']
    /** Average amount contained in the field size */
    avgSize?: Scalars['Float']
    /** Sum of amounts contained in the field size */
    sumSize?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for aggregateOperation */
    countUniqueValuesAggregateOperation?: Scalars['Int']
    /** Number of empty values for aggregateOperation */
    countEmptyAggregateOperation?: Scalars['Int']
    /** Number of non-empty values for aggregateOperation */
    countNotEmptyAggregateOperation?: Scalars['Int']
    /** Percentage of empty values for aggregateOperation */
    percentageEmptyAggregateOperation?: Scalars['Float']
    /** Percentage of non-empty values for aggregateOperation */
    percentageNotEmptyAggregateOperation?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewFieldEdge[]
    pageInfo?: PageInfo
    __typename: 'ViewFieldConnection'
}


/** (System) View Fields */
export interface ViewFieldGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: Scalars['Int']
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: Scalars['Int']
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: Scalars['Int']
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: Scalars['Float']
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: Scalars['Float']
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: Scalars['Int']
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: Scalars['Int']
    /** Number of unique values for size */
    countUniqueValuesSize?: Scalars['Int']
    /** Number of empty values for size */
    countEmptySize?: Scalars['Int']
    /** Number of non-empty values for size */
    countNotEmptySize?: Scalars['Int']
    /** Percentage of empty values for size */
    percentageEmptySize?: Scalars['Float']
    /** Percentage of non-empty values for size */
    percentageNotEmptySize?: Scalars['Float']
    /** Minimum amount contained in the field size */
    minSize?: Scalars['Float']
    /** Maximum amount contained in the field size */
    maxSize?: Scalars['Float']
    /** Average amount contained in the field size */
    avgSize?: Scalars['Float']
    /** Sum of amounts contained in the field size */
    sumSize?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for aggregateOperation */
    countUniqueValuesAggregateOperation?: Scalars['Int']
    /** Number of empty values for aggregateOperation */
    countEmptyAggregateOperation?: Scalars['Int']
    /** Number of non-empty values for aggregateOperation */
    countNotEmptyAggregateOperation?: Scalars['Int']
    /** Percentage of empty values for aggregateOperation */
    percentageEmptyAggregateOperation?: Scalars['Float']
    /** Percentage of non-empty values for aggregateOperation */
    percentageNotEmptyAggregateOperation?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewFieldEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'ViewFieldGroupByConnection'
}


/** Logical operator for the filter group */
export type ViewFilterGroupLogicalOperatorEnum = 'AND' | 'OR' | 'NOT'


/** (System) View Filter Groups */
export interface ViewFilterGroup {
    /** Position in the parent view filter group */
    positionInViewFilterGroup?: Scalars['Float']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Parent View Filter Group */
    parentViewFilterGroupId?: Scalars['UUID']
    /** Logical operator for the filter group */
    logicalOperator?: ViewFilterGroupLogicalOperatorEnum
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** View */
    viewId?: Scalars['ID']
    /** View */
    view?: View
    __typename: 'ViewFilterGroup'
}


/** (System) View Filter Groups */
export interface ViewFilterGroupEdge {
    node?: ViewFilterGroup
    cursor?: Scalars['Cursor']
    __typename: 'ViewFilterGroupEdge'
}


/** (System) View Filter Groups */
export interface ViewFilterGroupConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: Scalars['Int']
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: Scalars['Float']
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: Scalars['Float']
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: Scalars['Float']
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for parentViewFilterGroupId */
    countUniqueValuesParentViewFilterGroupId?: Scalars['Int']
    /** Number of empty values for parentViewFilterGroupId */
    countEmptyParentViewFilterGroupId?: Scalars['Int']
    /** Number of non-empty values for parentViewFilterGroupId */
    countNotEmptyParentViewFilterGroupId?: Scalars['Int']
    /** Percentage of empty values for parentViewFilterGroupId */
    percentageEmptyParentViewFilterGroupId?: Scalars['Float']
    /** Percentage of non-empty values for parentViewFilterGroupId */
    percentageNotEmptyParentViewFilterGroupId?: Scalars['Float']
    /** Number of unique values for logicalOperator */
    countUniqueValuesLogicalOperator?: Scalars['Int']
    /** Number of empty values for logicalOperator */
    countEmptyLogicalOperator?: Scalars['Int']
    /** Number of non-empty values for logicalOperator */
    countNotEmptyLogicalOperator?: Scalars['Int']
    /** Percentage of empty values for logicalOperator */
    percentageEmptyLogicalOperator?: Scalars['Float']
    /** Percentage of non-empty values for logicalOperator */
    percentageNotEmptyLogicalOperator?: Scalars['Float']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewFilterGroupEdge[]
    pageInfo?: PageInfo
    __typename: 'ViewFilterGroupConnection'
}


/** (System) View Filter Groups */
export interface ViewFilterGroupGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: Scalars['Int']
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: Scalars['Float']
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: Scalars['Float']
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: Scalars['Float']
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for parentViewFilterGroupId */
    countUniqueValuesParentViewFilterGroupId?: Scalars['Int']
    /** Number of empty values for parentViewFilterGroupId */
    countEmptyParentViewFilterGroupId?: Scalars['Int']
    /** Number of non-empty values for parentViewFilterGroupId */
    countNotEmptyParentViewFilterGroupId?: Scalars['Int']
    /** Percentage of empty values for parentViewFilterGroupId */
    percentageEmptyParentViewFilterGroupId?: Scalars['Float']
    /** Percentage of non-empty values for parentViewFilterGroupId */
    percentageNotEmptyParentViewFilterGroupId?: Scalars['Float']
    /** Number of unique values for logicalOperator */
    countUniqueValuesLogicalOperator?: Scalars['Int']
    /** Number of empty values for logicalOperator */
    countEmptyLogicalOperator?: Scalars['Int']
    /** Number of non-empty values for logicalOperator */
    countNotEmptyLogicalOperator?: Scalars['Int']
    /** Percentage of empty values for logicalOperator */
    percentageEmptyLogicalOperator?: Scalars['Float']
    /** Percentage of non-empty values for logicalOperator */
    percentageNotEmptyLogicalOperator?: Scalars['Float']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewFilterGroupEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'ViewFilterGroupGroupByConnection'
}


/** (System) View Groups */
export interface ViewGroup {
    /** View Group target field */
    fieldMetadataId?: Scalars['UUID']
    /** View Group visibility */
    isVisible?: Scalars['Boolean']
    /** Group by this field value */
    fieldValue?: Scalars['String']
    /** View Field position */
    position?: Scalars['Float']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** View Group related view */
    viewId?: Scalars['ID']
    /** View Group related view */
    view?: View
    __typename: 'ViewGroup'
}


/** (System) View Groups */
export interface ViewGroupEdge {
    node?: ViewGroup
    cursor?: Scalars['Cursor']
    __typename: 'ViewGroupEdge'
}


/** (System) View Groups */
export interface ViewGroupConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: Scalars['Int']
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: Scalars['Int']
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: Scalars['Int']
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: Scalars['Float']
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: Scalars['Float']
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: Scalars['Int']
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: Scalars['Int']
    /** Number of unique values for fieldValue */
    countUniqueValuesFieldValue?: Scalars['Int']
    /** Number of empty values for fieldValue */
    countEmptyFieldValue?: Scalars['Int']
    /** Number of non-empty values for fieldValue */
    countNotEmptyFieldValue?: Scalars['Int']
    /** Percentage of empty values for fieldValue */
    percentageEmptyFieldValue?: Scalars['Float']
    /** Percentage of non-empty values for fieldValue */
    percentageNotEmptyFieldValue?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewGroupEdge[]
    pageInfo?: PageInfo
    __typename: 'ViewGroupConnection'
}


/** (System) View Groups */
export interface ViewGroupGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: Scalars['Int']
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: Scalars['Int']
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: Scalars['Int']
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: Scalars['Float']
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: Scalars['Float']
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: Scalars['Int']
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: Scalars['Int']
    /** Number of unique values for fieldValue */
    countUniqueValuesFieldValue?: Scalars['Int']
    /** Number of empty values for fieldValue */
    countEmptyFieldValue?: Scalars['Int']
    /** Number of non-empty values for fieldValue */
    countNotEmptyFieldValue?: Scalars['Int']
    /** Percentage of empty values for fieldValue */
    percentageEmptyFieldValue?: Scalars['Float']
    /** Percentage of non-empty values for fieldValue */
    percentageNotEmptyFieldValue?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Minimum amount contained in the field position */
    minPosition?: Scalars['Float']
    /** Maximum amount contained in the field position */
    maxPosition?: Scalars['Float']
    /** Average amount contained in the field position */
    avgPosition?: Scalars['Float']
    /** Sum of amounts contained in the field position */
    sumPosition?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewGroupEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'ViewGroupGroupByConnection'
}


/** (System) View Filters */
export interface ViewFilter {
    /** View Filter target field */
    fieldMetadataId?: Scalars['UUID']
    /** View Filter operand */
    operand?: Scalars['String']
    /** View Filter value */
    value?: Scalars['String']
    /** View Filter Display Value */
    displayValue?: Scalars['String']
    /** View Filter Group */
    viewFilterGroupId?: Scalars['UUID']
    /** Position in the view filter group */
    positionInViewFilterGroup?: Scalars['Float']
    /** Sub field name */
    subFieldName?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** View Filter related view */
    viewId?: Scalars['ID']
    /** View Filter related view */
    view?: View
    __typename: 'ViewFilter'
}


/** (System) View Filters */
export interface ViewFilterEdge {
    node?: ViewFilter
    cursor?: Scalars['Cursor']
    __typename: 'ViewFilterEdge'
}


/** (System) View Filters */
export interface ViewFilterConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for operand */
    countUniqueValuesOperand?: Scalars['Int']
    /** Number of empty values for operand */
    countEmptyOperand?: Scalars['Int']
    /** Number of non-empty values for operand */
    countNotEmptyOperand?: Scalars['Int']
    /** Percentage of empty values for operand */
    percentageEmptyOperand?: Scalars['Float']
    /** Percentage of non-empty values for operand */
    percentageNotEmptyOperand?: Scalars['Float']
    /** Number of unique values for value */
    countUniqueValuesValue?: Scalars['Int']
    /** Number of empty values for value */
    countEmptyValue?: Scalars['Int']
    /** Number of non-empty values for value */
    countNotEmptyValue?: Scalars['Int']
    /** Percentage of empty values for value */
    percentageEmptyValue?: Scalars['Float']
    /** Percentage of non-empty values for value */
    percentageNotEmptyValue?: Scalars['Float']
    /** Number of unique values for displayValue */
    countUniqueValuesDisplayValue?: Scalars['Int']
    /** Number of empty values for displayValue */
    countEmptyDisplayValue?: Scalars['Int']
    /** Number of non-empty values for displayValue */
    countNotEmptyDisplayValue?: Scalars['Int']
    /** Percentage of empty values for displayValue */
    percentageEmptyDisplayValue?: Scalars['Float']
    /** Percentage of non-empty values for displayValue */
    percentageNotEmptyDisplayValue?: Scalars['Float']
    /** Number of unique values for viewFilterGroupId */
    countUniqueValuesViewFilterGroupId?: Scalars['Int']
    /** Number of empty values for viewFilterGroupId */
    countEmptyViewFilterGroupId?: Scalars['Int']
    /** Number of non-empty values for viewFilterGroupId */
    countNotEmptyViewFilterGroupId?: Scalars['Int']
    /** Percentage of empty values for viewFilterGroupId */
    percentageEmptyViewFilterGroupId?: Scalars['Float']
    /** Percentage of non-empty values for viewFilterGroupId */
    percentageNotEmptyViewFilterGroupId?: Scalars['Float']
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: Scalars['Int']
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: Scalars['Float']
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: Scalars['Float']
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: Scalars['Float']
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: Scalars['Float']
    /** Number of unique values for subFieldName */
    countUniqueValuesSubFieldName?: Scalars['Int']
    /** Number of empty values for subFieldName */
    countEmptySubFieldName?: Scalars['Int']
    /** Number of non-empty values for subFieldName */
    countNotEmptySubFieldName?: Scalars['Int']
    /** Percentage of empty values for subFieldName */
    percentageEmptySubFieldName?: Scalars['Float']
    /** Percentage of non-empty values for subFieldName */
    percentageNotEmptySubFieldName?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewFilterEdge[]
    pageInfo?: PageInfo
    __typename: 'ViewFilterConnection'
}


/** (System) View Filters */
export interface ViewFilterGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for operand */
    countUniqueValuesOperand?: Scalars['Int']
    /** Number of empty values for operand */
    countEmptyOperand?: Scalars['Int']
    /** Number of non-empty values for operand */
    countNotEmptyOperand?: Scalars['Int']
    /** Percentage of empty values for operand */
    percentageEmptyOperand?: Scalars['Float']
    /** Percentage of non-empty values for operand */
    percentageNotEmptyOperand?: Scalars['Float']
    /** Number of unique values for value */
    countUniqueValuesValue?: Scalars['Int']
    /** Number of empty values for value */
    countEmptyValue?: Scalars['Int']
    /** Number of non-empty values for value */
    countNotEmptyValue?: Scalars['Int']
    /** Percentage of empty values for value */
    percentageEmptyValue?: Scalars['Float']
    /** Percentage of non-empty values for value */
    percentageNotEmptyValue?: Scalars['Float']
    /** Number of unique values for displayValue */
    countUniqueValuesDisplayValue?: Scalars['Int']
    /** Number of empty values for displayValue */
    countEmptyDisplayValue?: Scalars['Int']
    /** Number of non-empty values for displayValue */
    countNotEmptyDisplayValue?: Scalars['Int']
    /** Percentage of empty values for displayValue */
    percentageEmptyDisplayValue?: Scalars['Float']
    /** Percentage of non-empty values for displayValue */
    percentageNotEmptyDisplayValue?: Scalars['Float']
    /** Number of unique values for viewFilterGroupId */
    countUniqueValuesViewFilterGroupId?: Scalars['Int']
    /** Number of empty values for viewFilterGroupId */
    countEmptyViewFilterGroupId?: Scalars['Int']
    /** Number of non-empty values for viewFilterGroupId */
    countNotEmptyViewFilterGroupId?: Scalars['Int']
    /** Percentage of empty values for viewFilterGroupId */
    percentageEmptyViewFilterGroupId?: Scalars['Float']
    /** Percentage of non-empty values for viewFilterGroupId */
    percentageNotEmptyViewFilterGroupId?: Scalars['Float']
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: Scalars['Int']
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: Scalars['Int']
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: Scalars['Float']
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: Scalars['Float']
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: Scalars['Float']
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: Scalars['Float']
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: Scalars['Float']
    /** Number of unique values for subFieldName */
    countUniqueValuesSubFieldName?: Scalars['Int']
    /** Number of empty values for subFieldName */
    countEmptySubFieldName?: Scalars['Int']
    /** Number of non-empty values for subFieldName */
    countNotEmptySubFieldName?: Scalars['Int']
    /** Percentage of empty values for subFieldName */
    percentageEmptySubFieldName?: Scalars['Float']
    /** Percentage of non-empty values for subFieldName */
    percentageNotEmptySubFieldName?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewFilterEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'ViewFilterGroupByConnection'
}


/** (System) View Sorts */
export interface ViewSort {
    /** View Sort target field */
    fieldMetadataId?: Scalars['UUID']
    /** View Sort direction */
    direction?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** View Sort related view */
    viewId?: Scalars['ID']
    /** View Sort related view */
    view?: View
    __typename: 'ViewSort'
}


/** (System) View Sorts */
export interface ViewSortEdge {
    node?: ViewSort
    cursor?: Scalars['Cursor']
    __typename: 'ViewSortEdge'
}


/** (System) View Sorts */
export interface ViewSortConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for direction */
    countUniqueValuesDirection?: Scalars['Int']
    /** Number of empty values for direction */
    countEmptyDirection?: Scalars['Int']
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: Scalars['Int']
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: Scalars['Float']
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewSortEdge[]
    pageInfo?: PageInfo
    __typename: 'ViewSortConnection'
}


/** (System) View Sorts */
export interface ViewSortGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: Scalars['Int']
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: Scalars['Float']
    /** Number of unique values for direction */
    countUniqueValuesDirection?: Scalars['Int']
    /** Number of empty values for direction */
    countEmptyDirection?: Scalars['Int']
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: Scalars['Int']
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: Scalars['Float']
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewSortEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'ViewSortGroupByConnection'
}


/** View key */
export type ViewKeyEnum = 'INDEX'


/** Display the records in a side panel or in a record page */
export type ViewOpenRecordInEnum = 'SIDE_PANEL' | 'RECORD_PAGE'


/** Optional aggregate operation */
export type ViewKanbanAggregateOperationEnum = 'AVG' | 'COUNT' | 'MAX' | 'MIN' | 'SUM' | 'COUNT_EMPTY' | 'COUNT_NOT_EMPTY' | 'COUNT_UNIQUE_VALUES' | 'PERCENTAGE_EMPTY' | 'PERCENTAGE_NOT_EMPTY' | 'COUNT_TRUE' | 'COUNT_FALSE'


/** (System) Views */
export interface View {
    /** View name */
    name?: Scalars['String']
    /** View target object */
    objectMetadataId?: Scalars['UUID']
    /** View type */
    type?: Scalars['String']
    /** View key */
    key?: ViewKeyEnum
    /** View icon */
    icon?: Scalars['String']
    /** View Kanban column field */
    kanbanFieldMetadataId?: Scalars['String']
    /** View position */
    position?: Scalars['Position']
    /** Describes if the view is in compact mode */
    isCompact?: Scalars['Boolean']
    /** Display the records in a side panel or in a record page */
    openRecordIn?: ViewOpenRecordInEnum
    /** Optional aggregate operation */
    kanbanAggregateOperation?: ViewKanbanAggregateOperationEnum
    /** Field metadata used for aggregate operation */
    kanbanAggregateOperationFieldMetadataId?: Scalars['UUID']
    /** Any field filter value */
    anyFieldFilterValue?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** View Fields */
    viewFields?: ViewFieldConnection
    /** View Groups */
    viewGroups?: ViewGroupConnection
    /** View Filters */
    viewFilters?: ViewFilterConnection
    /** View Filter Groups */
    viewFilterGroups?: ViewFilterGroupConnection
    /** View Sorts */
    viewSorts?: ViewSortConnection
    __typename: 'View'
}


/** (System) Views */
export interface ViewEdge {
    node?: View
    cursor?: Scalars['Cursor']
    __typename: 'ViewEdge'
}


/** (System) Views */
export interface ViewConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for objectMetadataId */
    countUniqueValuesObjectMetadataId?: Scalars['Int']
    /** Number of empty values for objectMetadataId */
    countEmptyObjectMetadataId?: Scalars['Int']
    /** Number of non-empty values for objectMetadataId */
    countNotEmptyObjectMetadataId?: Scalars['Int']
    /** Percentage of empty values for objectMetadataId */
    percentageEmptyObjectMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for objectMetadataId */
    percentageNotEmptyObjectMetadataId?: Scalars['Float']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for key */
    countUniqueValuesKey?: Scalars['Int']
    /** Number of empty values for key */
    countEmptyKey?: Scalars['Int']
    /** Number of non-empty values for key */
    countNotEmptyKey?: Scalars['Int']
    /** Percentage of empty values for key */
    percentageEmptyKey?: Scalars['Float']
    /** Percentage of non-empty values for key */
    percentageNotEmptyKey?: Scalars['Float']
    /** Number of unique values for icon */
    countUniqueValuesIcon?: Scalars['Int']
    /** Number of empty values for icon */
    countEmptyIcon?: Scalars['Int']
    /** Number of non-empty values for icon */
    countNotEmptyIcon?: Scalars['Int']
    /** Percentage of empty values for icon */
    percentageEmptyIcon?: Scalars['Float']
    /** Percentage of non-empty values for icon */
    percentageNotEmptyIcon?: Scalars['Float']
    /** Number of unique values for kanbanFieldMetadataId */
    countUniqueValuesKanbanFieldMetadataId?: Scalars['Int']
    /** Number of empty values for kanbanFieldMetadataId */
    countEmptyKanbanFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for kanbanFieldMetadataId */
    countNotEmptyKanbanFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for kanbanFieldMetadataId */
    percentageEmptyKanbanFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for kanbanFieldMetadataId */
    percentageNotEmptyKanbanFieldMetadataId?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for isCompact */
    countUniqueValuesIsCompact?: Scalars['Int']
    /** Number of empty values for isCompact */
    countEmptyIsCompact?: Scalars['Int']
    /** Number of non-empty values for isCompact */
    countNotEmptyIsCompact?: Scalars['Int']
    /** Percentage of empty values for isCompact */
    percentageEmptyIsCompact?: Scalars['Float']
    /** Percentage of non-empty values for isCompact */
    percentageNotEmptyIsCompact?: Scalars['Float']
    /** Count of true values in the field isCompact */
    countTrueIsCompact?: Scalars['Int']
    /** Count of false values in the field isCompact */
    countFalseIsCompact?: Scalars['Int']
    /** Number of unique values for openRecordIn */
    countUniqueValuesOpenRecordIn?: Scalars['Int']
    /** Number of empty values for openRecordIn */
    countEmptyOpenRecordIn?: Scalars['Int']
    /** Number of non-empty values for openRecordIn */
    countNotEmptyOpenRecordIn?: Scalars['Int']
    /** Percentage of empty values for openRecordIn */
    percentageEmptyOpenRecordIn?: Scalars['Float']
    /** Percentage of non-empty values for openRecordIn */
    percentageNotEmptyOpenRecordIn?: Scalars['Float']
    /** Number of unique values for kanbanAggregateOperation */
    countUniqueValuesKanbanAggregateOperation?: Scalars['Int']
    /** Number of empty values for kanbanAggregateOperation */
    countEmptyKanbanAggregateOperation?: Scalars['Int']
    /** Number of non-empty values for kanbanAggregateOperation */
    countNotEmptyKanbanAggregateOperation?: Scalars['Int']
    /** Percentage of empty values for kanbanAggregateOperation */
    percentageEmptyKanbanAggregateOperation?: Scalars['Float']
    /** Percentage of non-empty values for kanbanAggregateOperation */
    percentageNotEmptyKanbanAggregateOperation?: Scalars['Float']
    /** Number of unique values for kanbanAggregateOperationFieldMetadataId */
    countUniqueValuesKanbanAggregateOperationFieldMetadataId?: Scalars['Int']
    /** Number of empty values for kanbanAggregateOperationFieldMetadataId */
    countEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for kanbanAggregateOperationFieldMetadataId */
    countNotEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for kanbanAggregateOperationFieldMetadataId */
    percentageEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for kanbanAggregateOperationFieldMetadataId */
    percentageNotEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Float']
    /** Number of unique values for anyFieldFilterValue */
    countUniqueValuesAnyFieldFilterValue?: Scalars['Int']
    /** Number of empty values for anyFieldFilterValue */
    countEmptyAnyFieldFilterValue?: Scalars['Int']
    /** Number of non-empty values for anyFieldFilterValue */
    countNotEmptyAnyFieldFilterValue?: Scalars['Int']
    /** Percentage of empty values for anyFieldFilterValue */
    percentageEmptyAnyFieldFilterValue?: Scalars['Float']
    /** Percentage of non-empty values for anyFieldFilterValue */
    percentageNotEmptyAnyFieldFilterValue?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewEdge[]
    pageInfo?: PageInfo
    __typename: 'ViewConnection'
}


/** (System) Views */
export interface ViewGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for objectMetadataId */
    countUniqueValuesObjectMetadataId?: Scalars['Int']
    /** Number of empty values for objectMetadataId */
    countEmptyObjectMetadataId?: Scalars['Int']
    /** Number of non-empty values for objectMetadataId */
    countNotEmptyObjectMetadataId?: Scalars['Int']
    /** Percentage of empty values for objectMetadataId */
    percentageEmptyObjectMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for objectMetadataId */
    percentageNotEmptyObjectMetadataId?: Scalars['Float']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for key */
    countUniqueValuesKey?: Scalars['Int']
    /** Number of empty values for key */
    countEmptyKey?: Scalars['Int']
    /** Number of non-empty values for key */
    countNotEmptyKey?: Scalars['Int']
    /** Percentage of empty values for key */
    percentageEmptyKey?: Scalars['Float']
    /** Percentage of non-empty values for key */
    percentageNotEmptyKey?: Scalars['Float']
    /** Number of unique values for icon */
    countUniqueValuesIcon?: Scalars['Int']
    /** Number of empty values for icon */
    countEmptyIcon?: Scalars['Int']
    /** Number of non-empty values for icon */
    countNotEmptyIcon?: Scalars['Int']
    /** Percentage of empty values for icon */
    percentageEmptyIcon?: Scalars['Float']
    /** Percentage of non-empty values for icon */
    percentageNotEmptyIcon?: Scalars['Float']
    /** Number of unique values for kanbanFieldMetadataId */
    countUniqueValuesKanbanFieldMetadataId?: Scalars['Int']
    /** Number of empty values for kanbanFieldMetadataId */
    countEmptyKanbanFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for kanbanFieldMetadataId */
    countNotEmptyKanbanFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for kanbanFieldMetadataId */
    percentageEmptyKanbanFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for kanbanFieldMetadataId */
    percentageNotEmptyKanbanFieldMetadataId?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for isCompact */
    countUniqueValuesIsCompact?: Scalars['Int']
    /** Number of empty values for isCompact */
    countEmptyIsCompact?: Scalars['Int']
    /** Number of non-empty values for isCompact */
    countNotEmptyIsCompact?: Scalars['Int']
    /** Percentage of empty values for isCompact */
    percentageEmptyIsCompact?: Scalars['Float']
    /** Percentage of non-empty values for isCompact */
    percentageNotEmptyIsCompact?: Scalars['Float']
    /** Count of true values in the field isCompact */
    countTrueIsCompact?: Scalars['Int']
    /** Count of false values in the field isCompact */
    countFalseIsCompact?: Scalars['Int']
    /** Number of unique values for openRecordIn */
    countUniqueValuesOpenRecordIn?: Scalars['Int']
    /** Number of empty values for openRecordIn */
    countEmptyOpenRecordIn?: Scalars['Int']
    /** Number of non-empty values for openRecordIn */
    countNotEmptyOpenRecordIn?: Scalars['Int']
    /** Percentage of empty values for openRecordIn */
    percentageEmptyOpenRecordIn?: Scalars['Float']
    /** Percentage of non-empty values for openRecordIn */
    percentageNotEmptyOpenRecordIn?: Scalars['Float']
    /** Number of unique values for kanbanAggregateOperation */
    countUniqueValuesKanbanAggregateOperation?: Scalars['Int']
    /** Number of empty values for kanbanAggregateOperation */
    countEmptyKanbanAggregateOperation?: Scalars['Int']
    /** Number of non-empty values for kanbanAggregateOperation */
    countNotEmptyKanbanAggregateOperation?: Scalars['Int']
    /** Percentage of empty values for kanbanAggregateOperation */
    percentageEmptyKanbanAggregateOperation?: Scalars['Float']
    /** Percentage of non-empty values for kanbanAggregateOperation */
    percentageNotEmptyKanbanAggregateOperation?: Scalars['Float']
    /** Number of unique values for kanbanAggregateOperationFieldMetadataId */
    countUniqueValuesKanbanAggregateOperationFieldMetadataId?: Scalars['Int']
    /** Number of empty values for kanbanAggregateOperationFieldMetadataId */
    countEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Int']
    /** Number of non-empty values for kanbanAggregateOperationFieldMetadataId */
    countNotEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Int']
    /** Percentage of empty values for kanbanAggregateOperationFieldMetadataId */
    percentageEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Float']
    /** Percentage of non-empty values for kanbanAggregateOperationFieldMetadataId */
    percentageNotEmptyKanbanAggregateOperationFieldMetadataId?: Scalars['Float']
    /** Number of unique values for anyFieldFilterValue */
    countUniqueValuesAnyFieldFilterValue?: Scalars['Int']
    /** Number of empty values for anyFieldFilterValue */
    countEmptyAnyFieldFilterValue?: Scalars['Int']
    /** Number of non-empty values for anyFieldFilterValue */
    countNotEmptyAnyFieldFilterValue?: Scalars['Int']
    /** Percentage of empty values for anyFieldFilterValue */
    percentageEmptyAnyFieldFilterValue?: Scalars['Float']
    /** Percentage of non-empty values for anyFieldFilterValue */
    percentageNotEmptyAnyFieldFilterValue?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: ViewEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'ViewGroupByConnection'
}


/** The current statuses of the workflow versions */
export type WorkflowStatusesEnum = 'DRAFT' | 'ACTIVE' | 'DEACTIVATED'


/** A workflow */
export interface Workflow {
    /** The workflow name */
    name?: Scalars['String']
    /** The workflow last published version id */
    lastPublishedVersionId?: Scalars['String']
    /** The current statuses of the workflow versions */
    statuses?: (WorkflowStatusesEnum | undefined)[]
    /** Workflow record position */
    position?: Scalars['Position']
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** The creator of the record */
    createdBy?: Actor
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Workflow versions linked to the workflow. */
    versions?: WorkflowVersionConnection
    /** Workflow runs linked to the workflow. */
    runs?: WorkflowRunConnection
    /** Workflow automated triggers linked to the workflow. */
    automatedTriggers?: WorkflowAutomatedTriggerConnection
    /** Favorites linked to the workflow */
    favorites?: FavoriteConnection
    /** Timeline activities linked to the workflow */
    timelineActivities?: TimelineActivityConnection
    /** Attachments linked to the workflow */
    attachments?: AttachmentConnection
    __typename: 'Workflow'
}


/** A workflow */
export interface WorkflowEdge {
    node?: Workflow
    cursor?: Scalars['Cursor']
    __typename: 'WorkflowEdge'
}


/** A workflow */
export interface WorkflowConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for lastPublishedVersionId */
    countUniqueValuesLastPublishedVersionId?: Scalars['Int']
    /** Number of empty values for lastPublishedVersionId */
    countEmptyLastPublishedVersionId?: Scalars['Int']
    /** Number of non-empty values for lastPublishedVersionId */
    countNotEmptyLastPublishedVersionId?: Scalars['Int']
    /** Percentage of empty values for lastPublishedVersionId */
    percentageEmptyLastPublishedVersionId?: Scalars['Float']
    /** Percentage of non-empty values for lastPublishedVersionId */
    percentageNotEmptyLastPublishedVersionId?: Scalars['Float']
    /** Number of unique values for statuses */
    countUniqueValuesStatuses?: Scalars['Int']
    /** Number of empty values for statuses */
    countEmptyStatuses?: Scalars['Int']
    /** Number of non-empty values for statuses */
    countNotEmptyStatuses?: Scalars['Int']
    /** Percentage of empty values for statuses */
    percentageEmptyStatuses?: Scalars['Float']
    /** Percentage of non-empty values for statuses */
    percentageNotEmptyStatuses?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowEdge[]
    pageInfo?: PageInfo
    __typename: 'WorkflowConnection'
}


/** A workflow */
export interface WorkflowGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for lastPublishedVersionId */
    countUniqueValuesLastPublishedVersionId?: Scalars['Int']
    /** Number of empty values for lastPublishedVersionId */
    countEmptyLastPublishedVersionId?: Scalars['Int']
    /** Number of non-empty values for lastPublishedVersionId */
    countNotEmptyLastPublishedVersionId?: Scalars['Int']
    /** Percentage of empty values for lastPublishedVersionId */
    percentageEmptyLastPublishedVersionId?: Scalars['Float']
    /** Percentage of non-empty values for lastPublishedVersionId */
    percentageNotEmptyLastPublishedVersionId?: Scalars['Float']
    /** Number of unique values for statuses */
    countUniqueValuesStatuses?: Scalars['Int']
    /** Number of empty values for statuses */
    countEmptyStatuses?: Scalars['Int']
    /** Number of non-empty values for statuses */
    countNotEmptyStatuses?: Scalars['Int']
    /** Percentage of empty values for statuses */
    percentageEmptyStatuses?: Scalars['Float']
    /** Percentage of non-empty values for statuses */
    percentageNotEmptyStatuses?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'WorkflowGroupByConnection'
}


/** The workflow version status */
export type WorkflowVersionStatusEnum = 'DRAFT' | 'ACTIVE' | 'DEACTIVATED' | 'ARCHIVED'


/** A workflow version */
export interface WorkflowVersion {
    /** The workflow version name */
    name?: Scalars['String']
    /** Json object to provide trigger */
    trigger?: Scalars['JSON']
    /** Json object to provide steps */
    steps?: Scalars['JSON']
    /** The workflow version status */
    status?: WorkflowVersionStatusEnum
    /** Workflow version position */
    position?: Scalars['Position']
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** WorkflowVersion workflow */
    workflowId?: Scalars['ID']
    /** WorkflowVersion workflow */
    workflow?: Workflow
    /** Workflow runs linked to the version. */
    runs?: WorkflowRunConnection
    /** Favorites linked to the workflow version */
    favorites?: FavoriteConnection
    /** Timeline activities linked to the version */
    timelineActivities?: TimelineActivityConnection
    __typename: 'WorkflowVersion'
}


/** A workflow version */
export interface WorkflowVersionEdge {
    node?: WorkflowVersion
    cursor?: Scalars['Cursor']
    __typename: 'WorkflowVersionEdge'
}


/** A workflow version */
export interface WorkflowVersionConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for trigger */
    countUniqueValuesTrigger?: Scalars['Int']
    /** Number of empty values for trigger */
    countEmptyTrigger?: Scalars['Int']
    /** Number of non-empty values for trigger */
    countNotEmptyTrigger?: Scalars['Int']
    /** Percentage of empty values for trigger */
    percentageEmptyTrigger?: Scalars['Float']
    /** Percentage of non-empty values for trigger */
    percentageNotEmptyTrigger?: Scalars['Float']
    /** Number of unique values for steps */
    countUniqueValuesSteps?: Scalars['Int']
    /** Number of empty values for steps */
    countEmptySteps?: Scalars['Int']
    /** Number of non-empty values for steps */
    countNotEmptySteps?: Scalars['Int']
    /** Percentage of empty values for steps */
    percentageEmptySteps?: Scalars['Float']
    /** Percentage of non-empty values for steps */
    percentageNotEmptySteps?: Scalars['Float']
    /** Number of unique values for status */
    countUniqueValuesStatus?: Scalars['Int']
    /** Number of empty values for status */
    countEmptyStatus?: Scalars['Int']
    /** Number of non-empty values for status */
    countNotEmptyStatus?: Scalars['Int']
    /** Percentage of empty values for status */
    percentageEmptyStatus?: Scalars['Float']
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowVersionEdge[]
    pageInfo?: PageInfo
    __typename: 'WorkflowVersionConnection'
}


/** A workflow version */
export interface WorkflowVersionGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for trigger */
    countUniqueValuesTrigger?: Scalars['Int']
    /** Number of empty values for trigger */
    countEmptyTrigger?: Scalars['Int']
    /** Number of non-empty values for trigger */
    countNotEmptyTrigger?: Scalars['Int']
    /** Percentage of empty values for trigger */
    percentageEmptyTrigger?: Scalars['Float']
    /** Percentage of non-empty values for trigger */
    percentageNotEmptyTrigger?: Scalars['Float']
    /** Number of unique values for steps */
    countUniqueValuesSteps?: Scalars['Int']
    /** Number of empty values for steps */
    countEmptySteps?: Scalars['Int']
    /** Number of non-empty values for steps */
    countNotEmptySteps?: Scalars['Int']
    /** Percentage of empty values for steps */
    percentageEmptySteps?: Scalars['Float']
    /** Percentage of non-empty values for steps */
    percentageNotEmptySteps?: Scalars['Float']
    /** Number of unique values for status */
    countUniqueValuesStatus?: Scalars['Int']
    /** Number of empty values for status */
    countEmptyStatus?: Scalars['Int']
    /** Number of non-empty values for status */
    countNotEmptyStatus?: Scalars['Int']
    /** Percentage of empty values for status */
    percentageEmptyStatus?: Scalars['Float']
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowVersionEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'WorkflowVersionGroupByConnection'
}


/** Workflow run status */
export type WorkflowRunStatusEnum = 'NOT_STARTED' | 'RUNNING' | 'COMPLETED' | 'FAILED' | 'ENQUEUED'


/** A workflow run */
export interface WorkflowRunEdge {
    node?: WorkflowRun
    cursor?: Scalars['Cursor']
    __typename: 'WorkflowRunEdge'
}


/** A workflow run */
export interface WorkflowRunConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for enqueuedAt */
    countUniqueValuesEnqueuedAt?: Scalars['Int']
    /** Number of empty values for enqueuedAt */
    countEmptyEnqueuedAt?: Scalars['Int']
    /** Number of non-empty values for enqueuedAt */
    countNotEmptyEnqueuedAt?: Scalars['Int']
    /** Percentage of empty values for enqueuedAt */
    percentageEmptyEnqueuedAt?: Scalars['Float']
    /** Percentage of non-empty values for enqueuedAt */
    percentageNotEmptyEnqueuedAt?: Scalars['Float']
    /** Earliest date contained in the field enqueuedAt */
    minEnqueuedAt?: Scalars['DateTime']
    /** Latest date contained in the field enqueuedAt */
    maxEnqueuedAt?: Scalars['DateTime']
    /** Number of unique values for startedAt */
    countUniqueValuesStartedAt?: Scalars['Int']
    /** Number of empty values for startedAt */
    countEmptyStartedAt?: Scalars['Int']
    /** Number of non-empty values for startedAt */
    countNotEmptyStartedAt?: Scalars['Int']
    /** Percentage of empty values for startedAt */
    percentageEmptyStartedAt?: Scalars['Float']
    /** Percentage of non-empty values for startedAt */
    percentageNotEmptyStartedAt?: Scalars['Float']
    /** Earliest date contained in the field startedAt */
    minStartedAt?: Scalars['DateTime']
    /** Latest date contained in the field startedAt */
    maxStartedAt?: Scalars['DateTime']
    /** Number of unique values for endedAt */
    countUniqueValuesEndedAt?: Scalars['Int']
    /** Number of empty values for endedAt */
    countEmptyEndedAt?: Scalars['Int']
    /** Number of non-empty values for endedAt */
    countNotEmptyEndedAt?: Scalars['Int']
    /** Percentage of empty values for endedAt */
    percentageEmptyEndedAt?: Scalars['Float']
    /** Percentage of non-empty values for endedAt */
    percentageNotEmptyEndedAt?: Scalars['Float']
    /** Earliest date contained in the field endedAt */
    minEndedAt?: Scalars['DateTime']
    /** Latest date contained in the field endedAt */
    maxEndedAt?: Scalars['DateTime']
    /** Number of unique values for status */
    countUniqueValuesStatus?: Scalars['Int']
    /** Number of empty values for status */
    countEmptyStatus?: Scalars['Int']
    /** Number of non-empty values for status */
    countNotEmptyStatus?: Scalars['Int']
    /** Percentage of empty values for status */
    percentageEmptyStatus?: Scalars['Float']
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for state */
    countUniqueValuesState?: Scalars['Int']
    /** Number of empty values for state */
    countEmptyState?: Scalars['Int']
    /** Number of non-empty values for state */
    countNotEmptyState?: Scalars['Int']
    /** Percentage of empty values for state */
    percentageEmptyState?: Scalars['Float']
    /** Percentage of non-empty values for state */
    percentageNotEmptyState?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowRunEdge[]
    pageInfo?: PageInfo
    __typename: 'WorkflowRunConnection'
}


/** A workflow run */
export interface WorkflowRunGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for enqueuedAt */
    countUniqueValuesEnqueuedAt?: Scalars['Int']
    /** Number of empty values for enqueuedAt */
    countEmptyEnqueuedAt?: Scalars['Int']
    /** Number of non-empty values for enqueuedAt */
    countNotEmptyEnqueuedAt?: Scalars['Int']
    /** Percentage of empty values for enqueuedAt */
    percentageEmptyEnqueuedAt?: Scalars['Float']
    /** Percentage of non-empty values for enqueuedAt */
    percentageNotEmptyEnqueuedAt?: Scalars['Float']
    /** Earliest date contained in the field enqueuedAt */
    minEnqueuedAt?: Scalars['DateTime']
    /** Latest date contained in the field enqueuedAt */
    maxEnqueuedAt?: Scalars['DateTime']
    /** Number of unique values for startedAt */
    countUniqueValuesStartedAt?: Scalars['Int']
    /** Number of empty values for startedAt */
    countEmptyStartedAt?: Scalars['Int']
    /** Number of non-empty values for startedAt */
    countNotEmptyStartedAt?: Scalars['Int']
    /** Percentage of empty values for startedAt */
    percentageEmptyStartedAt?: Scalars['Float']
    /** Percentage of non-empty values for startedAt */
    percentageNotEmptyStartedAt?: Scalars['Float']
    /** Earliest date contained in the field startedAt */
    minStartedAt?: Scalars['DateTime']
    /** Latest date contained in the field startedAt */
    maxStartedAt?: Scalars['DateTime']
    /** Number of unique values for endedAt */
    countUniqueValuesEndedAt?: Scalars['Int']
    /** Number of empty values for endedAt */
    countEmptyEndedAt?: Scalars['Int']
    /** Number of non-empty values for endedAt */
    countNotEmptyEndedAt?: Scalars['Int']
    /** Percentage of empty values for endedAt */
    percentageEmptyEndedAt?: Scalars['Float']
    /** Percentage of non-empty values for endedAt */
    percentageNotEmptyEndedAt?: Scalars['Float']
    /** Earliest date contained in the field endedAt */
    minEndedAt?: Scalars['DateTime']
    /** Latest date contained in the field endedAt */
    maxEndedAt?: Scalars['DateTime']
    /** Number of unique values for status */
    countUniqueValuesStatus?: Scalars['Int']
    /** Number of empty values for status */
    countEmptyStatus?: Scalars['Int']
    /** Number of non-empty values for status */
    countNotEmptyStatus?: Scalars['Int']
    /** Percentage of empty values for status */
    percentageEmptyStatus?: Scalars['Float']
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for state */
    countUniqueValuesState?: Scalars['Int']
    /** Number of empty values for state */
    countEmptyState?: Scalars['Int']
    /** Number of non-empty values for state */
    countNotEmptyState?: Scalars['Int']
    /** Percentage of empty values for state */
    percentageEmptyState?: Scalars['Float']
    /** Percentage of non-empty values for state */
    percentageNotEmptyState?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowRunEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'WorkflowRunGroupByConnection'
}


/** The workflow automated trigger type */
export type WorkflowAutomatedTriggerTypeEnum = 'DATABASE_EVENT' | 'CRON'


/** A workflow automated trigger */
export interface WorkflowAutomatedTrigger {
    /** The workflow automated trigger type */
    type?: WorkflowAutomatedTriggerTypeEnum
    /** The workflow automated trigger settings */
    settings?: Scalars['JSON']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** WorkflowAutomatedTrigger workflow */
    workflowId?: Scalars['ID']
    /** WorkflowAutomatedTrigger workflow */
    workflow?: Workflow
    __typename: 'WorkflowAutomatedTrigger'
}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerEdge {
    node?: WorkflowAutomatedTrigger
    cursor?: Scalars['Cursor']
    __typename: 'WorkflowAutomatedTriggerEdge'
}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for settings */
    countUniqueValuesSettings?: Scalars['Int']
    /** Number of empty values for settings */
    countEmptySettings?: Scalars['Int']
    /** Number of non-empty values for settings */
    countNotEmptySettings?: Scalars['Int']
    /** Percentage of empty values for settings */
    percentageEmptySettings?: Scalars['Float']
    /** Percentage of non-empty values for settings */
    percentageNotEmptySettings?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowAutomatedTriggerEdge[]
    pageInfo?: PageInfo
    __typename: 'WorkflowAutomatedTriggerConnection'
}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for settings */
    countUniqueValuesSettings?: Scalars['Int']
    /** Number of empty values for settings */
    countEmptySettings?: Scalars['Int']
    /** Number of non-empty values for settings */
    countNotEmptySettings?: Scalars['Int']
    /** Percentage of empty values for settings */
    percentageEmptySettings?: Scalars['Float']
    /** Percentage of non-empty values for settings */
    percentageNotEmptySettings?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkflowAutomatedTriggerEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'WorkflowAutomatedTriggerGroupByConnection'
}


/** A workspace member */
export interface WorkspaceMemberEdge {
    node?: WorkspaceMember
    cursor?: Scalars['Cursor']
    __typename: 'WorkspaceMemberEdge'
}


/** A workspace member */
export interface WorkspaceMemberConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for colorScheme */
    countUniqueValuesColorScheme?: Scalars['Int']
    /** Number of empty values for colorScheme */
    countEmptyColorScheme?: Scalars['Int']
    /** Number of non-empty values for colorScheme */
    countNotEmptyColorScheme?: Scalars['Int']
    /** Percentage of empty values for colorScheme */
    percentageEmptyColorScheme?: Scalars['Float']
    /** Percentage of non-empty values for colorScheme */
    percentageNotEmptyColorScheme?: Scalars['Float']
    /** Number of unique values for locale */
    countUniqueValuesLocale?: Scalars['Int']
    /** Number of empty values for locale */
    countEmptyLocale?: Scalars['Int']
    /** Number of non-empty values for locale */
    countNotEmptyLocale?: Scalars['Int']
    /** Percentage of empty values for locale */
    percentageEmptyLocale?: Scalars['Float']
    /** Percentage of non-empty values for locale */
    percentageNotEmptyLocale?: Scalars['Float']
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: Scalars['Int']
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: Scalars['Int']
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: Scalars['Int']
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: Scalars['Float']
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: Scalars['Float']
    /** Number of unique values for userEmail */
    countUniqueValuesUserEmail?: Scalars['Int']
    /** Number of empty values for userEmail */
    countEmptyUserEmail?: Scalars['Int']
    /** Number of non-empty values for userEmail */
    countNotEmptyUserEmail?: Scalars['Int']
    /** Percentage of empty values for userEmail */
    percentageEmptyUserEmail?: Scalars['Float']
    /** Percentage of non-empty values for userEmail */
    percentageNotEmptyUserEmail?: Scalars['Float']
    /** Number of unique values for calendarStartDay */
    countUniqueValuesCalendarStartDay?: Scalars['Int']
    /** Number of empty values for calendarStartDay */
    countEmptyCalendarStartDay?: Scalars['Int']
    /** Number of non-empty values for calendarStartDay */
    countNotEmptyCalendarStartDay?: Scalars['Int']
    /** Percentage of empty values for calendarStartDay */
    percentageEmptyCalendarStartDay?: Scalars['Float']
    /** Percentage of non-empty values for calendarStartDay */
    percentageNotEmptyCalendarStartDay?: Scalars['Float']
    /** Minimum amount contained in the field calendarStartDay */
    minCalendarStartDay?: Scalars['Float']
    /** Maximum amount contained in the field calendarStartDay */
    maxCalendarStartDay?: Scalars['Float']
    /** Average amount contained in the field calendarStartDay */
    avgCalendarStartDay?: Scalars['Float']
    /** Sum of amounts contained in the field calendarStartDay */
    sumCalendarStartDay?: Scalars['Float']
    /** Number of unique values for userId */
    countUniqueValuesUserId?: Scalars['Int']
    /** Number of empty values for userId */
    countEmptyUserId?: Scalars['Int']
    /** Number of non-empty values for userId */
    countNotEmptyUserId?: Scalars['Int']
    /** Percentage of empty values for userId */
    percentageEmptyUserId?: Scalars['Float']
    /** Percentage of non-empty values for userId */
    percentageNotEmptyUserId?: Scalars['Float']
    /** Number of unique values for timeZone */
    countUniqueValuesTimeZone?: Scalars['Int']
    /** Number of empty values for timeZone */
    countEmptyTimeZone?: Scalars['Int']
    /** Number of non-empty values for timeZone */
    countNotEmptyTimeZone?: Scalars['Int']
    /** Percentage of empty values for timeZone */
    percentageEmptyTimeZone?: Scalars['Float']
    /** Percentage of non-empty values for timeZone */
    percentageNotEmptyTimeZone?: Scalars['Float']
    /** Number of unique values for dateFormat */
    countUniqueValuesDateFormat?: Scalars['Int']
    /** Number of empty values for dateFormat */
    countEmptyDateFormat?: Scalars['Int']
    /** Number of non-empty values for dateFormat */
    countNotEmptyDateFormat?: Scalars['Int']
    /** Percentage of empty values for dateFormat */
    percentageEmptyDateFormat?: Scalars['Float']
    /** Percentage of non-empty values for dateFormat */
    percentageNotEmptyDateFormat?: Scalars['Float']
    /** Number of unique values for timeFormat */
    countUniqueValuesTimeFormat?: Scalars['Int']
    /** Number of empty values for timeFormat */
    countEmptyTimeFormat?: Scalars['Int']
    /** Number of non-empty values for timeFormat */
    countNotEmptyTimeFormat?: Scalars['Int']
    /** Percentage of empty values for timeFormat */
    percentageEmptyTimeFormat?: Scalars['Float']
    /** Percentage of non-empty values for timeFormat */
    percentageNotEmptyTimeFormat?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for numberFormat */
    countUniqueValuesNumberFormat?: Scalars['Int']
    /** Number of empty values for numberFormat */
    countEmptyNumberFormat?: Scalars['Int']
    /** Number of non-empty values for numberFormat */
    countNotEmptyNumberFormat?: Scalars['Int']
    /** Percentage of empty values for numberFormat */
    percentageEmptyNumberFormat?: Scalars['Float']
    /** Percentage of non-empty values for numberFormat */
    percentageNotEmptyNumberFormat?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkspaceMemberEdge[]
    pageInfo?: PageInfo
    __typename: 'WorkspaceMemberConnection'
}


/** A workspace member */
export interface WorkspaceMemberGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for colorScheme */
    countUniqueValuesColorScheme?: Scalars['Int']
    /** Number of empty values for colorScheme */
    countEmptyColorScheme?: Scalars['Int']
    /** Number of non-empty values for colorScheme */
    countNotEmptyColorScheme?: Scalars['Int']
    /** Percentage of empty values for colorScheme */
    percentageEmptyColorScheme?: Scalars['Float']
    /** Percentage of non-empty values for colorScheme */
    percentageNotEmptyColorScheme?: Scalars['Float']
    /** Number of unique values for locale */
    countUniqueValuesLocale?: Scalars['Int']
    /** Number of empty values for locale */
    countEmptyLocale?: Scalars['Int']
    /** Number of non-empty values for locale */
    countNotEmptyLocale?: Scalars['Int']
    /** Percentage of empty values for locale */
    percentageEmptyLocale?: Scalars['Float']
    /** Percentage of non-empty values for locale */
    percentageNotEmptyLocale?: Scalars['Float']
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: Scalars['Int']
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: Scalars['Int']
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: Scalars['Int']
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: Scalars['Float']
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: Scalars['Float']
    /** Number of unique values for userEmail */
    countUniqueValuesUserEmail?: Scalars['Int']
    /** Number of empty values for userEmail */
    countEmptyUserEmail?: Scalars['Int']
    /** Number of non-empty values for userEmail */
    countNotEmptyUserEmail?: Scalars['Int']
    /** Percentage of empty values for userEmail */
    percentageEmptyUserEmail?: Scalars['Float']
    /** Percentage of non-empty values for userEmail */
    percentageNotEmptyUserEmail?: Scalars['Float']
    /** Number of unique values for calendarStartDay */
    countUniqueValuesCalendarStartDay?: Scalars['Int']
    /** Number of empty values for calendarStartDay */
    countEmptyCalendarStartDay?: Scalars['Int']
    /** Number of non-empty values for calendarStartDay */
    countNotEmptyCalendarStartDay?: Scalars['Int']
    /** Percentage of empty values for calendarStartDay */
    percentageEmptyCalendarStartDay?: Scalars['Float']
    /** Percentage of non-empty values for calendarStartDay */
    percentageNotEmptyCalendarStartDay?: Scalars['Float']
    /** Minimum amount contained in the field calendarStartDay */
    minCalendarStartDay?: Scalars['Float']
    /** Maximum amount contained in the field calendarStartDay */
    maxCalendarStartDay?: Scalars['Float']
    /** Average amount contained in the field calendarStartDay */
    avgCalendarStartDay?: Scalars['Float']
    /** Sum of amounts contained in the field calendarStartDay */
    sumCalendarStartDay?: Scalars['Float']
    /** Number of unique values for userId */
    countUniqueValuesUserId?: Scalars['Int']
    /** Number of empty values for userId */
    countEmptyUserId?: Scalars['Int']
    /** Number of non-empty values for userId */
    countNotEmptyUserId?: Scalars['Int']
    /** Percentage of empty values for userId */
    percentageEmptyUserId?: Scalars['Float']
    /** Percentage of non-empty values for userId */
    percentageNotEmptyUserId?: Scalars['Float']
    /** Number of unique values for timeZone */
    countUniqueValuesTimeZone?: Scalars['Int']
    /** Number of empty values for timeZone */
    countEmptyTimeZone?: Scalars['Int']
    /** Number of non-empty values for timeZone */
    countNotEmptyTimeZone?: Scalars['Int']
    /** Percentage of empty values for timeZone */
    percentageEmptyTimeZone?: Scalars['Float']
    /** Percentage of non-empty values for timeZone */
    percentageNotEmptyTimeZone?: Scalars['Float']
    /** Number of unique values for dateFormat */
    countUniqueValuesDateFormat?: Scalars['Int']
    /** Number of empty values for dateFormat */
    countEmptyDateFormat?: Scalars['Int']
    /** Number of non-empty values for dateFormat */
    countNotEmptyDateFormat?: Scalars['Int']
    /** Percentage of empty values for dateFormat */
    percentageEmptyDateFormat?: Scalars['Float']
    /** Percentage of non-empty values for dateFormat */
    percentageNotEmptyDateFormat?: Scalars['Float']
    /** Number of unique values for timeFormat */
    countUniqueValuesTimeFormat?: Scalars['Int']
    /** Number of empty values for timeFormat */
    countEmptyTimeFormat?: Scalars['Int']
    /** Number of non-empty values for timeFormat */
    countNotEmptyTimeFormat?: Scalars['Int']
    /** Percentage of empty values for timeFormat */
    percentageEmptyTimeFormat?: Scalars['Float']
    /** Percentage of non-empty values for timeFormat */
    percentageNotEmptyTimeFormat?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for numberFormat */
    countUniqueValuesNumberFormat?: Scalars['Int']
    /** Number of empty values for numberFormat */
    countEmptyNumberFormat?: Scalars['Int']
    /** Number of non-empty values for numberFormat */
    countNotEmptyNumberFormat?: Scalars['Int']
    /** Percentage of empty values for numberFormat */
    percentageEmptyNumberFormat?: Scalars['Float']
    /** Percentage of non-empty values for numberFormat */
    percentageNotEmptyNumberFormat?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: WorkspaceMemberEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'WorkspaceMemberGroupByConnection'
}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface Message {
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Message id from the message header */
    headerMessageId?: Scalars['String']
    /** Subject */
    subject?: Scalars['String']
    /** Text */
    text?: Scalars['String']
    /** The date the message was received */
    receivedAt?: Scalars['DateTime']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Message Thread Id */
    messageThreadId?: Scalars['ID']
    /** Message Thread Id */
    messageThread?: MessageThread
    /** Message Participants */
    messageParticipants?: MessageParticipantConnection
    /** Messages from the channel. */
    messageChannelMessageAssociations?: MessageChannelMessageAssociationConnection
    __typename: 'Message'
}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageEdge {
    node?: Message
    cursor?: Scalars['Cursor']
    __typename: 'MessageEdge'
}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for headerMessageId */
    countUniqueValuesHeaderMessageId?: Scalars['Int']
    /** Number of empty values for headerMessageId */
    countEmptyHeaderMessageId?: Scalars['Int']
    /** Number of non-empty values for headerMessageId */
    countNotEmptyHeaderMessageId?: Scalars['Int']
    /** Percentage of empty values for headerMessageId */
    percentageEmptyHeaderMessageId?: Scalars['Float']
    /** Percentage of non-empty values for headerMessageId */
    percentageNotEmptyHeaderMessageId?: Scalars['Float']
    /** Number of unique values for subject */
    countUniqueValuesSubject?: Scalars['Int']
    /** Number of empty values for subject */
    countEmptySubject?: Scalars['Int']
    /** Number of non-empty values for subject */
    countNotEmptySubject?: Scalars['Int']
    /** Percentage of empty values for subject */
    percentageEmptySubject?: Scalars['Float']
    /** Percentage of non-empty values for subject */
    percentageNotEmptySubject?: Scalars['Float']
    /** Number of unique values for text */
    countUniqueValuesText?: Scalars['Int']
    /** Number of empty values for text */
    countEmptyText?: Scalars['Int']
    /** Number of non-empty values for text */
    countNotEmptyText?: Scalars['Int']
    /** Percentage of empty values for text */
    percentageEmptyText?: Scalars['Float']
    /** Percentage of non-empty values for text */
    percentageNotEmptyText?: Scalars['Float']
    /** Number of unique values for receivedAt */
    countUniqueValuesReceivedAt?: Scalars['Int']
    /** Number of empty values for receivedAt */
    countEmptyReceivedAt?: Scalars['Int']
    /** Number of non-empty values for receivedAt */
    countNotEmptyReceivedAt?: Scalars['Int']
    /** Percentage of empty values for receivedAt */
    percentageEmptyReceivedAt?: Scalars['Float']
    /** Percentage of non-empty values for receivedAt */
    percentageNotEmptyReceivedAt?: Scalars['Float']
    /** Earliest date contained in the field receivedAt */
    minReceivedAt?: Scalars['DateTime']
    /** Latest date contained in the field receivedAt */
    maxReceivedAt?: Scalars['DateTime']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    edges?: MessageEdge[]
    pageInfo?: PageInfo
    __typename: 'MessageConnection'
}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for headerMessageId */
    countUniqueValuesHeaderMessageId?: Scalars['Int']
    /** Number of empty values for headerMessageId */
    countEmptyHeaderMessageId?: Scalars['Int']
    /** Number of non-empty values for headerMessageId */
    countNotEmptyHeaderMessageId?: Scalars['Int']
    /** Percentage of empty values for headerMessageId */
    percentageEmptyHeaderMessageId?: Scalars['Float']
    /** Percentage of non-empty values for headerMessageId */
    percentageNotEmptyHeaderMessageId?: Scalars['Float']
    /** Number of unique values for subject */
    countUniqueValuesSubject?: Scalars['Int']
    /** Number of empty values for subject */
    countEmptySubject?: Scalars['Int']
    /** Number of non-empty values for subject */
    countNotEmptySubject?: Scalars['Int']
    /** Percentage of empty values for subject */
    percentageEmptySubject?: Scalars['Float']
    /** Percentage of non-empty values for subject */
    percentageNotEmptySubject?: Scalars['Float']
    /** Number of unique values for text */
    countUniqueValuesText?: Scalars['Int']
    /** Number of empty values for text */
    countEmptyText?: Scalars['Int']
    /** Number of non-empty values for text */
    countNotEmptyText?: Scalars['Int']
    /** Percentage of empty values for text */
    percentageEmptyText?: Scalars['Float']
    /** Percentage of non-empty values for text */
    percentageNotEmptyText?: Scalars['Float']
    /** Number of unique values for receivedAt */
    countUniqueValuesReceivedAt?: Scalars['Int']
    /** Number of empty values for receivedAt */
    countEmptyReceivedAt?: Scalars['Int']
    /** Number of non-empty values for receivedAt */
    countNotEmptyReceivedAt?: Scalars['Int']
    /** Percentage of empty values for receivedAt */
    percentageEmptyReceivedAt?: Scalars['Float']
    /** Percentage of non-empty values for receivedAt */
    percentageNotEmptyReceivedAt?: Scalars['Float']
    /** Earliest date contained in the field receivedAt */
    minReceivedAt?: Scalars['DateTime']
    /** Latest date contained in the field receivedAt */
    maxReceivedAt?: Scalars['DateTime']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    edges?: MessageEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'MessageGroupByConnection'
}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThread {
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Messages from the thread. */
    messages?: MessageConnection
    __typename: 'MessageThread'
}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadEdge {
    node?: MessageThread
    cursor?: Scalars['Cursor']
    __typename: 'MessageThreadEdge'
}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageThreadEdge[]
    pageInfo?: PageInfo
    __typename: 'MessageThreadConnection'
}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageThreadEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'MessageThreadGroupByConnection'
}


/** Visibility */
export type MessageChannelVisibilityEnum = 'METADATA' | 'SUBJECT' | 'SHARE_EVERYTHING'


/** Channel Type */
export type MessageChannelTypeEnum = 'email' | 'sms'


/** Automatically create People records when receiving or sending emails */
export type MessageChannelContactAutoCreationPolicyEnum = 'SENT_AND_RECEIVED' | 'SENT' | 'NONE'


/** Message folder import policy */
export type MessageChannelMessageFolderImportPolicyEnum = 'ALL_FOLDERS' | 'SELECTED_FOLDERS'


/** Sync status */
export type MessageChannelSyncStatusEnum = 'ONGOING' | 'NOT_SYNCED' | 'ACTIVE' | 'FAILED_INSUFFICIENT_PERMISSIONS' | 'FAILED_UNKNOWN'


/** Sync stage */
export type MessageChannelSyncStageEnum = 'MESSAGE_LIST_FETCH_PENDING' | 'MESSAGE_LIST_FETCH_SCHEDULED' | 'MESSAGE_LIST_FETCH_ONGOING' | 'MESSAGES_IMPORT_PENDING' | 'MESSAGES_IMPORT_SCHEDULED' | 'MESSAGES_IMPORT_ONGOING' | 'FAILED' | 'FULL_MESSAGE_LIST_FETCH_PENDING' | 'PARTIAL_MESSAGE_LIST_FETCH_PENDING' | 'PENDING_CONFIGURATION'


/** Message Channels */
export interface MessageChannel {
    /** Visibility */
    visibility?: MessageChannelVisibilityEnum
    /** Handle */
    handle?: Scalars['String']
    /** Channel Type */
    type?: MessageChannelTypeEnum
    /** Is Contact Auto Creation Enabled */
    isContactAutoCreationEnabled?: Scalars['Boolean']
    /** Automatically create People records when receiving or sending emails */
    contactAutoCreationPolicy?: MessageChannelContactAutoCreationPolicyEnum
    /** Message folder import policy */
    messageFolderImportPolicy?: MessageChannelMessageFolderImportPolicyEnum
    /** Exclude non professional emails */
    excludeNonProfessionalEmails?: Scalars['Boolean']
    /** Exclude group emails */
    excludeGroupEmails?: Scalars['Boolean']
    /** Is Sync Enabled */
    isSyncEnabled?: Scalars['Boolean']
    /** Last sync cursor */
    syncCursor?: Scalars['String']
    /** Last sync date */
    syncedAt?: Scalars['DateTime']
    /** Sync status */
    syncStatus?: MessageChannelSyncStatusEnum
    /** Sync stage */
    syncStage?: MessageChannelSyncStageEnum
    /** Sync stage started at */
    syncStageStartedAt?: Scalars['DateTime']
    /** Throttle Failure Count */
    throttleFailureCount?: Scalars['Float']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Connected Account */
    connectedAccountId?: Scalars['ID']
    /** Connected Account */
    connectedAccount?: ConnectedAccount
    /** Messages from the channel. */
    messageChannelMessageAssociations?: MessageChannelMessageAssociationConnection
    /** Message Folders */
    messageFolders?: MessageFolderConnection
    __typename: 'MessageChannel'
}


/** Message Channels */
export interface MessageChannelEdge {
    node?: MessageChannel
    cursor?: Scalars['Cursor']
    __typename: 'MessageChannelEdge'
}


/** Message Channels */
export interface MessageChannelConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: Scalars['Int']
    /** Number of empty values for visibility */
    countEmptyVisibility?: Scalars['Int']
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: Scalars['Int']
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: Scalars['Float']
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: Scalars['Float']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: Scalars['Int']
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: Scalars['Int']
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Number of unique values for messageFolderImportPolicy */
    countUniqueValuesMessageFolderImportPolicy?: Scalars['Int']
    /** Number of empty values for messageFolderImportPolicy */
    countEmptyMessageFolderImportPolicy?: Scalars['Int']
    /** Number of non-empty values for messageFolderImportPolicy */
    countNotEmptyMessageFolderImportPolicy?: Scalars['Int']
    /** Percentage of empty values for messageFolderImportPolicy */
    percentageEmptyMessageFolderImportPolicy?: Scalars['Float']
    /** Percentage of non-empty values for messageFolderImportPolicy */
    percentageNotEmptyMessageFolderImportPolicy?: Scalars['Float']
    /** Number of unique values for excludeNonProfessionalEmails */
    countUniqueValuesExcludeNonProfessionalEmails?: Scalars['Int']
    /** Number of empty values for excludeNonProfessionalEmails */
    countEmptyExcludeNonProfessionalEmails?: Scalars['Int']
    /** Number of non-empty values for excludeNonProfessionalEmails */
    countNotEmptyExcludeNonProfessionalEmails?: Scalars['Int']
    /** Percentage of empty values for excludeNonProfessionalEmails */
    percentageEmptyExcludeNonProfessionalEmails?: Scalars['Float']
    /** Percentage of non-empty values for excludeNonProfessionalEmails */
    percentageNotEmptyExcludeNonProfessionalEmails?: Scalars['Float']
    /** Count of true values in the field excludeNonProfessionalEmails */
    countTrueExcludeNonProfessionalEmails?: Scalars['Int']
    /** Count of false values in the field excludeNonProfessionalEmails */
    countFalseExcludeNonProfessionalEmails?: Scalars['Int']
    /** Number of unique values for excludeGroupEmails */
    countUniqueValuesExcludeGroupEmails?: Scalars['Int']
    /** Number of empty values for excludeGroupEmails */
    countEmptyExcludeGroupEmails?: Scalars['Int']
    /** Number of non-empty values for excludeGroupEmails */
    countNotEmptyExcludeGroupEmails?: Scalars['Int']
    /** Percentage of empty values for excludeGroupEmails */
    percentageEmptyExcludeGroupEmails?: Scalars['Float']
    /** Percentage of non-empty values for excludeGroupEmails */
    percentageNotEmptyExcludeGroupEmails?: Scalars['Float']
    /** Count of true values in the field excludeGroupEmails */
    countTrueExcludeGroupEmails?: Scalars['Int']
    /** Count of false values in the field excludeGroupEmails */
    countFalseExcludeGroupEmails?: Scalars['Int']
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: Scalars['Int']
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: Scalars['Int']
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: Scalars['Int']
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: Scalars['Float']
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: Scalars['Int']
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: Scalars['Int']
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: Scalars['Int']
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: Scalars['Int']
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: Scalars['Int']
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: Scalars['Float']
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: Scalars['Float']
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: Scalars['Int']
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: Scalars['Int']
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: Scalars['Int']
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: Scalars['Float']
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: Scalars['DateTime']
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: Scalars['Int']
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: Scalars['Int']
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: Scalars['Int']
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: Scalars['Float']
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: Scalars['Float']
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: Scalars['Int']
    /** Number of empty values for syncStage */
    countEmptySyncStage?: Scalars['Int']
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: Scalars['Int']
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: Scalars['Float']
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: Scalars['Float']
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: Scalars['Int']
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: Scalars['Int']
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: Scalars['Int']
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: Scalars['Float']
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: Scalars['DateTime']
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: Scalars['Int']
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: Scalars['Int']
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: Scalars['Int']
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: Scalars['Float']
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: Scalars['Float']
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: Scalars['Float']
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: Scalars['Float']
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: Scalars['Float']
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageChannelEdge[]
    pageInfo?: PageInfo
    __typename: 'MessageChannelConnection'
}


/** Message Channels */
export interface MessageChannelGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: Scalars['Int']
    /** Number of empty values for visibility */
    countEmptyVisibility?: Scalars['Int']
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: Scalars['Int']
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: Scalars['Float']
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: Scalars['Float']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for type */
    countUniqueValuesType?: Scalars['Int']
    /** Number of empty values for type */
    countEmptyType?: Scalars['Int']
    /** Number of non-empty values for type */
    countNotEmptyType?: Scalars['Int']
    /** Percentage of empty values for type */
    percentageEmptyType?: Scalars['Float']
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: Scalars['Float']
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: Scalars['Int']
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: Scalars['Float']
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: Scalars['Int']
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: Scalars['Int']
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: Scalars['Int']
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: Scalars['Int']
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: Scalars['Float']
    /** Number of unique values for messageFolderImportPolicy */
    countUniqueValuesMessageFolderImportPolicy?: Scalars['Int']
    /** Number of empty values for messageFolderImportPolicy */
    countEmptyMessageFolderImportPolicy?: Scalars['Int']
    /** Number of non-empty values for messageFolderImportPolicy */
    countNotEmptyMessageFolderImportPolicy?: Scalars['Int']
    /** Percentage of empty values for messageFolderImportPolicy */
    percentageEmptyMessageFolderImportPolicy?: Scalars['Float']
    /** Percentage of non-empty values for messageFolderImportPolicy */
    percentageNotEmptyMessageFolderImportPolicy?: Scalars['Float']
    /** Number of unique values for excludeNonProfessionalEmails */
    countUniqueValuesExcludeNonProfessionalEmails?: Scalars['Int']
    /** Number of empty values for excludeNonProfessionalEmails */
    countEmptyExcludeNonProfessionalEmails?: Scalars['Int']
    /** Number of non-empty values for excludeNonProfessionalEmails */
    countNotEmptyExcludeNonProfessionalEmails?: Scalars['Int']
    /** Percentage of empty values for excludeNonProfessionalEmails */
    percentageEmptyExcludeNonProfessionalEmails?: Scalars['Float']
    /** Percentage of non-empty values for excludeNonProfessionalEmails */
    percentageNotEmptyExcludeNonProfessionalEmails?: Scalars['Float']
    /** Count of true values in the field excludeNonProfessionalEmails */
    countTrueExcludeNonProfessionalEmails?: Scalars['Int']
    /** Count of false values in the field excludeNonProfessionalEmails */
    countFalseExcludeNonProfessionalEmails?: Scalars['Int']
    /** Number of unique values for excludeGroupEmails */
    countUniqueValuesExcludeGroupEmails?: Scalars['Int']
    /** Number of empty values for excludeGroupEmails */
    countEmptyExcludeGroupEmails?: Scalars['Int']
    /** Number of non-empty values for excludeGroupEmails */
    countNotEmptyExcludeGroupEmails?: Scalars['Int']
    /** Percentage of empty values for excludeGroupEmails */
    percentageEmptyExcludeGroupEmails?: Scalars['Float']
    /** Percentage of non-empty values for excludeGroupEmails */
    percentageNotEmptyExcludeGroupEmails?: Scalars['Float']
    /** Count of true values in the field excludeGroupEmails */
    countTrueExcludeGroupEmails?: Scalars['Int']
    /** Count of false values in the field excludeGroupEmails */
    countFalseExcludeGroupEmails?: Scalars['Int']
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: Scalars['Int']
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: Scalars['Int']
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: Scalars['Int']
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: Scalars['Float']
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: Scalars['Float']
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: Scalars['Int']
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: Scalars['Int']
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: Scalars['Int']
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: Scalars['Int']
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: Scalars['Int']
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: Scalars['Float']
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: Scalars['Float']
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: Scalars['Int']
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: Scalars['Int']
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: Scalars['Int']
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: Scalars['Float']
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: Scalars['DateTime']
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: Scalars['Int']
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: Scalars['Int']
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: Scalars['Int']
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: Scalars['Float']
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: Scalars['Float']
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: Scalars['Int']
    /** Number of empty values for syncStage */
    countEmptySyncStage?: Scalars['Int']
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: Scalars['Int']
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: Scalars['Float']
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: Scalars['Float']
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: Scalars['Int']
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: Scalars['Int']
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: Scalars['Int']
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: Scalars['Float']
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: Scalars['Float']
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: Scalars['DateTime']
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: Scalars['DateTime']
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: Scalars['Int']
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: Scalars['Int']
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: Scalars['Int']
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: Scalars['Float']
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: Scalars['Float']
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: Scalars['Float']
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: Scalars['Float']
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: Scalars['Float']
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageChannelEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'MessageChannelGroupByConnection'
}


/** Role */
export type MessageParticipantRoleEnum = 'from' | 'to' | 'cc' | 'bcc'


/** Message Participants */
export interface MessageParticipant {
    /** Role */
    role?: MessageParticipantRoleEnum
    /** Handle */
    handle?: Scalars['String']
    /** Display Name */
    displayName?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Message */
    messageId?: Scalars['ID']
    /** Person */
    personId?: Scalars['ID']
    /** Workspace member */
    workspaceMemberId?: Scalars['ID']
    /** Message */
    message?: Message
    /** Person */
    person?: Person
    /** Workspace member */
    workspaceMember?: WorkspaceMember
    __typename: 'MessageParticipant'
}


/** Message Participants */
export interface MessageParticipantEdge {
    node?: MessageParticipant
    cursor?: Scalars['Cursor']
    __typename: 'MessageParticipantEdge'
}


/** Message Participants */
export interface MessageParticipantConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for role */
    countUniqueValuesRole?: Scalars['Int']
    /** Number of empty values for role */
    countEmptyRole?: Scalars['Int']
    /** Number of non-empty values for role */
    countNotEmptyRole?: Scalars['Int']
    /** Percentage of empty values for role */
    percentageEmptyRole?: Scalars['Float']
    /** Percentage of non-empty values for role */
    percentageNotEmptyRole?: Scalars['Float']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: Scalars['Int']
    /** Number of empty values for displayName */
    countEmptyDisplayName?: Scalars['Int']
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: Scalars['Int']
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: Scalars['Float']
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageParticipantEdge[]
    pageInfo?: PageInfo
    __typename: 'MessageParticipantConnection'
}


/** Message Participants */
export interface MessageParticipantGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for role */
    countUniqueValuesRole?: Scalars['Int']
    /** Number of empty values for role */
    countEmptyRole?: Scalars['Int']
    /** Number of non-empty values for role */
    countNotEmptyRole?: Scalars['Int']
    /** Percentage of empty values for role */
    percentageEmptyRole?: Scalars['Float']
    /** Percentage of non-empty values for role */
    percentageNotEmptyRole?: Scalars['Float']
    /** Number of unique values for handle */
    countUniqueValuesHandle?: Scalars['Int']
    /** Number of empty values for handle */
    countEmptyHandle?: Scalars['Int']
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: Scalars['Int']
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: Scalars['Float']
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: Scalars['Float']
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: Scalars['Int']
    /** Number of empty values for displayName */
    countEmptyDisplayName?: Scalars['Int']
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: Scalars['Int']
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: Scalars['Float']
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageParticipantEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'MessageParticipantGroupByConnection'
}


/** Folder for Message Channel */
export interface MessageFolder {
    /** Folder name */
    name?: Scalars['String']
    /** Sync Cursor */
    syncCursor?: Scalars['String']
    /** Is Sent Folder */
    isSentFolder?: Scalars['Boolean']
    /** Is Synced */
    isSynced?: Scalars['Boolean']
    /** External ID */
    externalId?: Scalars['String']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Message Channel */
    messageChannelId?: Scalars['ID']
    /** Message Channel */
    messageChannel?: MessageChannel
    __typename: 'MessageFolder'
}


/** Folder for Message Channel */
export interface MessageFolderEdge {
    node?: MessageFolder
    cursor?: Scalars['Cursor']
    __typename: 'MessageFolderEdge'
}


/** Folder for Message Channel */
export interface MessageFolderConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: Scalars['Int']
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: Scalars['Int']
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: Scalars['Int']
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: Scalars['Float']
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: Scalars['Float']
    /** Number of unique values for isSentFolder */
    countUniqueValuesIsSentFolder?: Scalars['Int']
    /** Number of empty values for isSentFolder */
    countEmptyIsSentFolder?: Scalars['Int']
    /** Number of non-empty values for isSentFolder */
    countNotEmptyIsSentFolder?: Scalars['Int']
    /** Percentage of empty values for isSentFolder */
    percentageEmptyIsSentFolder?: Scalars['Float']
    /** Percentage of non-empty values for isSentFolder */
    percentageNotEmptyIsSentFolder?: Scalars['Float']
    /** Count of true values in the field isSentFolder */
    countTrueIsSentFolder?: Scalars['Int']
    /** Count of false values in the field isSentFolder */
    countFalseIsSentFolder?: Scalars['Int']
    /** Number of unique values for isSynced */
    countUniqueValuesIsSynced?: Scalars['Int']
    /** Number of empty values for isSynced */
    countEmptyIsSynced?: Scalars['Int']
    /** Number of non-empty values for isSynced */
    countNotEmptyIsSynced?: Scalars['Int']
    /** Percentage of empty values for isSynced */
    percentageEmptyIsSynced?: Scalars['Float']
    /** Percentage of non-empty values for isSynced */
    percentageNotEmptyIsSynced?: Scalars['Float']
    /** Count of true values in the field isSynced */
    countTrueIsSynced?: Scalars['Int']
    /** Count of false values in the field isSynced */
    countFalseIsSynced?: Scalars['Int']
    /** Number of unique values for externalId */
    countUniqueValuesExternalId?: Scalars['Int']
    /** Number of empty values for externalId */
    countEmptyExternalId?: Scalars['Int']
    /** Number of non-empty values for externalId */
    countNotEmptyExternalId?: Scalars['Int']
    /** Percentage of empty values for externalId */
    percentageEmptyExternalId?: Scalars['Float']
    /** Percentage of non-empty values for externalId */
    percentageNotEmptyExternalId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageFolderEdge[]
    pageInfo?: PageInfo
    __typename: 'MessageFolderConnection'
}


/** Folder for Message Channel */
export interface MessageFolderGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: Scalars['Int']
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: Scalars['Int']
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: Scalars['Int']
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: Scalars['Float']
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: Scalars['Float']
    /** Number of unique values for isSentFolder */
    countUniqueValuesIsSentFolder?: Scalars['Int']
    /** Number of empty values for isSentFolder */
    countEmptyIsSentFolder?: Scalars['Int']
    /** Number of non-empty values for isSentFolder */
    countNotEmptyIsSentFolder?: Scalars['Int']
    /** Percentage of empty values for isSentFolder */
    percentageEmptyIsSentFolder?: Scalars['Float']
    /** Percentage of non-empty values for isSentFolder */
    percentageNotEmptyIsSentFolder?: Scalars['Float']
    /** Count of true values in the field isSentFolder */
    countTrueIsSentFolder?: Scalars['Int']
    /** Count of false values in the field isSentFolder */
    countFalseIsSentFolder?: Scalars['Int']
    /** Number of unique values for isSynced */
    countUniqueValuesIsSynced?: Scalars['Int']
    /** Number of empty values for isSynced */
    countEmptyIsSynced?: Scalars['Int']
    /** Number of non-empty values for isSynced */
    countNotEmptyIsSynced?: Scalars['Int']
    /** Percentage of empty values for isSynced */
    percentageEmptyIsSynced?: Scalars['Float']
    /** Percentage of non-empty values for isSynced */
    percentageNotEmptyIsSynced?: Scalars['Float']
    /** Count of true values in the field isSynced */
    countTrueIsSynced?: Scalars['Int']
    /** Count of false values in the field isSynced */
    countFalseIsSynced?: Scalars['Int']
    /** Number of unique values for externalId */
    countUniqueValuesExternalId?: Scalars['Int']
    /** Number of empty values for externalId */
    countEmptyExternalId?: Scalars['Int']
    /** Number of non-empty values for externalId */
    countNotEmptyExternalId?: Scalars['Int']
    /** Percentage of empty values for externalId */
    percentageEmptyExternalId?: Scalars['Float']
    /** Percentage of non-empty values for externalId */
    percentageNotEmptyExternalId?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageFolderEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'MessageFolderGroupByConnection'
}


/** Message Direction */
export type MessageChannelMessageAssociationDirectionEnum = 'INCOMING' | 'OUTGOING'


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociation {
    /** Message id from the messaging provider */
    messageExternalId?: Scalars['String']
    /** Thread id from the messaging provider */
    messageThreadExternalId?: Scalars['String']
    /** Message Direction */
    direction?: MessageChannelMessageAssociationDirectionEnum
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Message Channel Id */
    messageChannelId?: Scalars['ID']
    /** Message Id */
    messageId?: Scalars['ID']
    /** Message Channel Id */
    messageChannel?: MessageChannel
    /** Message Id */
    message?: Message
    __typename: 'MessageChannelMessageAssociation'
}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationEdge {
    node?: MessageChannelMessageAssociation
    cursor?: Scalars['Cursor']
    __typename: 'MessageChannelMessageAssociationEdge'
}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for messageExternalId */
    countUniqueValuesMessageExternalId?: Scalars['Int']
    /** Number of empty values for messageExternalId */
    countEmptyMessageExternalId?: Scalars['Int']
    /** Number of non-empty values for messageExternalId */
    countNotEmptyMessageExternalId?: Scalars['Int']
    /** Percentage of empty values for messageExternalId */
    percentageEmptyMessageExternalId?: Scalars['Float']
    /** Percentage of non-empty values for messageExternalId */
    percentageNotEmptyMessageExternalId?: Scalars['Float']
    /** Number of unique values for messageThreadExternalId */
    countUniqueValuesMessageThreadExternalId?: Scalars['Int']
    /** Number of empty values for messageThreadExternalId */
    countEmptyMessageThreadExternalId?: Scalars['Int']
    /** Number of non-empty values for messageThreadExternalId */
    countNotEmptyMessageThreadExternalId?: Scalars['Int']
    /** Percentage of empty values for messageThreadExternalId */
    percentageEmptyMessageThreadExternalId?: Scalars['Float']
    /** Percentage of non-empty values for messageThreadExternalId */
    percentageNotEmptyMessageThreadExternalId?: Scalars['Float']
    /** Number of unique values for direction */
    countUniqueValuesDirection?: Scalars['Int']
    /** Number of empty values for direction */
    countEmptyDirection?: Scalars['Int']
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: Scalars['Int']
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: Scalars['Float']
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageChannelMessageAssociationEdge[]
    pageInfo?: PageInfo
    __typename: 'MessageChannelMessageAssociationConnection'
}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for messageExternalId */
    countUniqueValuesMessageExternalId?: Scalars['Int']
    /** Number of empty values for messageExternalId */
    countEmptyMessageExternalId?: Scalars['Int']
    /** Number of non-empty values for messageExternalId */
    countNotEmptyMessageExternalId?: Scalars['Int']
    /** Percentage of empty values for messageExternalId */
    percentageEmptyMessageExternalId?: Scalars['Float']
    /** Percentage of non-empty values for messageExternalId */
    percentageNotEmptyMessageExternalId?: Scalars['Float']
    /** Number of unique values for messageThreadExternalId */
    countUniqueValuesMessageThreadExternalId?: Scalars['Int']
    /** Number of empty values for messageThreadExternalId */
    countEmptyMessageThreadExternalId?: Scalars['Int']
    /** Number of non-empty values for messageThreadExternalId */
    countNotEmptyMessageThreadExternalId?: Scalars['Int']
    /** Percentage of empty values for messageThreadExternalId */
    percentageEmptyMessageThreadExternalId?: Scalars['Float']
    /** Percentage of non-empty values for messageThreadExternalId */
    percentageNotEmptyMessageThreadExternalId?: Scalars['Float']
    /** Number of unique values for direction */
    countUniqueValuesDirection?: Scalars['Int']
    /** Number of empty values for direction */
    countEmptyDirection?: Scalars['Int']
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: Scalars['Int']
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: Scalars['Float']
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: MessageChannelMessageAssociationEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'MessageChannelMessageAssociationGroupByConnection'
}


/** A note */
export interface Note {
    /** Note record position */
    position?: Scalars['Position']
    /** Note title */
    title?: Scalars['String']
    /** Note body */
    bodyV2?: RichTextV2
    /** The creator of the record */
    createdBy?: Actor
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Note targets */
    noteTargets?: NoteTargetConnection
    /** Note attachments */
    attachments?: AttachmentConnection
    /** Timeline Activities linked to the note. */
    timelineActivities?: TimelineActivityConnection
    /** Favorites linked to the note */
    favorites?: FavoriteConnection
    __typename: 'Note'
}


/** A note */
export interface NoteEdge {
    node?: Note
    cursor?: Scalars['Cursor']
    __typename: 'NoteEdge'
}


/** A note */
export interface NoteConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: Scalars['Int']
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: Scalars['Int']
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: Scalars['Int']
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: Scalars['Float']
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: NoteEdge[]
    pageInfo?: PageInfo
    __typename: 'NoteConnection'
}


/** A note */
export interface NoteGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: Scalars['Int']
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: Scalars['Int']
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: Scalars['Int']
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: Scalars['Float']
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: NoteEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'NoteGroupByConnection'
}


/** A note target */
export interface NoteTarget {
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** NoteTarget note */
    noteId?: Scalars['ID']
    /** NoteTarget person */
    personId?: Scalars['ID']
    /** NoteTarget company */
    companyId?: Scalars['ID']
    /** NoteTarget opportunity */
    opportunityId?: Scalars['ID']
    /** NoteTargets Rocket */
    rocketId?: Scalars['ID']
    /** NoteTargets Pet */
    petId?: Scalars['ID']
    /** NoteTargets Survey result */
    surveyResultId?: Scalars['ID']
    /** NoteTarget note */
    note?: Note
    /** NoteTarget person */
    person?: Person
    /** NoteTarget company */
    company?: Company
    /** NoteTarget opportunity */
    opportunity?: Opportunity
    /** NoteTargets Rocket */
    rocket?: Rocket
    /** NoteTargets Pet */
    pet?: Pet
    /** NoteTargets Survey result */
    surveyResult?: SurveyResult
    __typename: 'NoteTarget'
}


/** A note target */
export interface NoteTargetEdge {
    node?: NoteTarget
    cursor?: Scalars['Cursor']
    __typename: 'NoteTargetEdge'
}


/** A note target */
export interface NoteTargetConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: NoteTargetEdge[]
    pageInfo?: PageInfo
    __typename: 'NoteTargetConnection'
}


/** A note target */
export interface NoteTargetGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: NoteTargetEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'NoteTargetGroupByConnection'
}


/** Opportunity stage */
export type OpportunityStageEnum = 'NEW' | 'SCREENING' | 'MEETING' | 'PROPOSAL' | 'CUSTOMER'


/** An opportunity */
export interface Opportunity {
    /** The opportunity name */
    name?: Scalars['String']
    /** Opportunity amount */
    amount?: Currency
    /** Opportunity close date */
    closeDate?: Scalars['DateTime']
    /** Opportunity stage */
    stage?: OpportunityStageEnum
    /** Opportunity record position */
    position?: Scalars['Position']
    /** The creator of the record */
    createdBy?: Actor
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Opportunity point of contact */
    pointOfContactId?: Scalars['ID']
    /** Opportunity company */
    companyId?: Scalars['ID']
    /** Opportunity point of contact */
    pointOfContact?: Person
    /** Opportunity company */
    company?: Company
    /** Favorites linked to the opportunity */
    favorites?: FavoriteConnection
    /** Tasks tied to the opportunity */
    taskTargets?: TaskTargetConnection
    /** Notes tied to the opportunity */
    noteTargets?: NoteTargetConnection
    /** Attachments linked to the opportunity */
    attachments?: AttachmentConnection
    /** Timeline Activities linked to the opportunity. */
    timelineActivities?: TimelineActivityConnection
    __typename: 'Opportunity'
}


/** An opportunity */
export interface OpportunityEdge {
    node?: Opportunity
    cursor?: Scalars['Cursor']
    __typename: 'OpportunityEdge'
}


/** An opportunity */
export interface OpportunityConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for amount */
    countUniqueValuesAmount?: Scalars['Int']
    /** Number of empty values for amount */
    countEmptyAmount?: Scalars['Int']
    /** Number of non-empty values for amount */
    countNotEmptyAmount?: Scalars['Int']
    /** Percentage of empty values for amount */
    percentageEmptyAmount?: Scalars['Float']
    /** Percentage of non-empty values for amount */
    percentageNotEmptyAmount?: Scalars['Float']
    /** Minimum amount contained in the field amount */
    minAmountAmountMicros?: Scalars['Float']
    /** Maximal amount contained in the field amount */
    maxAmountAmountMicros?: Scalars['Float']
    /** Sum of amounts contained in the field amount */
    sumAmountAmountMicros?: Scalars['Float']
    /** Average amount contained in the field amount */
    avgAmountAmountMicros?: Scalars['Float']
    /** Number of unique values for closeDate */
    countUniqueValuesCloseDate?: Scalars['Int']
    /** Number of empty values for closeDate */
    countEmptyCloseDate?: Scalars['Int']
    /** Number of non-empty values for closeDate */
    countNotEmptyCloseDate?: Scalars['Int']
    /** Percentage of empty values for closeDate */
    percentageEmptyCloseDate?: Scalars['Float']
    /** Percentage of non-empty values for closeDate */
    percentageNotEmptyCloseDate?: Scalars['Float']
    /** Earliest date contained in the field closeDate */
    minCloseDate?: Scalars['DateTime']
    /** Latest date contained in the field closeDate */
    maxCloseDate?: Scalars['DateTime']
    /** Number of unique values for stage */
    countUniqueValuesStage?: Scalars['Int']
    /** Number of empty values for stage */
    countEmptyStage?: Scalars['Int']
    /** Number of non-empty values for stage */
    countNotEmptyStage?: Scalars['Int']
    /** Percentage of empty values for stage */
    percentageEmptyStage?: Scalars['Float']
    /** Percentage of non-empty values for stage */
    percentageNotEmptyStage?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: OpportunityEdge[]
    pageInfo?: PageInfo
    __typename: 'OpportunityConnection'
}


/** An opportunity */
export interface OpportunityGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for amount */
    countUniqueValuesAmount?: Scalars['Int']
    /** Number of empty values for amount */
    countEmptyAmount?: Scalars['Int']
    /** Number of non-empty values for amount */
    countNotEmptyAmount?: Scalars['Int']
    /** Percentage of empty values for amount */
    percentageEmptyAmount?: Scalars['Float']
    /** Percentage of non-empty values for amount */
    percentageNotEmptyAmount?: Scalars['Float']
    /** Minimum amount contained in the field amount */
    minAmountAmountMicros?: Scalars['Float']
    /** Maximal amount contained in the field amount */
    maxAmountAmountMicros?: Scalars['Float']
    /** Sum of amounts contained in the field amount */
    sumAmountAmountMicros?: Scalars['Float']
    /** Average amount contained in the field amount */
    avgAmountAmountMicros?: Scalars['Float']
    /** Number of unique values for closeDate */
    countUniqueValuesCloseDate?: Scalars['Int']
    /** Number of empty values for closeDate */
    countEmptyCloseDate?: Scalars['Int']
    /** Number of non-empty values for closeDate */
    countNotEmptyCloseDate?: Scalars['Int']
    /** Percentage of empty values for closeDate */
    percentageEmptyCloseDate?: Scalars['Float']
    /** Percentage of non-empty values for closeDate */
    percentageNotEmptyCloseDate?: Scalars['Float']
    /** Earliest date contained in the field closeDate */
    minCloseDate?: Scalars['DateTime']
    /** Latest date contained in the field closeDate */
    maxCloseDate?: Scalars['DateTime']
    /** Number of unique values for stage */
    countUniqueValuesStage?: Scalars['Int']
    /** Number of empty values for stage */
    countEmptyStage?: Scalars['Int']
    /** Number of non-empty values for stage */
    countNotEmptyStage?: Scalars['Int']
    /** Percentage of empty values for stage */
    percentageEmptyStage?: Scalars['Float']
    /** Percentage of non-empty values for stage */
    percentageNotEmptyStage?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: OpportunityEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'OpportunityGroupByConnection'
}


/** Person's Work Preference */
export type PersonWorkPreferenceEnum = 'ON_SITE' | 'HYBRID' | 'REMOTE_WORK'


/** Person's Performance Rating */
export type PersonPerformanceRatingEnum = 'RATING_1' | 'RATING_2' | 'RATING_3' | 'RATING_4' | 'RATING_5'


/** A person */
export interface Person {
    /** Contact’s name */
    name?: FullName
    /** Contact’s Emails */
    emails?: Emails
    /** Contact’s Linkedin account */
    linkedinLink?: Links
    /** Contact’s X/Twitter account */
    xLink?: Links
    /** Contact’s job title */
    jobTitle?: Scalars['String']
    /** Contact’s phone numbers */
    phones?: Phones
    /** Contact’s city */
    city?: Scalars['String']
    /** Contact’s avatar */
    avatarUrl?: Scalars['String']
    /** Person record Position */
    position?: Scalars['Position']
    /** The creator of the record */
    createdBy?: Actor
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Contact’s company */
    companyId?: Scalars['ID']
    /** Contact's Intro */
    intro?: Scalars['String']
    /** Contact's Whatsapp Number */
    whatsapp?: Phones
    /** Person's Work Preference */
    workPreference?: (PersonWorkPreferenceEnum | undefined)[]
    /** Person's Performance Rating */
    performanceRating?: PersonPerformanceRatingEnum
    /** Contact’s company */
    company?: Company
    /** List of opportunities for which that person is the point of contact */
    pointOfContactForOpportunities?: OpportunityConnection
    /** Tasks tied to the contact */
    taskTargets?: TaskTargetConnection
    /** Notes tied to the contact */
    noteTargets?: NoteTargetConnection
    /** Favorites linked to the contact */
    favorites?: FavoriteConnection
    /** Attachments linked to the contact. */
    attachments?: AttachmentConnection
    /** Message Participants */
    messageParticipants?: MessageParticipantConnection
    /** Calendar Event Participants */
    calendarEventParticipants?: CalendarEventParticipantConnection
    /** Events linked to the person */
    timelineActivities?: TimelineActivityConnection
    __typename: 'Person'
}


/** A person */
export interface PersonEdge {
    node?: Person
    cursor?: Scalars['Cursor']
    __typename: 'PersonEdge'
}


/** A person */
export interface PersonConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for emails */
    countUniqueValuesEmails?: Scalars['Int']
    /** Number of empty values for emails */
    countEmptyEmails?: Scalars['Int']
    /** Number of non-empty values for emails */
    countNotEmptyEmails?: Scalars['Int']
    /** Percentage of empty values for emails */
    percentageEmptyEmails?: Scalars['Float']
    /** Percentage of non-empty values for emails */
    percentageNotEmptyEmails?: Scalars['Float']
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: Scalars['Int']
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: Scalars['Int']
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: Scalars['Int']
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: Scalars['Float']
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: Scalars['Float']
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: Scalars['Int']
    /** Number of empty values for xLink */
    countEmptyXLink?: Scalars['Int']
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: Scalars['Int']
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: Scalars['Float']
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: Scalars['Float']
    /** Number of unique values for jobTitle */
    countUniqueValuesJobTitle?: Scalars['Int']
    /** Number of empty values for jobTitle */
    countEmptyJobTitle?: Scalars['Int']
    /** Number of non-empty values for jobTitle */
    countNotEmptyJobTitle?: Scalars['Int']
    /** Percentage of empty values for jobTitle */
    percentageEmptyJobTitle?: Scalars['Float']
    /** Percentage of non-empty values for jobTitle */
    percentageNotEmptyJobTitle?: Scalars['Float']
    /** Number of unique values for phones */
    countUniqueValuesPhones?: Scalars['Int']
    /** Number of empty values for phones */
    countEmptyPhones?: Scalars['Int']
    /** Number of non-empty values for phones */
    countNotEmptyPhones?: Scalars['Int']
    /** Percentage of empty values for phones */
    percentageEmptyPhones?: Scalars['Float']
    /** Percentage of non-empty values for phones */
    percentageNotEmptyPhones?: Scalars['Float']
    /** Number of unique values for city */
    countUniqueValuesCity?: Scalars['Int']
    /** Number of empty values for city */
    countEmptyCity?: Scalars['Int']
    /** Number of non-empty values for city */
    countNotEmptyCity?: Scalars['Int']
    /** Percentage of empty values for city */
    percentageEmptyCity?: Scalars['Float']
    /** Percentage of non-empty values for city */
    percentageNotEmptyCity?: Scalars['Float']
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: Scalars['Int']
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: Scalars['Int']
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: Scalars['Int']
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: Scalars['Float']
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for intro */
    countUniqueValuesIntro?: Scalars['Int']
    /** Number of empty values for intro */
    countEmptyIntro?: Scalars['Int']
    /** Number of non-empty values for intro */
    countNotEmptyIntro?: Scalars['Int']
    /** Percentage of empty values for intro */
    percentageEmptyIntro?: Scalars['Float']
    /** Percentage of non-empty values for intro */
    percentageNotEmptyIntro?: Scalars['Float']
    /** Number of unique values for whatsapp */
    countUniqueValuesWhatsapp?: Scalars['Int']
    /** Number of empty values for whatsapp */
    countEmptyWhatsapp?: Scalars['Int']
    /** Number of non-empty values for whatsapp */
    countNotEmptyWhatsapp?: Scalars['Int']
    /** Percentage of empty values for whatsapp */
    percentageEmptyWhatsapp?: Scalars['Float']
    /** Percentage of non-empty values for whatsapp */
    percentageNotEmptyWhatsapp?: Scalars['Float']
    /** Number of unique values for workPreference */
    countUniqueValuesWorkPreference?: Scalars['Int']
    /** Number of empty values for workPreference */
    countEmptyWorkPreference?: Scalars['Int']
    /** Number of non-empty values for workPreference */
    countNotEmptyWorkPreference?: Scalars['Int']
    /** Percentage of empty values for workPreference */
    percentageEmptyWorkPreference?: Scalars['Float']
    /** Percentage of non-empty values for workPreference */
    percentageNotEmptyWorkPreference?: Scalars['Float']
    /** Number of unique values for performanceRating */
    countUniqueValuesPerformanceRating?: Scalars['Int']
    /** Number of empty values for performanceRating */
    countEmptyPerformanceRating?: Scalars['Int']
    /** Number of non-empty values for performanceRating */
    countNotEmptyPerformanceRating?: Scalars['Int']
    /** Percentage of empty values for performanceRating */
    percentageEmptyPerformanceRating?: Scalars['Float']
    /** Percentage of non-empty values for performanceRating */
    percentageNotEmptyPerformanceRating?: Scalars['Float']
    edges?: PersonEdge[]
    pageInfo?: PageInfo
    __typename: 'PersonConnection'
}


/** A person */
export interface PersonGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for emails */
    countUniqueValuesEmails?: Scalars['Int']
    /** Number of empty values for emails */
    countEmptyEmails?: Scalars['Int']
    /** Number of non-empty values for emails */
    countNotEmptyEmails?: Scalars['Int']
    /** Percentage of empty values for emails */
    percentageEmptyEmails?: Scalars['Float']
    /** Percentage of non-empty values for emails */
    percentageNotEmptyEmails?: Scalars['Float']
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: Scalars['Int']
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: Scalars['Int']
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: Scalars['Int']
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: Scalars['Float']
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: Scalars['Float']
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: Scalars['Int']
    /** Number of empty values for xLink */
    countEmptyXLink?: Scalars['Int']
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: Scalars['Int']
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: Scalars['Float']
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: Scalars['Float']
    /** Number of unique values for jobTitle */
    countUniqueValuesJobTitle?: Scalars['Int']
    /** Number of empty values for jobTitle */
    countEmptyJobTitle?: Scalars['Int']
    /** Number of non-empty values for jobTitle */
    countNotEmptyJobTitle?: Scalars['Int']
    /** Percentage of empty values for jobTitle */
    percentageEmptyJobTitle?: Scalars['Float']
    /** Percentage of non-empty values for jobTitle */
    percentageNotEmptyJobTitle?: Scalars['Float']
    /** Number of unique values for phones */
    countUniqueValuesPhones?: Scalars['Int']
    /** Number of empty values for phones */
    countEmptyPhones?: Scalars['Int']
    /** Number of non-empty values for phones */
    countNotEmptyPhones?: Scalars['Int']
    /** Percentage of empty values for phones */
    percentageEmptyPhones?: Scalars['Float']
    /** Percentage of non-empty values for phones */
    percentageNotEmptyPhones?: Scalars['Float']
    /** Number of unique values for city */
    countUniqueValuesCity?: Scalars['Int']
    /** Number of empty values for city */
    countEmptyCity?: Scalars['Int']
    /** Number of non-empty values for city */
    countNotEmptyCity?: Scalars['Int']
    /** Percentage of empty values for city */
    percentageEmptyCity?: Scalars['Float']
    /** Percentage of non-empty values for city */
    percentageNotEmptyCity?: Scalars['Float']
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: Scalars['Int']
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: Scalars['Int']
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: Scalars['Int']
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: Scalars['Float']
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for intro */
    countUniqueValuesIntro?: Scalars['Int']
    /** Number of empty values for intro */
    countEmptyIntro?: Scalars['Int']
    /** Number of non-empty values for intro */
    countNotEmptyIntro?: Scalars['Int']
    /** Percentage of empty values for intro */
    percentageEmptyIntro?: Scalars['Float']
    /** Percentage of non-empty values for intro */
    percentageNotEmptyIntro?: Scalars['Float']
    /** Number of unique values for whatsapp */
    countUniqueValuesWhatsapp?: Scalars['Int']
    /** Number of empty values for whatsapp */
    countEmptyWhatsapp?: Scalars['Int']
    /** Number of non-empty values for whatsapp */
    countNotEmptyWhatsapp?: Scalars['Int']
    /** Percentage of empty values for whatsapp */
    percentageEmptyWhatsapp?: Scalars['Float']
    /** Percentage of non-empty values for whatsapp */
    percentageNotEmptyWhatsapp?: Scalars['Float']
    /** Number of unique values for workPreference */
    countUniqueValuesWorkPreference?: Scalars['Int']
    /** Number of empty values for workPreference */
    countEmptyWorkPreference?: Scalars['Int']
    /** Number of non-empty values for workPreference */
    countNotEmptyWorkPreference?: Scalars['Int']
    /** Percentage of empty values for workPreference */
    percentageEmptyWorkPreference?: Scalars['Float']
    /** Percentage of non-empty values for workPreference */
    percentageNotEmptyWorkPreference?: Scalars['Float']
    /** Number of unique values for performanceRating */
    countUniqueValuesPerformanceRating?: Scalars['Int']
    /** Number of empty values for performanceRating */
    countEmptyPerformanceRating?: Scalars['Int']
    /** Number of non-empty values for performanceRating */
    countNotEmptyPerformanceRating?: Scalars['Int']
    /** Percentage of empty values for performanceRating */
    percentageEmptyPerformanceRating?: Scalars['Float']
    /** Percentage of non-empty values for performanceRating */
    percentageNotEmptyPerformanceRating?: Scalars['Float']
    edges?: PersonEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'PersonGroupByConnection'
}


/** Task status */
export type TaskStatusEnum = 'TODO' | 'IN_PROGRESS' | 'DONE'


/** A task */
export interface Task {
    /** Task record position */
    position?: Scalars['Position']
    /** Task title */
    title?: Scalars['String']
    /** Task body */
    bodyV2?: RichTextV2
    /** Task due date */
    dueAt?: Scalars['DateTime']
    /** Task status */
    status?: TaskStatusEnum
    /** The creator of the record */
    createdBy?: Actor
    /** Field used for full-text search */
    searchVector?: Scalars['TSVector']
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** Task assignee */
    assigneeId?: Scalars['ID']
    /** Task targets */
    taskTargets?: TaskTargetConnection
    /** Task attachments */
    attachments?: AttachmentConnection
    /** Task assignee */
    assignee?: WorkspaceMember
    /** Timeline Activities linked to the task. */
    timelineActivities?: TimelineActivityConnection
    /** Favorites linked to the task */
    favorites?: FavoriteConnection
    __typename: 'Task'
}


/** A task */
export interface TaskEdge {
    node?: Task
    cursor?: Scalars['Cursor']
    __typename: 'TaskEdge'
}


/** A task */
export interface TaskConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: Scalars['Int']
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: Scalars['Int']
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: Scalars['Int']
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: Scalars['Float']
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: Scalars['Float']
    /** Number of unique values for dueAt */
    countUniqueValuesDueAt?: Scalars['Int']
    /** Number of empty values for dueAt */
    countEmptyDueAt?: Scalars['Int']
    /** Number of non-empty values for dueAt */
    countNotEmptyDueAt?: Scalars['Int']
    /** Percentage of empty values for dueAt */
    percentageEmptyDueAt?: Scalars['Float']
    /** Percentage of non-empty values for dueAt */
    percentageNotEmptyDueAt?: Scalars['Float']
    /** Earliest date contained in the field dueAt */
    minDueAt?: Scalars['DateTime']
    /** Latest date contained in the field dueAt */
    maxDueAt?: Scalars['DateTime']
    /** Number of unique values for status */
    countUniqueValuesStatus?: Scalars['Int']
    /** Number of empty values for status */
    countEmptyStatus?: Scalars['Int']
    /** Number of non-empty values for status */
    countNotEmptyStatus?: Scalars['Int']
    /** Percentage of empty values for status */
    percentageEmptyStatus?: Scalars['Float']
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: TaskEdge[]
    pageInfo?: PageInfo
    __typename: 'TaskConnection'
}


/** A task */
export interface TaskGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for title */
    countUniqueValuesTitle?: Scalars['Int']
    /** Number of empty values for title */
    countEmptyTitle?: Scalars['Int']
    /** Number of non-empty values for title */
    countNotEmptyTitle?: Scalars['Int']
    /** Percentage of empty values for title */
    percentageEmptyTitle?: Scalars['Float']
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: Scalars['Float']
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: Scalars['Int']
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: Scalars['Int']
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: Scalars['Int']
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: Scalars['Float']
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: Scalars['Float']
    /** Number of unique values for dueAt */
    countUniqueValuesDueAt?: Scalars['Int']
    /** Number of empty values for dueAt */
    countEmptyDueAt?: Scalars['Int']
    /** Number of non-empty values for dueAt */
    countNotEmptyDueAt?: Scalars['Int']
    /** Percentage of empty values for dueAt */
    percentageEmptyDueAt?: Scalars['Float']
    /** Percentage of non-empty values for dueAt */
    percentageNotEmptyDueAt?: Scalars['Float']
    /** Earliest date contained in the field dueAt */
    minDueAt?: Scalars['DateTime']
    /** Latest date contained in the field dueAt */
    maxDueAt?: Scalars['DateTime']
    /** Number of unique values for status */
    countUniqueValuesStatus?: Scalars['Int']
    /** Number of empty values for status */
    countEmptyStatus?: Scalars['Int']
    /** Number of non-empty values for status */
    countNotEmptyStatus?: Scalars['Int']
    /** Percentage of empty values for status */
    percentageEmptyStatus?: Scalars['Float']
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: Scalars['Float']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: TaskEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'TaskGroupByConnection'
}


/** A task target */
export interface TaskTarget {
    /** Id */
    id?: Scalars['UUID']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Date when the record was deleted */
    deletedAt?: Scalars['DateTime']
    /** TaskTarget task */
    taskId?: Scalars['ID']
    /** TaskTarget person */
    personId?: Scalars['ID']
    /** TaskTarget company */
    companyId?: Scalars['ID']
    /** TaskTarget opportunity */
    opportunityId?: Scalars['ID']
    /** TaskTargets Rocket */
    rocketId?: Scalars['ID']
    /** TaskTargets Pet */
    petId?: Scalars['ID']
    /** TaskTargets Survey result */
    surveyResultId?: Scalars['ID']
    /** TaskTarget task */
    task?: Task
    /** TaskTarget person */
    person?: Person
    /** TaskTarget company */
    company?: Company
    /** TaskTarget opportunity */
    opportunity?: Opportunity
    /** TaskTargets Rocket */
    rocket?: Rocket
    /** TaskTargets Pet */
    pet?: Pet
    /** TaskTargets Survey result */
    surveyResult?: SurveyResult
    __typename: 'TaskTarget'
}


/** A task target */
export interface TaskTargetEdge {
    node?: TaskTarget
    cursor?: Scalars['Cursor']
    __typename: 'TaskTargetEdge'
}


/** A task target */
export interface TaskTargetConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: TaskTargetEdge[]
    pageInfo?: PageInfo
    __typename: 'TaskTargetConnection'
}


/** A task target */
export interface TaskTargetGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    edges?: TaskTargetEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'TaskTargetGroupByConnection'
}

export type PetSpeciesEnum = 'DOG' | 'CAT' | 'BIRD' | 'FISH' | 'RABBIT' | 'HAMSTER'

export type PetTraitsEnum = 'PLAYFUL' | 'FRIENDLY' | 'PROTECTIVE' | 'SHY' | 'BRAVE' | 'CURIOUS'

export type PetSoundSwagEnum = 'RATING_1' | 'RATING_2' | 'RATING_3' | 'RATING_4' | 'RATING_5'

export interface Pet {
    /** Creation date */
    createdAt?: Scalars['DateTime']
    makesOwnerThinkOf?: FullName
    /** Id */
    id?: Scalars['UUID']
    /** Name */
    name?: Scalars['String']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Deletion date */
    deletedAt?: Scalars['DateTime']
    /** The creator of the record */
    createdBy?: Actor
    /** Position */
    position?: Scalars['Position']
    /** Search vector */
    searchVector?: Scalars['TSVector']
    species?: PetSpeciesEnum
    traits?: (PetTraitsEnum | undefined)[]
    comments?: Scalars['String']
    age?: Scalars['Float']
    location?: Address
    vetPhone?: Phones
    vetEmail?: Emails
    birthday?: Scalars['DateTime']
    isGoodWithKids?: Scalars['Boolean']
    pictures?: Links
    averageCostOfKibblePerMonth?: Currency
    soundSwag?: PetSoundSwagEnum
    bio?: Scalars['String']
    interestingFacts?: (Scalars['String'] | undefined)[]
    extraData?: Scalars['JSON']
    ownerSurveyResultId?: Scalars['ID']
    ownerRocketId?: Scalars['ID']
    /** TimelineActivities tied to the Pet */
    timelineActivities?: TimelineActivityConnection
    /** Favorites tied to the Pet */
    favorites?: FavoriteConnection
    /** Attachments tied to the Pet */
    attachments?: AttachmentConnection
    /** NoteTargets tied to the Pet */
    noteTargets?: NoteTargetConnection
    /** TaskTargets tied to the Pet */
    taskTargets?: TaskTargetConnection
    ownerSurveyResult?: SurveyResult
    ownerRocket?: Rocket
    helperSurveyResults?: SurveyResultConnection
    helperRockets?: RocketConnection
    __typename: 'Pet'
}

export interface PetEdge {
    node?: Pet
    cursor?: Scalars['Cursor']
    __typename: 'PetEdge'
}

export interface PetConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for makesOwnerThinkOf */
    countUniqueValuesMakesOwnerThinkOf?: Scalars['Int']
    /** Number of empty values for makesOwnerThinkOf */
    countEmptyMakesOwnerThinkOf?: Scalars['Int']
    /** Number of non-empty values for makesOwnerThinkOf */
    countNotEmptyMakesOwnerThinkOf?: Scalars['Int']
    /** Percentage of empty values for makesOwnerThinkOf */
    percentageEmptyMakesOwnerThinkOf?: Scalars['Float']
    /** Percentage of non-empty values for makesOwnerThinkOf */
    percentageNotEmptyMakesOwnerThinkOf?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for species */
    countUniqueValuesSpecies?: Scalars['Int']
    /** Number of empty values for species */
    countEmptySpecies?: Scalars['Int']
    /** Number of non-empty values for species */
    countNotEmptySpecies?: Scalars['Int']
    /** Percentage of empty values for species */
    percentageEmptySpecies?: Scalars['Float']
    /** Percentage of non-empty values for species */
    percentageNotEmptySpecies?: Scalars['Float']
    /** Number of unique values for traits */
    countUniqueValuesTraits?: Scalars['Int']
    /** Number of empty values for traits */
    countEmptyTraits?: Scalars['Int']
    /** Number of non-empty values for traits */
    countNotEmptyTraits?: Scalars['Int']
    /** Percentage of empty values for traits */
    percentageEmptyTraits?: Scalars['Float']
    /** Percentage of non-empty values for traits */
    percentageNotEmptyTraits?: Scalars['Float']
    /** Number of unique values for comments */
    countUniqueValuesComments?: Scalars['Int']
    /** Number of empty values for comments */
    countEmptyComments?: Scalars['Int']
    /** Number of non-empty values for comments */
    countNotEmptyComments?: Scalars['Int']
    /** Percentage of empty values for comments */
    percentageEmptyComments?: Scalars['Float']
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: Scalars['Float']
    /** Number of unique values for age */
    countUniqueValuesAge?: Scalars['Int']
    /** Number of empty values for age */
    countEmptyAge?: Scalars['Int']
    /** Number of non-empty values for age */
    countNotEmptyAge?: Scalars['Int']
    /** Percentage of empty values for age */
    percentageEmptyAge?: Scalars['Float']
    /** Percentage of non-empty values for age */
    percentageNotEmptyAge?: Scalars['Float']
    /** Minimum amount contained in the field age */
    minAge?: Scalars['Float']
    /** Maximum amount contained in the field age */
    maxAge?: Scalars['Float']
    /** Average amount contained in the field age */
    avgAge?: Scalars['Float']
    /** Sum of amounts contained in the field age */
    sumAge?: Scalars['Float']
    /** Number of unique values for location */
    countUniqueValuesLocation?: Scalars['Int']
    /** Number of empty values for location */
    countEmptyLocation?: Scalars['Int']
    /** Number of non-empty values for location */
    countNotEmptyLocation?: Scalars['Int']
    /** Percentage of empty values for location */
    percentageEmptyLocation?: Scalars['Float']
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: Scalars['Float']
    /** Number of unique values for vetPhone */
    countUniqueValuesVetPhone?: Scalars['Int']
    /** Number of empty values for vetPhone */
    countEmptyVetPhone?: Scalars['Int']
    /** Number of non-empty values for vetPhone */
    countNotEmptyVetPhone?: Scalars['Int']
    /** Percentage of empty values for vetPhone */
    percentageEmptyVetPhone?: Scalars['Float']
    /** Percentage of non-empty values for vetPhone */
    percentageNotEmptyVetPhone?: Scalars['Float']
    /** Number of unique values for vetEmail */
    countUniqueValuesVetEmail?: Scalars['Int']
    /** Number of empty values for vetEmail */
    countEmptyVetEmail?: Scalars['Int']
    /** Number of non-empty values for vetEmail */
    countNotEmptyVetEmail?: Scalars['Int']
    /** Percentage of empty values for vetEmail */
    percentageEmptyVetEmail?: Scalars['Float']
    /** Percentage of non-empty values for vetEmail */
    percentageNotEmptyVetEmail?: Scalars['Float']
    /** Number of unique values for birthday */
    countUniqueValuesBirthday?: Scalars['Int']
    /** Number of empty values for birthday */
    countEmptyBirthday?: Scalars['Int']
    /** Number of non-empty values for birthday */
    countNotEmptyBirthday?: Scalars['Int']
    /** Percentage of empty values for birthday */
    percentageEmptyBirthday?: Scalars['Float']
    /** Percentage of non-empty values for birthday */
    percentageNotEmptyBirthday?: Scalars['Float']
    /** Earliest date contained in the field birthday */
    minBirthday?: Scalars['DateTime']
    /** Latest date contained in the field birthday */
    maxBirthday?: Scalars['DateTime']
    /** Number of unique values for isGoodWithKids */
    countUniqueValuesIsGoodWithKids?: Scalars['Int']
    /** Number of empty values for isGoodWithKids */
    countEmptyIsGoodWithKids?: Scalars['Int']
    /** Number of non-empty values for isGoodWithKids */
    countNotEmptyIsGoodWithKids?: Scalars['Int']
    /** Percentage of empty values for isGoodWithKids */
    percentageEmptyIsGoodWithKids?: Scalars['Float']
    /** Percentage of non-empty values for isGoodWithKids */
    percentageNotEmptyIsGoodWithKids?: Scalars['Float']
    /** Count of true values in the field isGoodWithKids */
    countTrueIsGoodWithKids?: Scalars['Int']
    /** Count of false values in the field isGoodWithKids */
    countFalseIsGoodWithKids?: Scalars['Int']
    /** Number of unique values for pictures */
    countUniqueValuesPictures?: Scalars['Int']
    /** Number of empty values for pictures */
    countEmptyPictures?: Scalars['Int']
    /** Number of non-empty values for pictures */
    countNotEmptyPictures?: Scalars['Int']
    /** Percentage of empty values for pictures */
    percentageEmptyPictures?: Scalars['Float']
    /** Percentage of non-empty values for pictures */
    percentageNotEmptyPictures?: Scalars['Float']
    /** Number of unique values for averageCostOfKibblePerMonth */
    countUniqueValuesAverageCostOfKibblePerMonth?: Scalars['Int']
    /** Number of empty values for averageCostOfKibblePerMonth */
    countEmptyAverageCostOfKibblePerMonth?: Scalars['Int']
    /** Number of non-empty values for averageCostOfKibblePerMonth */
    countNotEmptyAverageCostOfKibblePerMonth?: Scalars['Int']
    /** Percentage of empty values for averageCostOfKibblePerMonth */
    percentageEmptyAverageCostOfKibblePerMonth?: Scalars['Float']
    /** Percentage of non-empty values for averageCostOfKibblePerMonth */
    percentageNotEmptyAverageCostOfKibblePerMonth?: Scalars['Float']
    /** Minimum amount contained in the field averageCostOfKibblePerMonth */
    minAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Maximal amount contained in the field averageCostOfKibblePerMonth */
    maxAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Sum of amounts contained in the field averageCostOfKibblePerMonth */
    sumAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Average amount contained in the field averageCostOfKibblePerMonth */
    avgAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Number of unique values for soundSwag */
    countUniqueValuesSoundSwag?: Scalars['Int']
    /** Number of empty values for soundSwag */
    countEmptySoundSwag?: Scalars['Int']
    /** Number of non-empty values for soundSwag */
    countNotEmptySoundSwag?: Scalars['Int']
    /** Percentage of empty values for soundSwag */
    percentageEmptySoundSwag?: Scalars['Float']
    /** Percentage of non-empty values for soundSwag */
    percentageNotEmptySoundSwag?: Scalars['Float']
    /** Number of unique values for bio */
    countUniqueValuesBio?: Scalars['Int']
    /** Number of empty values for bio */
    countEmptyBio?: Scalars['Int']
    /** Number of non-empty values for bio */
    countNotEmptyBio?: Scalars['Int']
    /** Percentage of empty values for bio */
    percentageEmptyBio?: Scalars['Float']
    /** Percentage of non-empty values for bio */
    percentageNotEmptyBio?: Scalars['Float']
    /** Number of unique values for interestingFacts */
    countUniqueValuesInterestingFacts?: Scalars['Int']
    /** Number of empty values for interestingFacts */
    countEmptyInterestingFacts?: Scalars['Int']
    /** Number of non-empty values for interestingFacts */
    countNotEmptyInterestingFacts?: Scalars['Int']
    /** Percentage of empty values for interestingFacts */
    percentageEmptyInterestingFacts?: Scalars['Float']
    /** Percentage of non-empty values for interestingFacts */
    percentageNotEmptyInterestingFacts?: Scalars['Float']
    /** Number of unique values for extraData */
    countUniqueValuesExtraData?: Scalars['Int']
    /** Number of empty values for extraData */
    countEmptyExtraData?: Scalars['Int']
    /** Number of non-empty values for extraData */
    countNotEmptyExtraData?: Scalars['Int']
    /** Percentage of empty values for extraData */
    percentageEmptyExtraData?: Scalars['Float']
    /** Percentage of non-empty values for extraData */
    percentageNotEmptyExtraData?: Scalars['Float']
    /** Number of unique values for ownerSurveyResult */
    countUniqueValuesOwnerSurveyResult?: Scalars['Int']
    /** Number of empty values for ownerSurveyResult */
    countEmptyOwnerSurveyResult?: Scalars['Int']
    /** Number of non-empty values for ownerSurveyResult */
    countNotEmptyOwnerSurveyResult?: Scalars['Int']
    /** Percentage of empty values for ownerSurveyResult */
    percentageEmptyOwnerSurveyResult?: Scalars['Float']
    /** Percentage of non-empty values for ownerSurveyResult */
    percentageNotEmptyOwnerSurveyResult?: Scalars['Float']
    /** Number of unique values for ownerRocket */
    countUniqueValuesOwnerRocket?: Scalars['Int']
    /** Number of empty values for ownerRocket */
    countEmptyOwnerRocket?: Scalars['Int']
    /** Number of non-empty values for ownerRocket */
    countNotEmptyOwnerRocket?: Scalars['Int']
    /** Percentage of empty values for ownerRocket */
    percentageEmptyOwnerRocket?: Scalars['Float']
    /** Percentage of non-empty values for ownerRocket */
    percentageNotEmptyOwnerRocket?: Scalars['Float']
    /** Number of unique values for helperSurveyResults */
    countUniqueValuesHelperSurveyResults?: Scalars['Int']
    /** Number of empty values for helperSurveyResults */
    countEmptyHelperSurveyResults?: Scalars['Int']
    /** Number of non-empty values for helperSurveyResults */
    countNotEmptyHelperSurveyResults?: Scalars['Int']
    /** Percentage of empty values for helperSurveyResults */
    percentageEmptyHelperSurveyResults?: Scalars['Float']
    /** Percentage of non-empty values for helperSurveyResults */
    percentageNotEmptyHelperSurveyResults?: Scalars['Float']
    /** Number of unique values for helperRockets */
    countUniqueValuesHelperRockets?: Scalars['Int']
    /** Number of empty values for helperRockets */
    countEmptyHelperRockets?: Scalars['Int']
    /** Number of non-empty values for helperRockets */
    countNotEmptyHelperRockets?: Scalars['Int']
    /** Percentage of empty values for helperRockets */
    percentageEmptyHelperRockets?: Scalars['Float']
    /** Percentage of non-empty values for helperRockets */
    percentageNotEmptyHelperRockets?: Scalars['Float']
    edges?: PetEdge[]
    pageInfo?: PageInfo
    __typename: 'PetConnection'
}

export interface PetGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for makesOwnerThinkOf */
    countUniqueValuesMakesOwnerThinkOf?: Scalars['Int']
    /** Number of empty values for makesOwnerThinkOf */
    countEmptyMakesOwnerThinkOf?: Scalars['Int']
    /** Number of non-empty values for makesOwnerThinkOf */
    countNotEmptyMakesOwnerThinkOf?: Scalars['Int']
    /** Percentage of empty values for makesOwnerThinkOf */
    percentageEmptyMakesOwnerThinkOf?: Scalars['Float']
    /** Percentage of non-empty values for makesOwnerThinkOf */
    percentageNotEmptyMakesOwnerThinkOf?: Scalars['Float']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for species */
    countUniqueValuesSpecies?: Scalars['Int']
    /** Number of empty values for species */
    countEmptySpecies?: Scalars['Int']
    /** Number of non-empty values for species */
    countNotEmptySpecies?: Scalars['Int']
    /** Percentage of empty values for species */
    percentageEmptySpecies?: Scalars['Float']
    /** Percentage of non-empty values for species */
    percentageNotEmptySpecies?: Scalars['Float']
    /** Number of unique values for traits */
    countUniqueValuesTraits?: Scalars['Int']
    /** Number of empty values for traits */
    countEmptyTraits?: Scalars['Int']
    /** Number of non-empty values for traits */
    countNotEmptyTraits?: Scalars['Int']
    /** Percentage of empty values for traits */
    percentageEmptyTraits?: Scalars['Float']
    /** Percentage of non-empty values for traits */
    percentageNotEmptyTraits?: Scalars['Float']
    /** Number of unique values for comments */
    countUniqueValuesComments?: Scalars['Int']
    /** Number of empty values for comments */
    countEmptyComments?: Scalars['Int']
    /** Number of non-empty values for comments */
    countNotEmptyComments?: Scalars['Int']
    /** Percentage of empty values for comments */
    percentageEmptyComments?: Scalars['Float']
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: Scalars['Float']
    /** Number of unique values for age */
    countUniqueValuesAge?: Scalars['Int']
    /** Number of empty values for age */
    countEmptyAge?: Scalars['Int']
    /** Number of non-empty values for age */
    countNotEmptyAge?: Scalars['Int']
    /** Percentage of empty values for age */
    percentageEmptyAge?: Scalars['Float']
    /** Percentage of non-empty values for age */
    percentageNotEmptyAge?: Scalars['Float']
    /** Minimum amount contained in the field age */
    minAge?: Scalars['Float']
    /** Maximum amount contained in the field age */
    maxAge?: Scalars['Float']
    /** Average amount contained in the field age */
    avgAge?: Scalars['Float']
    /** Sum of amounts contained in the field age */
    sumAge?: Scalars['Float']
    /** Number of unique values for location */
    countUniqueValuesLocation?: Scalars['Int']
    /** Number of empty values for location */
    countEmptyLocation?: Scalars['Int']
    /** Number of non-empty values for location */
    countNotEmptyLocation?: Scalars['Int']
    /** Percentage of empty values for location */
    percentageEmptyLocation?: Scalars['Float']
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: Scalars['Float']
    /** Number of unique values for vetPhone */
    countUniqueValuesVetPhone?: Scalars['Int']
    /** Number of empty values for vetPhone */
    countEmptyVetPhone?: Scalars['Int']
    /** Number of non-empty values for vetPhone */
    countNotEmptyVetPhone?: Scalars['Int']
    /** Percentage of empty values for vetPhone */
    percentageEmptyVetPhone?: Scalars['Float']
    /** Percentage of non-empty values for vetPhone */
    percentageNotEmptyVetPhone?: Scalars['Float']
    /** Number of unique values for vetEmail */
    countUniqueValuesVetEmail?: Scalars['Int']
    /** Number of empty values for vetEmail */
    countEmptyVetEmail?: Scalars['Int']
    /** Number of non-empty values for vetEmail */
    countNotEmptyVetEmail?: Scalars['Int']
    /** Percentage of empty values for vetEmail */
    percentageEmptyVetEmail?: Scalars['Float']
    /** Percentage of non-empty values for vetEmail */
    percentageNotEmptyVetEmail?: Scalars['Float']
    /** Number of unique values for birthday */
    countUniqueValuesBirthday?: Scalars['Int']
    /** Number of empty values for birthday */
    countEmptyBirthday?: Scalars['Int']
    /** Number of non-empty values for birthday */
    countNotEmptyBirthday?: Scalars['Int']
    /** Percentage of empty values for birthday */
    percentageEmptyBirthday?: Scalars['Float']
    /** Percentage of non-empty values for birthday */
    percentageNotEmptyBirthday?: Scalars['Float']
    /** Earliest date contained in the field birthday */
    minBirthday?: Scalars['DateTime']
    /** Latest date contained in the field birthday */
    maxBirthday?: Scalars['DateTime']
    /** Number of unique values for isGoodWithKids */
    countUniqueValuesIsGoodWithKids?: Scalars['Int']
    /** Number of empty values for isGoodWithKids */
    countEmptyIsGoodWithKids?: Scalars['Int']
    /** Number of non-empty values for isGoodWithKids */
    countNotEmptyIsGoodWithKids?: Scalars['Int']
    /** Percentage of empty values for isGoodWithKids */
    percentageEmptyIsGoodWithKids?: Scalars['Float']
    /** Percentage of non-empty values for isGoodWithKids */
    percentageNotEmptyIsGoodWithKids?: Scalars['Float']
    /** Count of true values in the field isGoodWithKids */
    countTrueIsGoodWithKids?: Scalars['Int']
    /** Count of false values in the field isGoodWithKids */
    countFalseIsGoodWithKids?: Scalars['Int']
    /** Number of unique values for pictures */
    countUniqueValuesPictures?: Scalars['Int']
    /** Number of empty values for pictures */
    countEmptyPictures?: Scalars['Int']
    /** Number of non-empty values for pictures */
    countNotEmptyPictures?: Scalars['Int']
    /** Percentage of empty values for pictures */
    percentageEmptyPictures?: Scalars['Float']
    /** Percentage of non-empty values for pictures */
    percentageNotEmptyPictures?: Scalars['Float']
    /** Number of unique values for averageCostOfKibblePerMonth */
    countUniqueValuesAverageCostOfKibblePerMonth?: Scalars['Int']
    /** Number of empty values for averageCostOfKibblePerMonth */
    countEmptyAverageCostOfKibblePerMonth?: Scalars['Int']
    /** Number of non-empty values for averageCostOfKibblePerMonth */
    countNotEmptyAverageCostOfKibblePerMonth?: Scalars['Int']
    /** Percentage of empty values for averageCostOfKibblePerMonth */
    percentageEmptyAverageCostOfKibblePerMonth?: Scalars['Float']
    /** Percentage of non-empty values for averageCostOfKibblePerMonth */
    percentageNotEmptyAverageCostOfKibblePerMonth?: Scalars['Float']
    /** Minimum amount contained in the field averageCostOfKibblePerMonth */
    minAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Maximal amount contained in the field averageCostOfKibblePerMonth */
    maxAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Sum of amounts contained in the field averageCostOfKibblePerMonth */
    sumAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Average amount contained in the field averageCostOfKibblePerMonth */
    avgAverageCostOfKibblePerMonthAmountMicros?: Scalars['Float']
    /** Number of unique values for soundSwag */
    countUniqueValuesSoundSwag?: Scalars['Int']
    /** Number of empty values for soundSwag */
    countEmptySoundSwag?: Scalars['Int']
    /** Number of non-empty values for soundSwag */
    countNotEmptySoundSwag?: Scalars['Int']
    /** Percentage of empty values for soundSwag */
    percentageEmptySoundSwag?: Scalars['Float']
    /** Percentage of non-empty values for soundSwag */
    percentageNotEmptySoundSwag?: Scalars['Float']
    /** Number of unique values for bio */
    countUniqueValuesBio?: Scalars['Int']
    /** Number of empty values for bio */
    countEmptyBio?: Scalars['Int']
    /** Number of non-empty values for bio */
    countNotEmptyBio?: Scalars['Int']
    /** Percentage of empty values for bio */
    percentageEmptyBio?: Scalars['Float']
    /** Percentage of non-empty values for bio */
    percentageNotEmptyBio?: Scalars['Float']
    /** Number of unique values for interestingFacts */
    countUniqueValuesInterestingFacts?: Scalars['Int']
    /** Number of empty values for interestingFacts */
    countEmptyInterestingFacts?: Scalars['Int']
    /** Number of non-empty values for interestingFacts */
    countNotEmptyInterestingFacts?: Scalars['Int']
    /** Percentage of empty values for interestingFacts */
    percentageEmptyInterestingFacts?: Scalars['Float']
    /** Percentage of non-empty values for interestingFacts */
    percentageNotEmptyInterestingFacts?: Scalars['Float']
    /** Number of unique values for extraData */
    countUniqueValuesExtraData?: Scalars['Int']
    /** Number of empty values for extraData */
    countEmptyExtraData?: Scalars['Int']
    /** Number of non-empty values for extraData */
    countNotEmptyExtraData?: Scalars['Int']
    /** Percentage of empty values for extraData */
    percentageEmptyExtraData?: Scalars['Float']
    /** Percentage of non-empty values for extraData */
    percentageNotEmptyExtraData?: Scalars['Float']
    /** Number of unique values for ownerSurveyResult */
    countUniqueValuesOwnerSurveyResult?: Scalars['Int']
    /** Number of empty values for ownerSurveyResult */
    countEmptyOwnerSurveyResult?: Scalars['Int']
    /** Number of non-empty values for ownerSurveyResult */
    countNotEmptyOwnerSurveyResult?: Scalars['Int']
    /** Percentage of empty values for ownerSurveyResult */
    percentageEmptyOwnerSurveyResult?: Scalars['Float']
    /** Percentage of non-empty values for ownerSurveyResult */
    percentageNotEmptyOwnerSurveyResult?: Scalars['Float']
    /** Number of unique values for ownerRocket */
    countUniqueValuesOwnerRocket?: Scalars['Int']
    /** Number of empty values for ownerRocket */
    countEmptyOwnerRocket?: Scalars['Int']
    /** Number of non-empty values for ownerRocket */
    countNotEmptyOwnerRocket?: Scalars['Int']
    /** Percentage of empty values for ownerRocket */
    percentageEmptyOwnerRocket?: Scalars['Float']
    /** Percentage of non-empty values for ownerRocket */
    percentageNotEmptyOwnerRocket?: Scalars['Float']
    /** Number of unique values for helperSurveyResults */
    countUniqueValuesHelperSurveyResults?: Scalars['Int']
    /** Number of empty values for helperSurveyResults */
    countEmptyHelperSurveyResults?: Scalars['Int']
    /** Number of non-empty values for helperSurveyResults */
    countNotEmptyHelperSurveyResults?: Scalars['Int']
    /** Percentage of empty values for helperSurveyResults */
    percentageEmptyHelperSurveyResults?: Scalars['Float']
    /** Percentage of non-empty values for helperSurveyResults */
    percentageNotEmptyHelperSurveyResults?: Scalars['Float']
    /** Number of unique values for helperRockets */
    countUniqueValuesHelperRockets?: Scalars['Int']
    /** Number of empty values for helperRockets */
    countEmptyHelperRockets?: Scalars['Int']
    /** Number of non-empty values for helperRockets */
    countNotEmptyHelperRockets?: Scalars['Int']
    /** Percentage of empty values for helperRockets */
    percentageEmptyHelperRockets?: Scalars['Float']
    /** Percentage of non-empty values for helperRockets */
    percentageNotEmptyHelperRockets?: Scalars['Float']
    edges?: PetEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'PetGroupByConnection'
}


/** A rocket */
export interface Rocket {
    /** Id */
    id?: Scalars['UUID']
    /** Name */
    name?: Scalars['String']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Deletion date */
    deletedAt?: Scalars['DateTime']
    /** The creator of the record */
    createdBy?: Actor
    /** Position */
    position?: Scalars['Position']
    /** Search vector */
    searchVector?: Scalars['TSVector']
    helpedById?: Scalars['ID']
    /** TimelineActivities tied to the Rocket */
    timelineActivities?: TimelineActivityConnection
    /** Favorites tied to the Rocket */
    favorites?: FavoriteConnection
    /** Attachments tied to the Rocket */
    attachments?: AttachmentConnection
    /** NoteTargets tied to the Rocket */
    noteTargets?: NoteTargetConnection
    /** TaskTargets tied to the Rocket */
    taskTargets?: TaskTargetConnection
    ownedBy?: PetConnection
    helpedBy?: Pet
    __typename: 'Rocket'
}


/** A rocket */
export interface RocketEdge {
    node?: Rocket
    cursor?: Scalars['Cursor']
    __typename: 'RocketEdge'
}


/** A rocket */
export interface RocketConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    edges?: RocketEdge[]
    pageInfo?: PageInfo
    __typename: 'RocketConnection'
}


/** A rocket */
export interface RocketGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    edges?: RocketEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'RocketGroupByConnection'
}

export interface SurveyResult {
    /** Id */
    id?: Scalars['UUID']
    /** Name */
    name?: Scalars['String']
    /** Creation date */
    createdAt?: Scalars['DateTime']
    /** Last time the record was changed */
    updatedAt?: Scalars['DateTime']
    /** Deletion date */
    deletedAt?: Scalars['DateTime']
    /** The creator of the record */
    createdBy?: Actor
    /** Position */
    position?: Scalars['Position']
    /** Search vector */
    searchVector?: Scalars['TSVector']
    score?: Scalars['Float']
    percentageOfCompletion?: Scalars['Float']
    participants?: Scalars['Int']
    averageEstimatedNumberOfAtomsInTheUniverse?: Scalars['BigInt']
    comments?: Scalars['String']
    shortNotes?: Scalars['String']
    helpedById?: Scalars['ID']
    /** TimelineActivities tied to the Survey result */
    timelineActivities?: TimelineActivityConnection
    /** Favorites tied to the Survey result */
    favorites?: FavoriteConnection
    /** Attachments tied to the Survey result */
    attachments?: AttachmentConnection
    /** NoteTargets tied to the Survey result */
    noteTargets?: NoteTargetConnection
    /** TaskTargets tied to the Survey result */
    taskTargets?: TaskTargetConnection
    ownedBy?: PetConnection
    helpedBy?: Pet
    __typename: 'SurveyResult'
}

export interface SurveyResultEdge {
    node?: SurveyResult
    cursor?: Scalars['Cursor']
    __typename: 'SurveyResultEdge'
}

export interface SurveyResultConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for score */
    countUniqueValuesScore?: Scalars['Int']
    /** Number of empty values for score */
    countEmptyScore?: Scalars['Int']
    /** Number of non-empty values for score */
    countNotEmptyScore?: Scalars['Int']
    /** Percentage of empty values for score */
    percentageEmptyScore?: Scalars['Float']
    /** Percentage of non-empty values for score */
    percentageNotEmptyScore?: Scalars['Float']
    /** Minimum amount contained in the field score */
    minScore?: Scalars['Float']
    /** Maximum amount contained in the field score */
    maxScore?: Scalars['Float']
    /** Average amount contained in the field score */
    avgScore?: Scalars['Float']
    /** Sum of amounts contained in the field score */
    sumScore?: Scalars['Float']
    /** Number of unique values for percentageOfCompletion */
    countUniqueValuesPercentageOfCompletion?: Scalars['Int']
    /** Number of empty values for percentageOfCompletion */
    countEmptyPercentageOfCompletion?: Scalars['Int']
    /** Number of non-empty values for percentageOfCompletion */
    countNotEmptyPercentageOfCompletion?: Scalars['Int']
    /** Percentage of empty values for percentageOfCompletion */
    percentageEmptyPercentageOfCompletion?: Scalars['Float']
    /** Percentage of non-empty values for percentageOfCompletion */
    percentageNotEmptyPercentageOfCompletion?: Scalars['Float']
    /** Minimum amount contained in the field percentageOfCompletion */
    minPercentageOfCompletion?: Scalars['Float']
    /** Maximum amount contained in the field percentageOfCompletion */
    maxPercentageOfCompletion?: Scalars['Float']
    /** Average amount contained in the field percentageOfCompletion */
    avgPercentageOfCompletion?: Scalars['Float']
    /** Sum of amounts contained in the field percentageOfCompletion */
    sumPercentageOfCompletion?: Scalars['Float']
    /** Number of unique values for participants */
    countUniqueValuesParticipants?: Scalars['Int']
    /** Number of empty values for participants */
    countEmptyParticipants?: Scalars['Int']
    /** Number of non-empty values for participants */
    countNotEmptyParticipants?: Scalars['Int']
    /** Percentage of empty values for participants */
    percentageEmptyParticipants?: Scalars['Float']
    /** Percentage of non-empty values for participants */
    percentageNotEmptyParticipants?: Scalars['Float']
    /** Minimum amount contained in the field participants */
    minParticipants?: Scalars['Float']
    /** Maximum amount contained in the field participants */
    maxParticipants?: Scalars['Float']
    /** Average amount contained in the field participants */
    avgParticipants?: Scalars['Float']
    /** Sum of amounts contained in the field participants */
    sumParticipants?: Scalars['Float']
    /** Number of unique values for averageEstimatedNumberOfAtomsInTheUniverse */
    countUniqueValuesAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Int']
    /** Number of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Int']
    /** Number of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Int']
    /** Percentage of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Percentage of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Minimum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    minAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Maximum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    maxAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Average amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    avgAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Sum of amounts contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    sumAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Number of unique values for comments */
    countUniqueValuesComments?: Scalars['Int']
    /** Number of empty values for comments */
    countEmptyComments?: Scalars['Int']
    /** Number of non-empty values for comments */
    countNotEmptyComments?: Scalars['Int']
    /** Percentage of empty values for comments */
    percentageEmptyComments?: Scalars['Float']
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: Scalars['Float']
    /** Number of unique values for shortNotes */
    countUniqueValuesShortNotes?: Scalars['Int']
    /** Number of empty values for shortNotes */
    countEmptyShortNotes?: Scalars['Int']
    /** Number of non-empty values for shortNotes */
    countNotEmptyShortNotes?: Scalars['Int']
    /** Percentage of empty values for shortNotes */
    percentageEmptyShortNotes?: Scalars['Float']
    /** Percentage of non-empty values for shortNotes */
    percentageNotEmptyShortNotes?: Scalars['Float']
    edges?: SurveyResultEdge[]
    pageInfo?: PageInfo
    __typename: 'SurveyResultConnection'
}

export interface SurveyResultGroupByConnection {
    /** Total number of records in the connection */
    totalCount?: Scalars['Int']
    /** Number of unique values for id */
    countUniqueValuesId?: Scalars['Int']
    /** Number of empty values for id */
    countEmptyId?: Scalars['Int']
    /** Number of non-empty values for id */
    countNotEmptyId?: Scalars['Int']
    /** Percentage of empty values for id */
    percentageEmptyId?: Scalars['Float']
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: Scalars['Float']
    /** Number of unique values for name */
    countUniqueValuesName?: Scalars['Int']
    /** Number of empty values for name */
    countEmptyName?: Scalars['Int']
    /** Number of non-empty values for name */
    countNotEmptyName?: Scalars['Int']
    /** Percentage of empty values for name */
    percentageEmptyName?: Scalars['Float']
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: Scalars['Float']
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: Scalars['Int']
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: Scalars['Int']
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: Scalars['Int']
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: Scalars['Float']
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: Scalars['Float']
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: Scalars['DateTime']
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: Scalars['DateTime']
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: Scalars['Int']
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: Scalars['Int']
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: Scalars['Int']
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: Scalars['Float']
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: Scalars['Float']
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: Scalars['DateTime']
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: Scalars['DateTime']
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: Scalars['Int']
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: Scalars['Int']
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: Scalars['Int']
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: Scalars['Float']
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: Scalars['Float']
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: Scalars['DateTime']
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: Scalars['DateTime']
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: Scalars['Int']
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: Scalars['Int']
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: Scalars['Int']
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: Scalars['Float']
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: Scalars['Float']
    /** Number of unique values for position */
    countUniqueValuesPosition?: Scalars['Int']
    /** Number of empty values for position */
    countEmptyPosition?: Scalars['Int']
    /** Number of non-empty values for position */
    countNotEmptyPosition?: Scalars['Int']
    /** Percentage of empty values for position */
    percentageEmptyPosition?: Scalars['Float']
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: Scalars['Float']
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: Scalars['Int']
    /** Number of empty values for searchVector */
    countEmptySearchVector?: Scalars['Int']
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: Scalars['Int']
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: Scalars['Float']
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: Scalars['Float']
    /** Number of unique values for score */
    countUniqueValuesScore?: Scalars['Int']
    /** Number of empty values for score */
    countEmptyScore?: Scalars['Int']
    /** Number of non-empty values for score */
    countNotEmptyScore?: Scalars['Int']
    /** Percentage of empty values for score */
    percentageEmptyScore?: Scalars['Float']
    /** Percentage of non-empty values for score */
    percentageNotEmptyScore?: Scalars['Float']
    /** Minimum amount contained in the field score */
    minScore?: Scalars['Float']
    /** Maximum amount contained in the field score */
    maxScore?: Scalars['Float']
    /** Average amount contained in the field score */
    avgScore?: Scalars['Float']
    /** Sum of amounts contained in the field score */
    sumScore?: Scalars['Float']
    /** Number of unique values for percentageOfCompletion */
    countUniqueValuesPercentageOfCompletion?: Scalars['Int']
    /** Number of empty values for percentageOfCompletion */
    countEmptyPercentageOfCompletion?: Scalars['Int']
    /** Number of non-empty values for percentageOfCompletion */
    countNotEmptyPercentageOfCompletion?: Scalars['Int']
    /** Percentage of empty values for percentageOfCompletion */
    percentageEmptyPercentageOfCompletion?: Scalars['Float']
    /** Percentage of non-empty values for percentageOfCompletion */
    percentageNotEmptyPercentageOfCompletion?: Scalars['Float']
    /** Minimum amount contained in the field percentageOfCompletion */
    minPercentageOfCompletion?: Scalars['Float']
    /** Maximum amount contained in the field percentageOfCompletion */
    maxPercentageOfCompletion?: Scalars['Float']
    /** Average amount contained in the field percentageOfCompletion */
    avgPercentageOfCompletion?: Scalars['Float']
    /** Sum of amounts contained in the field percentageOfCompletion */
    sumPercentageOfCompletion?: Scalars['Float']
    /** Number of unique values for participants */
    countUniqueValuesParticipants?: Scalars['Int']
    /** Number of empty values for participants */
    countEmptyParticipants?: Scalars['Int']
    /** Number of non-empty values for participants */
    countNotEmptyParticipants?: Scalars['Int']
    /** Percentage of empty values for participants */
    percentageEmptyParticipants?: Scalars['Float']
    /** Percentage of non-empty values for participants */
    percentageNotEmptyParticipants?: Scalars['Float']
    /** Minimum amount contained in the field participants */
    minParticipants?: Scalars['Float']
    /** Maximum amount contained in the field participants */
    maxParticipants?: Scalars['Float']
    /** Average amount contained in the field participants */
    avgParticipants?: Scalars['Float']
    /** Sum of amounts contained in the field participants */
    sumParticipants?: Scalars['Float']
    /** Number of unique values for averageEstimatedNumberOfAtomsInTheUniverse */
    countUniqueValuesAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Int']
    /** Number of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Int']
    /** Number of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Int']
    /** Percentage of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Percentage of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Minimum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    minAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Maximum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    maxAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Average amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    avgAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Sum of amounts contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    sumAverageEstimatedNumberOfAtomsInTheUniverse?: Scalars['Float']
    /** Number of unique values for comments */
    countUniqueValuesComments?: Scalars['Int']
    /** Number of empty values for comments */
    countEmptyComments?: Scalars['Int']
    /** Number of non-empty values for comments */
    countNotEmptyComments?: Scalars['Int']
    /** Percentage of empty values for comments */
    percentageEmptyComments?: Scalars['Float']
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: Scalars['Float']
    /** Number of unique values for shortNotes */
    countUniqueValuesShortNotes?: Scalars['Int']
    /** Number of empty values for shortNotes */
    countEmptyShortNotes?: Scalars['Int']
    /** Number of non-empty values for shortNotes */
    countNotEmptyShortNotes?: Scalars['Int']
    /** Percentage of empty values for shortNotes */
    percentageEmptyShortNotes?: Scalars['Float']
    /** Percentage of non-empty values for shortNotes */
    percentageNotEmptyShortNotes?: Scalars['Float']
    edges?: SurveyResultEdge[]
    pageInfo?: PageInfo
    groupByDimensionValues?: Scalars['JSON']
    __typename: 'SurveyResultGroupByConnection'
}

export interface BillingProductDTOGenqlSelection{
    name?: boolean | number
    description?: boolean | number
    images?: boolean | number
    metadata?: BillingProductMetadataGenqlSelection
    on_BillingLicensedProduct?: BillingLicensedProductGenqlSelection
    on_BillingMeteredProduct?: BillingMeteredProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApiKeyGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    expiresAt?: boolean | number
    revokedAt?: boolean | number
    workspaceId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    workspace?: WorkspaceGenqlSelection
    role?: RoleGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FeatureFlagGenqlSelection{
    id?: boolean | number
    key?: boolean | number
    workspaceId?: boolean | number
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TwoFactorAuthenticationMethodDTOGenqlSelection{
    twoFactorAuthenticationMethodId?: boolean | number
    status?: boolean | number
    strategy?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectPermissionGenqlSelection{
    objectMetadataId?: boolean | number
    canReadObjectRecords?: boolean | number
    canUpdateObjectRecords?: boolean | number
    canSoftDeleteObjectRecords?: boolean | number
    canDestroyObjectRecords?: boolean | number
    restrictedFields?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserWorkspaceGenqlSelection{
    id?: boolean | number
    user?: UserGenqlSelection
    userId?: boolean | number
    workspace?: WorkspaceGenqlSelection
    workspaceId?: boolean | number
    locale?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    permissionFlags?: boolean | number
    objectPermissions?: ObjectPermissionGenqlSelection
    objectsPermissions?: ObjectPermissionGenqlSelection
    twoFactorAuthenticationMethodSummary?: TwoFactorAuthenticationMethodDTOGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WebhookGenqlSelection{
    id?: boolean | number
    targetUrl?: boolean | number
    operations?: boolean | number
    description?: boolean | number
    secret?: boolean | number
    workspaceId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    workspace?: WorkspaceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AgentGenqlSelection{
    id?: boolean | number
    standardId?: boolean | number
    name?: boolean | number
    label?: boolean | number
    icon?: boolean | number
    description?: boolean | number
    prompt?: boolean | number
    modelId?: boolean | number
    responseFormat?: boolean | number
    roleId?: boolean | number
    isCustom?: boolean | number
    applicationId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    modelConfiguration?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FullNameGenqlSelection{
    firstName?: boolean | number
    lastName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workspace member */
export interface WorkspaceMemberGenqlSelection{
    /** Id */
    id?: boolean | number
    /** Workspace member name */
    name?: FullNameGenqlSelection
    /** Related user email address */
    userEmail?: boolean | number
    /** Preferred color scheme */
    colorScheme?: boolean | number
    /** Workspace member avatar */
    avatarUrl?: boolean | number
    /** Preferred language */
    locale?: boolean | number
    /** User's preferred start day of the week */
    calendarStartDay?: boolean | number
    /** User time zone */
    timeZone?: boolean | number
    /** User's preferred date format */
    dateFormat?: boolean | number
    /** User's preferred time format */
    timeFormat?: boolean | number
    roles?: RoleGenqlSelection
    userWorkspaceId?: boolean | number
    /** User's preferred number format */
    numberFormat?: boolean | number
    /** Workspace member position */
    position?: boolean | number
    /** Associated User Id */
    userId?: boolean | number
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Tasks assigned to the workspace member */
    assignedTasks?: (TaskConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskFilterInput | null), orderBy?: ((TaskOrderByInput | null)[] | null)} })
    /** Favorites linked to the workspace member */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Account owner for companies */
    accountOwnerForCompanies?: (CompanyConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CompanyFilterInput | null), orderBy?: ((CompanyOrderByInput | null)[] | null)} })
    /** Attachments created by the workspace member */
    authoredAttachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** Connected accounts */
    connectedAccounts?: (ConnectedAccountConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ConnectedAccountFilterInput | null), orderBy?: ((ConnectedAccountOrderByInput | null)[] | null)} })
    /** Message Participants */
    messageParticipants?: (MessageParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageParticipantFilterInput | null), orderBy?: ((MessageParticipantOrderByInput | null)[] | null)} })
    /** Blocklisted handles */
    blocklist?: (BlocklistConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (BlocklistFilterInput | null), orderBy?: ((BlocklistOrderByInput | null)[] | null)} })
    /** Calendar Event Participants */
    calendarEventParticipants?: (CalendarEventParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarEventParticipantFilterInput | null), orderBy?: ((CalendarEventParticipantOrderByInput | null)[] | null)} })
    /** Events linked to the workspace member */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FieldPermissionGenqlSelection{
    id?: boolean | number
    objectMetadataId?: boolean | number
    fieldMetadataId?: boolean | number
    roleId?: boolean | number
    canReadFieldValue?: boolean | number
    canUpdateFieldValue?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PermissionFlagGenqlSelection{
    id?: boolean | number
    roleId?: boolean | number
    flag?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApiKeyForRoleGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    expiresAt?: boolean | number
    revokedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RoleGenqlSelection{
    id?: boolean | number
    standardId?: boolean | number
    label?: boolean | number
    description?: boolean | number
    icon?: boolean | number
    isEditable?: boolean | number
    canBeAssignedToUsers?: boolean | number
    canBeAssignedToAgents?: boolean | number
    canBeAssignedToApiKeys?: boolean | number
    workspaceMembers?: WorkspaceMemberGenqlSelection
    agents?: AgentGenqlSelection
    apiKeys?: ApiKeyForRoleGenqlSelection
    canUpdateAllSettings?: boolean | number
    canAccessAllTools?: boolean | number
    canReadAllObjectRecords?: boolean | number
    canUpdateAllObjectRecords?: boolean | number
    canSoftDeleteAllObjectRecords?: boolean | number
    canDestroyAllObjectRecords?: boolean | number
    permissionFlags?: PermissionFlagGenqlSelection
    objectPermissions?: ObjectPermissionGenqlSelection
    fieldPermissions?: FieldPermissionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CoreViewFieldGenqlSelection{
    id?: boolean | number
    fieldMetadataId?: boolean | number
    isVisible?: boolean | number
    size?: boolean | number
    position?: boolean | number
    aggregateOperation?: boolean | number
    viewId?: boolean | number
    workspaceId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CoreViewFilterGroupGenqlSelection{
    id?: boolean | number
    parentViewFilterGroupId?: boolean | number
    logicalOperator?: boolean | number
    positionInViewFilterGroup?: boolean | number
    viewId?: boolean | number
    workspaceId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CoreViewFilterGenqlSelection{
    id?: boolean | number
    fieldMetadataId?: boolean | number
    operand?: boolean | number
    value?: boolean | number
    viewFilterGroupId?: boolean | number
    positionInViewFilterGroup?: boolean | number
    subFieldName?: boolean | number
    viewId?: boolean | number
    workspaceId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CoreViewGroupGenqlSelection{
    id?: boolean | number
    fieldMetadataId?: boolean | number
    isVisible?: boolean | number
    fieldValue?: boolean | number
    position?: boolean | number
    viewId?: boolean | number
    workspaceId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CoreViewSortGenqlSelection{
    id?: boolean | number
    fieldMetadataId?: boolean | number
    direction?: boolean | number
    viewId?: boolean | number
    workspaceId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CoreViewGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    objectMetadataId?: boolean | number
    type?: boolean | number
    key?: boolean | number
    icon?: boolean | number
    position?: boolean | number
    isCompact?: boolean | number
    isCustom?: boolean | number
    openRecordIn?: boolean | number
    kanbanAggregateOperation?: boolean | number
    kanbanAggregateOperationFieldMetadataId?: boolean | number
    calendarFieldMetadataId?: boolean | number
    workspaceId?: boolean | number
    anyFieldFilterValue?: boolean | number
    calendarLayout?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    viewFields?: CoreViewFieldGenqlSelection
    viewFilters?: CoreViewFilterGenqlSelection
    viewFilterGroups?: CoreViewFilterGroupGenqlSelection
    viewSorts?: CoreViewSortGenqlSelection
    viewGroups?: CoreViewGroupGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceGenqlSelection{
    id?: boolean | number
    displayName?: boolean | number
    logo?: boolean | number
    inviteHash?: boolean | number
    deletedAt?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    allowImpersonation?: boolean | number
    isPublicInviteLinkEnabled?: boolean | number
    trashRetentionDays?: boolean | number
    workspaceMembersCount?: boolean | number
    activationStatus?: boolean | number
    views?: CoreViewGenqlSelection
    viewFields?: CoreViewFieldGenqlSelection
    viewFilters?: CoreViewFilterGenqlSelection
    viewFilterGroups?: CoreViewFilterGroupGenqlSelection
    viewGroups?: CoreViewGroupGenqlSelection
    viewSorts?: CoreViewSortGenqlSelection
    metadataVersion?: boolean | number
    databaseUrl?: boolean | number
    databaseSchema?: boolean | number
    subdomain?: boolean | number
    customDomain?: boolean | number
    isGoogleAuthEnabled?: boolean | number
    isTwoFactorAuthenticationEnforced?: boolean | number
    isPasswordAuthEnabled?: boolean | number
    isMicrosoftAuthEnabled?: boolean | number
    isCustomDomainEnabled?: boolean | number
    defaultRole?: RoleGenqlSelection
    defaultAgent?: AgentGenqlSelection
    version?: boolean | number
    featureFlags?: FeatureFlagDTOGenqlSelection
    billingSubscriptions?: BillingSubscriptionGenqlSelection
    currentBillingSubscription?: BillingSubscriptionGenqlSelection
    hasValidEnterpriseKey?: boolean | number
    workspaceUrls?: WorkspaceUrlsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppTokenGenqlSelection{
    id?: boolean | number
    type?: boolean | number
    expiresAt?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserGenqlSelection{
    id?: boolean | number
    firstName?: boolean | number
    lastName?: boolean | number
    email?: boolean | number
    defaultAvatarUrl?: boolean | number
    isEmailVerified?: boolean | number
    disabled?: boolean | number
    passwordHash?: boolean | number
    canImpersonate?: boolean | number
    canAccessFullAdminPanel?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    locale?: boolean | number
    workspaceMember?: WorkspaceMemberGenqlSelection
    userWorkspaces?: UserWorkspaceGenqlSelection
    onboardingStatus?: boolean | number
    currentWorkspace?: WorkspaceGenqlSelection
    currentUserWorkspace?: UserWorkspaceGenqlSelection
    userVars?: boolean | number
    workspaceMembers?: WorkspaceMemberGenqlSelection
    deletedWorkspaceMembers?: DeletedWorkspaceMemberGenqlSelection
    supportUserHash?: boolean | number
    workspaces?: UserWorkspaceGenqlSelection
    availableWorkspaces?: AvailableWorkspacesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface GridPositionGenqlSelection{
    row?: boolean | number
    column?: boolean | number
    rowSpan?: boolean | number
    columnSpan?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PageLayoutWidgetGenqlSelection{
    id?: boolean | number
    pageLayoutTabId?: boolean | number
    title?: boolean | number
    type?: boolean | number
    objectMetadataId?: boolean | number
    gridPosition?: GridPositionGenqlSelection
    configuration?: WidgetConfigurationGenqlSelection
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WidgetConfigurationGenqlSelection{
    on_BarChartConfiguration?:BarChartConfigurationGenqlSelection,
    on_LineChartConfiguration?:LineChartConfigurationGenqlSelection,
    on_PieChartConfiguration?:PieChartConfigurationGenqlSelection,
    on_NumberChartConfiguration?:NumberChartConfigurationGenqlSelection,
    on_GaugeChartConfiguration?:GaugeChartConfigurationGenqlSelection,
    on_IframeConfiguration?:IframeConfigurationGenqlSelection,
    __typename?: boolean | number
}

export interface BarChartConfigurationGenqlSelection{
    graphType?: boolean | number
    aggregateFieldMetadataId?: boolean | number
    aggregateOperation?: boolean | number
    primaryAxisGroupByFieldMetadataId?: boolean | number
    primaryAxisGroupBySubFieldName?: boolean | number
    primaryAxisOrderBy?: boolean | number
    secondaryAxisGroupByFieldMetadataId?: boolean | number
    secondaryAxisGroupBySubFieldName?: boolean | number
    secondaryAxisOrderBy?: boolean | number
    omitNullValues?: boolean | number
    axisNameDisplay?: boolean | number
    displayDataLabel?: boolean | number
    rangeMin?: boolean | number
    rangeMax?: boolean | number
    description?: boolean | number
    color?: boolean | number
    filter?: boolean | number
    groupMode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LineChartConfigurationGenqlSelection{
    graphType?: boolean | number
    aggregateFieldMetadataId?: boolean | number
    aggregateOperation?: boolean | number
    primaryAxisGroupByFieldMetadataId?: boolean | number
    primaryAxisGroupBySubFieldName?: boolean | number
    primaryAxisOrderBy?: boolean | number
    secondaryAxisGroupByFieldMetadataId?: boolean | number
    secondaryAxisGroupBySubFieldName?: boolean | number
    secondaryAxisOrderBy?: boolean | number
    omitNullValues?: boolean | number
    axisNameDisplay?: boolean | number
    displayDataLabel?: boolean | number
    rangeMin?: boolean | number
    rangeMax?: boolean | number
    description?: boolean | number
    color?: boolean | number
    filter?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PieChartConfigurationGenqlSelection{
    graphType?: boolean | number
    aggregateFieldMetadataId?: boolean | number
    aggregateOperation?: boolean | number
    groupByFieldMetadataId?: boolean | number
    groupBySubFieldName?: boolean | number
    orderBy?: boolean | number
    displayDataLabel?: boolean | number
    description?: boolean | number
    color?: boolean | number
    filter?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NumberChartConfigurationGenqlSelection{
    graphType?: boolean | number
    aggregateFieldMetadataId?: boolean | number
    aggregateOperation?: boolean | number
    label?: boolean | number
    displayDataLabel?: boolean | number
    format?: boolean | number
    description?: boolean | number
    filter?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface GaugeChartConfigurationGenqlSelection{
    graphType?: boolean | number
    aggregateFieldMetadataId?: boolean | number
    aggregateOperation?: boolean | number
    displayDataLabel?: boolean | number
    color?: boolean | number
    description?: boolean | number
    filter?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IframeConfigurationGenqlSelection{
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PageLayoutTabGenqlSelection{
    id?: boolean | number
    title?: boolean | number
    position?: boolean | number
    pageLayoutId?: boolean | number
    widgets?: PageLayoutWidgetGenqlSelection
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PageLayoutGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    type?: boolean | number
    objectMetadataId?: boolean | number
    tabs?: PageLayoutTabGenqlSelection
    createdAt?: boolean | number
    updatedAt?: boolean | number
    deletedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface StandardOverridesGenqlSelection{
    label?: boolean | number
    description?: boolean | number
    icon?: boolean | number
    translations?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectStandardOverridesGenqlSelection{
    labelSingular?: boolean | number
    labelPlural?: boolean | number
    description?: boolean | number
    icon?: boolean | number
    translations?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectGenqlSelection{
    id?: boolean | number
    nameSingular?: boolean | number
    namePlural?: boolean | number
    labelSingular?: boolean | number
    labelPlural?: boolean | number
    description?: boolean | number
    icon?: boolean | number
    standardOverrides?: ObjectStandardOverridesGenqlSelection
    shortcut?: boolean | number
    isCustom?: boolean | number
    isRemote?: boolean | number
    isActive?: boolean | number
    isSystem?: boolean | number
    isUIReadOnly?: boolean | number
    isSearchable?: boolean | number
    applicationId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    labelIdentifierFieldMetadataId?: boolean | number
    imageIdentifierFieldMetadataId?: boolean | number
    isLabelSyncedWithName?: boolean | number
    duplicateCriteria?: boolean | number
    fieldsList?: FieldGenqlSelection
    indexMetadataList?: IndexGenqlSelection
    fields?: (ObjectFieldsConnectionGenqlSelection & { __args: {
    /** Limit or page results. */
    paging: CursorPaging, 
    /** Specify to filter the records returned. */
    filter: FieldFilter} })
    indexMetadatas?: (ObjectIndexMetadatasConnectionGenqlSelection & { __args: {
    /** Limit or page results. */
    paging: CursorPaging, 
    /** Specify to filter the records returned. */
    filter: IndexFilter} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CursorPaging {
/** Paginate before opaque cursor */
before?: (Scalars['ConnectionCursor'] | null),
/** Paginate after opaque cursor */
after?: (Scalars['ConnectionCursor'] | null),
/** Paginate first */
first?: (Scalars['Int'] | null),
/** Paginate last */
last?: (Scalars['Int'] | null)}

export interface FieldFilter {and?: (FieldFilter[] | null),or?: (FieldFilter[] | null),id?: (UUIDFilterComparison | null),isCustom?: (BooleanFieldComparison | null),isActive?: (BooleanFieldComparison | null),isSystem?: (BooleanFieldComparison | null),isUIReadOnly?: (BooleanFieldComparison | null)}

export interface UUIDFilterComparison {is?: (Scalars['Boolean'] | null),isNot?: (Scalars['Boolean'] | null),eq?: (Scalars['UUID'] | null),neq?: (Scalars['UUID'] | null),gt?: (Scalars['UUID'] | null),gte?: (Scalars['UUID'] | null),lt?: (Scalars['UUID'] | null),lte?: (Scalars['UUID'] | null),like?: (Scalars['UUID'] | null),notLike?: (Scalars['UUID'] | null),iLike?: (Scalars['UUID'] | null),notILike?: (Scalars['UUID'] | null),in?: (Scalars['UUID'][] | null),notIn?: (Scalars['UUID'][] | null)}

export interface BooleanFieldComparison {is?: (Scalars['Boolean'] | null),isNot?: (Scalars['Boolean'] | null)}

export interface IndexFilter {and?: (IndexFilter[] | null),or?: (IndexFilter[] | null),id?: (UUIDFilterComparison | null),isCustom?: (BooleanFieldComparison | null)}

export interface FieldGenqlSelection{
    id?: boolean | number
    type?: boolean | number
    name?: boolean | number
    label?: boolean | number
    description?: boolean | number
    icon?: boolean | number
    standardOverrides?: StandardOverridesGenqlSelection
    isCustom?: boolean | number
    isActive?: boolean | number
    isSystem?: boolean | number
    isUIReadOnly?: boolean | number
    isNullable?: boolean | number
    isUnique?: boolean | number
    defaultValue?: boolean | number
    options?: boolean | number
    settings?: boolean | number
    isLabelSyncedWithName?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    relation?: RelationGenqlSelection
    morphRelations?: RelationGenqlSelection
    object?: ObjectGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IndexFieldGenqlSelection{
    id?: boolean | number
    fieldMetadataId?: boolean | number
    order?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IndexGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    isCustom?: boolean | number
    isUnique?: boolean | number
    indexWhereClause?: boolean | number
    indexType?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    indexFieldMetadataList?: IndexFieldGenqlSelection
    objectMetadata?: (IndexObjectMetadataConnectionGenqlSelection & { __args: {
    /** Limit or page results. */
    paging: CursorPaging, 
    /** Specify to filter the records returned. */
    filter: ObjectFilter} })
    indexFieldMetadatas?: (IndexIndexFieldMetadatasConnectionGenqlSelection & { __args: {
    /** Limit or page results. */
    paging: CursorPaging, 
    /** Specify to filter the records returned. */
    filter: IndexFieldFilter} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectFilter {and?: (ObjectFilter[] | null),or?: (ObjectFilter[] | null),id?: (UUIDFilterComparison | null),isCustom?: (BooleanFieldComparison | null),isRemote?: (BooleanFieldComparison | null),isActive?: (BooleanFieldComparison | null),isSystem?: (BooleanFieldComparison | null),isUIReadOnly?: (BooleanFieldComparison | null),isSearchable?: (BooleanFieldComparison | null)}

export interface IndexFieldFilter {and?: (IndexFieldFilter[] | null),or?: (IndexFieldFilter[] | null),id?: (UUIDFilterComparison | null),fieldMetadataId?: (UUIDFilterComparison | null)}

export interface IndexEdgeGenqlSelection{
    /** The node containing the Index */
    node?: IndexGenqlSelection
    /** Cursor for this node. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PageInfoGenqlSelection{
    /** true if paging forward and there are more records. */
    hasNextPage?: boolean | number
    /** true if paging backwards and there are more records. */
    hasPreviousPage?: boolean | number
    /** The cursor of the first returned record. */
    startCursor?: boolean | number
    /** The cursor of the last returned record. */
    endCursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IndexConnectionGenqlSelection{
    /** Paging information */
    pageInfo?: PageInfoGenqlSelection
    /** Array of edges. */
    edges?: IndexEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IndexFieldEdgeGenqlSelection{
    /** The node containing the IndexField */
    node?: IndexFieldGenqlSelection
    /** Cursor for this node. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IndexIndexFieldMetadatasConnectionGenqlSelection{
    /** Paging information */
    pageInfo?: PageInfoGenqlSelection
    /** Array of edges. */
    edges?: IndexFieldEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectEdgeGenqlSelection{
    /** The node containing the Object */
    node?: ObjectGenqlSelection
    /** Cursor for this node. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface IndexObjectMetadataConnectionGenqlSelection{
    /** Paging information */
    pageInfo?: PageInfoGenqlSelection
    /** Array of edges. */
    edges?: ObjectEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectConnectionGenqlSelection{
    /** Paging information */
    pageInfo?: PageInfoGenqlSelection
    /** Array of edges. */
    edges?: ObjectEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectIndexMetadatasConnectionGenqlSelection{
    /** Paging information */
    pageInfo?: PageInfoGenqlSelection
    /** Array of edges. */
    edges?: IndexEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FieldEdgeGenqlSelection{
    /** The node containing the Field */
    node?: FieldGenqlSelection
    /** Cursor for this node. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ObjectFieldsConnectionGenqlSelection{
    /** Paging information */
    pageInfo?: PageInfoGenqlSelection
    /** Array of edges. */
    edges?: FieldEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AnalyticsGenqlSelection{
    /** Boolean that confirms query was dispatched */
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingProductMetadataGenqlSelection{
    planKey?: boolean | number
    priceUsageBased?: boolean | number
    productKey?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingPriceLicensedDTOGenqlSelection{
    recurringInterval?: boolean | number
    unitAmount?: boolean | number
    stripePriceId?: boolean | number
    priceUsageType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingPriceTierDTOGenqlSelection{
    upTo?: boolean | number
    flatAmount?: boolean | number
    unitAmount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingPriceMeteredDTOGenqlSelection{
    tiers?: BillingPriceTierDTOGenqlSelection
    recurringInterval?: boolean | number
    stripePriceId?: boolean | number
    priceUsageType?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingProductGenqlSelection{
    name?: boolean | number
    description?: boolean | number
    images?: boolean | number
    metadata?: BillingProductMetadataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingLicensedProductGenqlSelection{
    name?: boolean | number
    description?: boolean | number
    images?: boolean | number
    metadata?: BillingProductMetadataGenqlSelection
    prices?: BillingPriceLicensedDTOGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingMeteredProductGenqlSelection{
    name?: boolean | number
    description?: boolean | number
    images?: boolean | number
    metadata?: BillingProductMetadataGenqlSelection
    prices?: BillingPriceMeteredDTOGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingSubscriptionItemDTOGenqlSelection{
    id?: boolean | number
    hasReachedCurrentPeriodCap?: boolean | number
    quantity?: boolean | number
    stripePriceId?: boolean | number
    billingProduct?: BillingProductDTOGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingSubscriptionSchedulePhaseItemGenqlSelection{
    price?: boolean | number
    quantity?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingSubscriptionSchedulePhaseGenqlSelection{
    start_date?: boolean | number
    end_date?: boolean | number
    items?: BillingSubscriptionSchedulePhaseItemGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingSubscriptionGenqlSelection{
    id?: boolean | number
    status?: boolean | number
    interval?: boolean | number
    billingSubscriptionItems?: BillingSubscriptionItemDTOGenqlSelection
    currentPeriodEnd?: boolean | number
    metadata?: boolean | number
    phases?: BillingSubscriptionSchedulePhaseGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ResendEmailVerificationTokenOutputGenqlSelection{
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApprovedAccessDomainGenqlSelection{
    id?: boolean | number
    domain?: boolean | number
    isValidated?: boolean | number
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FileGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    fullPath?: boolean | number
    size?: boolean | number
    type?: boolean | number
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SignedFileDTOGenqlSelection{
    path?: boolean | number
    token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ServerlessFunctionLayerGenqlSelection{
    id?: boolean | number
    applicationId?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ServerlessFunctionExecutionResultGenqlSelection{
    /** Execution result in JSON format */
    data?: boolean | number
    /** Execution Logs */
    logs?: boolean | number
    /** Execution duration in milliseconds */
    duration?: boolean | number
    /** Execution status */
    status?: boolean | number
    /** Execution error in JSON format */
    error?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CronTriggerGenqlSelection{
    id?: boolean | number
    settings?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DatabaseEventTriggerGenqlSelection{
    id?: boolean | number
    settings?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RouteTriggerGenqlSelection{
    id?: boolean | number
    path?: boolean | number
    isAuthRequired?: boolean | number
    httpMethod?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ServerlessFunctionGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    description?: boolean | number
    runtime?: boolean | number
    timeoutSeconds?: boolean | number
    latestVersion?: boolean | number
    publishedVersions?: boolean | number
    cronTriggers?: CronTriggerGenqlSelection
    databaseEventTriggers?: DatabaseEventTriggerGenqlSelection
    routeTriggers?: RouteTriggerGenqlSelection
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingEndTrialPeriodOutputGenqlSelection{
    /** Updated subscription status */
    status?: boolean | number
    /** Boolean that confirms if a payment method was found */
    hasPaymentMethod?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingMeteredProductUsageOutputGenqlSelection{
    productKey?: boolean | number
    periodStart?: boolean | number
    periodEnd?: boolean | number
    usedCredits?: boolean | number
    grantedCredits?: boolean | number
    unitPriceCents?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingPlanOutputGenqlSelection{
    planKey?: boolean | number
    licensedProducts?: BillingLicensedProductGenqlSelection
    meteredProducts?: BillingMeteredProductGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingSessionOutputGenqlSelection{
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingUpdateOutputGenqlSelection{
    /** Current billing subscription */
    currentBillingSubscription?: BillingSubscriptionGenqlSelection
    /** All billing subscriptions */
    billingSubscriptions?: BillingSubscriptionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnboardingStepSuccessGenqlSelection{
    /** Boolean that confirms query was dispatched */
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceInvitationGenqlSelection{
    id?: boolean | number
    email?: boolean | number
    expiresAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SendInvitationsOutputGenqlSelection{
    /** Boolean that confirms query was dispatched */
    success?: boolean | number
    errors?: boolean | number
    result?: WorkspaceInvitationGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceUrlsGenqlSelection{
    customUrl?: boolean | number
    subdomainUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SSOConnectionGenqlSelection{
    type?: boolean | number
    id?: boolean | number
    issuer?: boolean | number
    name?: boolean | number
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AvailableWorkspaceGenqlSelection{
    id?: boolean | number
    displayName?: boolean | number
    loginToken?: boolean | number
    personalInviteToken?: boolean | number
    inviteHash?: boolean | number
    workspaceUrls?: WorkspaceUrlsGenqlSelection
    logo?: boolean | number
    sso?: SSOConnectionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AvailableWorkspacesGenqlSelection{
    availableWorkspacesForSignIn?: AvailableWorkspaceGenqlSelection
    availableWorkspacesForSignUp?: AvailableWorkspaceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DeletedWorkspaceMemberGenqlSelection{
    id?: boolean | number
    name?: FullNameGenqlSelection
    userEmail?: boolean | number
    avatarUrl?: boolean | number
    userWorkspaceId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DomainRecordGenqlSelection{
    validationType?: boolean | number
    type?: boolean | number
    status?: boolean | number
    key?: boolean | number
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DomainValidRecordsGenqlSelection{
    id?: boolean | number
    domain?: boolean | number
    records?: DomainRecordGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FeatureFlagDTOGenqlSelection{
    key?: boolean | number
    value?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SSOIdentityProviderGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    type?: boolean | number
    status?: boolean | number
    issuer?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthProvidersGenqlSelection{
    sso?: SSOIdentityProviderGenqlSelection
    google?: boolean | number
    magicLink?: boolean | number
    password?: boolean | number
    microsoft?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PublicWorkspaceDataOutputGenqlSelection{
    id?: boolean | number
    authProviders?: AuthProvidersGenqlSelection
    logo?: boolean | number
    displayName?: boolean | number
    workspaceUrls?: WorkspaceUrlsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AgentChatMessagePartGenqlSelection{
    id?: boolean | number
    messageId?: boolean | number
    orderIndex?: boolean | number
    type?: boolean | number
    textContent?: boolean | number
    reasoningContent?: boolean | number
    toolName?: boolean | number
    toolCallId?: boolean | number
    toolInput?: boolean | number
    toolOutput?: boolean | number
    state?: boolean | number
    errorMessage?: boolean | number
    errorDetails?: boolean | number
    sourceUrlSourceId?: boolean | number
    sourceUrlUrl?: boolean | number
    sourceUrlTitle?: boolean | number
    sourceDocumentSourceId?: boolean | number
    sourceDocumentMediaType?: boolean | number
    sourceDocumentTitle?: boolean | number
    sourceDocumentFilename?: boolean | number
    fileMediaType?: boolean | number
    fileFilename?: boolean | number
    fileUrl?: boolean | number
    providerMetadata?: boolean | number
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AgentChatMessageGenqlSelection{
    id?: boolean | number
    threadId?: boolean | number
    role?: boolean | number
    parts?: AgentChatMessagePartGenqlSelection
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AgentChatThreadGenqlSelection{
    id?: boolean | number
    agentId?: boolean | number
    title?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AgentHandoffDTOGenqlSelection{
    id?: boolean | number
    description?: boolean | number
    toAgent?: AgentGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RelationGenqlSelection{
    type?: boolean | number
    sourceObjectMetadata?: ObjectGenqlSelection
    targetObjectMetadata?: ObjectGenqlSelection
    sourceFieldMetadata?: FieldGenqlSelection
    targetFieldMetadata?: FieldGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FieldConnectionGenqlSelection{
    /** Paging information */
    pageInfo?: PageInfoGenqlSelection
    /** Array of edges. */
    edges?: FieldEdgeGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceEdgeGenqlSelection{
    /** The node containing the Workspace */
    node?: WorkspaceGenqlSelection
    /** Cursor for this node. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserEdgeGenqlSelection{
    /** The node containing the User */
    node?: UserGenqlSelection
    /** Cursor for this node. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DeleteSsoOutputGenqlSelection{
    identityProviderId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EditSsoOutputGenqlSelection{
    id?: boolean | number
    type?: boolean | number
    issuer?: boolean | number
    name?: boolean | number
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceNameAndIdGenqlSelection{
    displayName?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FindAvailableSSOIDPOutputGenqlSelection{
    type?: boolean | number
    id?: boolean | number
    issuer?: boolean | number
    name?: boolean | number
    status?: boolean | number
    workspace?: WorkspaceNameAndIdGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SetupSsoOutputGenqlSelection{
    id?: boolean | number
    type?: boolean | number
    issuer?: boolean | number
    name?: boolean | number
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DeleteTwoFactorAuthenticationMethodOutputGenqlSelection{
    /** Boolean that confirms query was dispatched */
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InitiateTwoFactorAuthenticationProvisioningOutputGenqlSelection{
    uri?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface VerifyTwoFactorAuthenticationMethodOutputGenqlSelection{
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthorizeAppGenqlSelection{
    redirectUrl?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EmailPasswordResetLinkGenqlSelection{
    /** Boolean that confirms query was dispatched */
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface InvalidatePasswordGenqlSelection{
    /** Boolean that confirms query was dispatched */
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthTokenGenqlSelection{
    token?: boolean | number
    expiresAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApiKeyTokenGenqlSelection{
    token?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthTokenPairGenqlSelection{
    accessOrWorkspaceAgnosticToken?: AuthTokenGenqlSelection
    refreshToken?: AuthTokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AuthTokensGenqlSelection{
    tokens?: AuthTokenPairGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TransientTokenGenqlSelection{
    transientToken?: AuthTokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ValidatePasswordResetTokenGenqlSelection{
    id?: boolean | number
    email?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AvailableWorkspacesAndAccessTokensOutputGenqlSelection{
    tokens?: AuthTokenPairGenqlSelection
    availableWorkspaces?: AvailableWorkspacesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface GetAuthorizationUrlForSSOOutputGenqlSelection{
    authorizationURL?: boolean | number
    type?: boolean | number
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface GetLoginTokenFromEmailVerificationTokenOutputGenqlSelection{
    loginToken?: AuthTokenGenqlSelection
    workspaceUrls?: WorkspaceUrlsGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceUrlsAndIdGenqlSelection{
    workspaceUrls?: WorkspaceUrlsGenqlSelection
    id?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SignUpOutputGenqlSelection{
    loginToken?: AuthTokenGenqlSelection
    workspace?: WorkspaceUrlsAndIdGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LoginTokenGenqlSelection{
    loginToken?: AuthTokenGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CheckUserExistOutputGenqlSelection{
    exists?: boolean | number
    availableWorkspacesCount?: boolean | number
    isEmailVerified?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceInviteHashValidGenqlSelection{
    isValid?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnDbEventDTOGenqlSelection{
    action?: boolean | number
    objectNameSingular?: boolean | number
    eventDate?: boolean | number
    record?: boolean | number
    updatedFields?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserMappingOptionsUserGenqlSelection{
    user?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RemoteServerGenqlSelection{
    id?: boolean | number
    foreignDataWrapperId?: boolean | number
    foreignDataWrapperType?: boolean | number
    label?: boolean | number
    foreignDataWrapperOptions?: boolean | number
    userMappingOptions?: UserMappingOptionsUserGenqlSelection
    schema?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RemoteTableGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    status?: boolean | number
    schema?: boolean | number
    schemaPendingUpdates?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConfigVariableGenqlSelection{
    name?: boolean | number
    description?: boolean | number
    value?: boolean | number
    isSensitive?: boolean | number
    source?: boolean | number
    isEnvOnly?: boolean | number
    type?: boolean | number
    options?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConfigVariablesGroupDataGenqlSelection{
    variables?: ConfigVariableGenqlSelection
    name?: boolean | number
    description?: boolean | number
    isHiddenOnLoad?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConfigVariablesOutputGenqlSelection{
    groups?: ConfigVariablesGroupDataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SystemHealthServiceGenqlSelection{
    id?: boolean | number
    label?: boolean | number
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SystemHealthGenqlSelection{
    services?: SystemHealthServiceGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserInfoGenqlSelection{
    id?: boolean | number
    email?: boolean | number
    firstName?: boolean | number
    lastName?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceInfoGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    allowImpersonation?: boolean | number
    logo?: boolean | number
    totalUsers?: boolean | number
    workspaceUrls?: WorkspaceUrlsGenqlSelection
    users?: UserInfoGenqlSelection
    featureFlags?: FeatureFlagGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface UserLookupGenqlSelection{
    user?: UserInfoGenqlSelection
    workspaces?: WorkspaceInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface VersionInfoGenqlSelection{
    currentVersion?: boolean | number
    latestVersion?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AdminPanelWorkerQueueHealthGenqlSelection{
    id?: boolean | number
    queueName?: boolean | number
    status?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AdminPanelHealthServiceDataGenqlSelection{
    id?: boolean | number
    label?: boolean | number
    description?: boolean | number
    status?: boolean | number
    errorMessage?: boolean | number
    details?: boolean | number
    queues?: AdminPanelWorkerQueueHealthGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface QueueMetricsDataPointGenqlSelection{
    x?: boolean | number
    y?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface QueueMetricsSeriesGenqlSelection{
    id?: boolean | number
    data?: QueueMetricsDataPointGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkerQueueMetricsGenqlSelection{
    failed?: boolean | number
    completed?: boolean | number
    waiting?: boolean | number
    active?: boolean | number
    delayed?: boolean | number
    failureRate?: boolean | number
    failedData?: boolean | number
    completedData?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface QueueMetricsDataGenqlSelection{
    queueName?: boolean | number
    workers?: boolean | number
    timeRange?: boolean | number
    details?: WorkerQueueMetricsGenqlSelection
    data?: QueueMetricsSeriesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ImpersonateOutputGenqlSelection{
    loginToken?: AuthTokenGenqlSelection
    workspace?: WorkspaceUrlsAndIdGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AppTokenEdgeGenqlSelection{
    /** The node containing the AppToken */
    node?: AppTokenGenqlSelection
    /** Cursor for this node. */
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApplicationVariableGenqlSelection{
    id?: boolean | number
    key?: boolean | number
    value?: boolean | number
    description?: boolean | number
    isSecret?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApplicationGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    description?: boolean | number
    version?: boolean | number
    agents?: AgentGenqlSelection
    serverlessFunctions?: ServerlessFunctionGenqlSelection
    objects?: ObjectGenqlSelection
    applicationVariables?: ApplicationVariableGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TimelineCalendarEventParticipantGenqlSelection{
    personId?: boolean | number
    workspaceMemberId?: boolean | number
    firstName?: boolean | number
    lastName?: boolean | number
    displayName?: boolean | number
    avatarUrl?: boolean | number
    handle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LinkMetadataGenqlSelection{
    label?: boolean | number
    url?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LinksMetadataGenqlSelection{
    primaryLinkLabel?: boolean | number
    primaryLinkUrl?: boolean | number
    secondaryLinks?: LinkMetadataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TimelineCalendarEventGenqlSelection{
    id?: boolean | number
    title?: boolean | number
    isCanceled?: boolean | number
    isFullDay?: boolean | number
    startsAt?: boolean | number
    endsAt?: boolean | number
    description?: boolean | number
    location?: boolean | number
    conferenceSolution?: boolean | number
    conferenceLink?: LinksMetadataGenqlSelection
    participants?: TimelineCalendarEventParticipantGenqlSelection
    visibility?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TimelineCalendarEventsWithTotalGenqlSelection{
    totalNumberOfCalendarEvents?: boolean | number
    timelineCalendarEvents?: TimelineCalendarEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PublicDomainGenqlSelection{
    id?: boolean | number
    domain?: boolean | number
    isValidated?: boolean | number
    createdAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface VerificationRecordGenqlSelection{
    type?: boolean | number
    key?: boolean | number
    value?: boolean | number
    priority?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EmailingDomainGenqlSelection{
    id?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    domain?: boolean | number
    driver?: boolean | number
    status?: boolean | number
    verificationRecords?: VerificationRecordGenqlSelection
    verifiedAt?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AutocompleteResultDtoGenqlSelection{
    text?: boolean | number
    placeId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LocationDtoGenqlSelection{
    lat?: boolean | number
    lng?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PlaceDetailsResultDtoGenqlSelection{
    state?: boolean | number
    postcode?: boolean | number
    city?: boolean | number
    country?: boolean | number
    location?: LocationDtoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConnectionParametersOutputGenqlSelection{
    host?: boolean | number
    port?: boolean | number
    username?: boolean | number
    password?: boolean | number
    secure?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ImapSmtpCaldavConnectionParametersGenqlSelection{
    IMAP?: ConnectionParametersOutputGenqlSelection
    SMTP?: ConnectionParametersOutputGenqlSelection
    CALDAV?: ConnectionParametersOutputGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConnectedImapSmtpCaldavAccountGenqlSelection{
    id?: boolean | number
    handle?: boolean | number
    provider?: boolean | number
    accountOwnerId?: boolean | number
    connectionParameters?: ImapSmtpCaldavConnectionParametersGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ImapSmtpCaldavConnectionSuccessGenqlSelection{
    success?: boolean | number
    connectedAccountId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TimelineThreadParticipantGenqlSelection{
    personId?: boolean | number
    workspaceMemberId?: boolean | number
    firstName?: boolean | number
    lastName?: boolean | number
    displayName?: boolean | number
    avatarUrl?: boolean | number
    handle?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TimelineThreadGenqlSelection{
    id?: boolean | number
    read?: boolean | number
    visibility?: boolean | number
    firstParticipant?: TimelineThreadParticipantGenqlSelection
    lastTwoParticipants?: TimelineThreadParticipantGenqlSelection
    lastMessageReceivedAt?: boolean | number
    lastMessageBody?: boolean | number
    subject?: boolean | number
    numberOfMessagesInThread?: boolean | number
    participantCount?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TimelineThreadsWithTotalGenqlSelection{
    totalNumberOfThreads?: boolean | number
    timelineThreads?: TimelineThreadGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PostgresCredentialsGenqlSelection{
    id?: boolean | number
    user?: boolean | number
    password?: boolean | number
    workspaceId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SearchRecordGenqlSelection{
    recordId?: boolean | number
    objectNameSingular?: boolean | number
    label?: boolean | number
    imageUrl?: boolean | number
    tsRankCD?: boolean | number
    tsRank?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SearchResultEdgeGenqlSelection{
    node?: SearchRecordGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SearchResultPageInfoGenqlSelection{
    endCursor?: boolean | number
    hasNextPage?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SearchResultConnectionGenqlSelection{
    edges?: SearchResultEdgeGenqlSelection
    pageInfo?: SearchResultPageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow run */
export interface WorkflowRunGenqlSelection{
    workflowRunId?: boolean | number
    /** Name of the workflow run */
    name?: boolean | number
    /** Workflow run enqueued at */
    enqueuedAt?: boolean | number
    /** Workflow run started at */
    startedAt?: boolean | number
    /** Workflow run ended at */
    endedAt?: boolean | number
    /** Workflow run status */
    status?: boolean | number
    /** The executor of the workflow */
    createdBy?: ActorGenqlSelection
    /** State of the workflow run */
    state?: boolean | number
    /** Workflow run position */
    position?: boolean | number
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Workflow version linked to the run. */
    workflowVersionId?: boolean | number
    /** Workflow linked to the run. */
    workflowId?: boolean | number
    /** Workflow version linked to the run. */
    workflowVersion?: WorkflowVersionGenqlSelection
    /** Workflow linked to the run. */
    workflow?: WorkflowGenqlSelection
    /** Favorites linked to the workflow run */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Timeline activities linked to the run */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowVersionStepChangesGenqlSelection{
    triggerDiff?: boolean | number
    stepsDiff?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowStepPositionGenqlSelection{
    x?: boolean | number
    y?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowActionGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    type?: boolean | number
    settings?: boolean | number
    valid?: boolean | number
    nextStepIds?: boolean | number
    position?: WorkflowStepPositionGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowVersionDTOGenqlSelection{
    id?: boolean | number
    name?: boolean | number
    createdAt?: boolean | number
    updatedAt?: boolean | number
    workflowId?: boolean | number
    status?: boolean | number
    trigger?: boolean | number
    steps?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ChannelSyncSuccessGenqlSelection{
    success?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingTrialPeriodDTOGenqlSelection{
    duration?: boolean | number
    isCreditCardRequired?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NativeModelCapabilitiesGenqlSelection{
    webSearch?: boolean | number
    twitterSearch?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ClientAIModelConfigGenqlSelection{
    modelId?: boolean | number
    label?: boolean | number
    provider?: boolean | number
    inputCostPer1kTokensInCredits?: boolean | number
    outputCostPer1kTokensInCredits?: boolean | number
    nativeCapabilities?: NativeModelCapabilitiesGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BillingGenqlSelection{
    isBillingEnabled?: boolean | number
    billingUrl?: boolean | number
    trialPeriods?: BillingTrialPeriodDTOGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SupportGenqlSelection{
    supportDriver?: boolean | number
    supportFrontChatId?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SentryGenqlSelection{
    environment?: boolean | number
    release?: boolean | number
    dsn?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CaptchaGenqlSelection{
    provider?: boolean | number
    siteKey?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ApiConfigGenqlSelection{
    mutationMaximumAffectedRecords?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PublicFeatureFlagMetadataGenqlSelection{
    label?: boolean | number
    description?: boolean | number
    imagePath?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PublicFeatureFlagGenqlSelection{
    key?: boolean | number
    metadata?: PublicFeatureFlagMetadataGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface QueryGenqlSelection{
    object?: ObjectGenqlSelection
    objects?: ObjectConnectionGenqlSelection
    getCoreViewFields?: (CoreViewFieldGenqlSelection & { __args: {viewId: Scalars['String']} })
    getCoreViewField?: (CoreViewFieldGenqlSelection & { __args: {id: Scalars['String']} })
    getCoreViews?: (CoreViewGenqlSelection & { __args?: {objectMetadataId?: (Scalars['String'] | null)} })
    getCoreView?: (CoreViewGenqlSelection & { __args: {id: Scalars['String']} })
    getCoreViewSorts?: (CoreViewSortGenqlSelection & { __args?: {viewId?: (Scalars['String'] | null)} })
    getCoreViewSort?: (CoreViewSortGenqlSelection & { __args: {id: Scalars['String']} })
    getCoreViewGroups?: (CoreViewGroupGenqlSelection & { __args?: {viewId?: (Scalars['String'] | null)} })
    getCoreViewGroup?: (CoreViewGroupGenqlSelection & { __args: {id: Scalars['String']} })
    getCoreViewFilterGroups?: (CoreViewFilterGroupGenqlSelection & { __args?: {viewId?: (Scalars['String'] | null)} })
    getCoreViewFilterGroup?: (CoreViewFilterGroupGenqlSelection & { __args: {id: Scalars['String']} })
    getCoreViewFilters?: (CoreViewFilterGenqlSelection & { __args?: {viewId?: (Scalars['String'] | null)} })
    getCoreViewFilter?: (CoreViewFilterGenqlSelection & { __args: {id: Scalars['String']} })
    index?: IndexGenqlSelection
    indexMetadatas?: IndexConnectionGenqlSelection
    findOneServerlessFunction?: (ServerlessFunctionGenqlSelection & { __args: {input: ServerlessFunctionIdInput} })
    findManyServerlessFunctions?: ServerlessFunctionGenqlSelection
    getAvailablePackages?: { __args: {input: ServerlessFunctionIdInput} }
    getServerlessFunctionSourceCode?: { __args: {input: GetServerlessFunctionSourceCodeInput} }
    findOneDatabaseEventTrigger?: (DatabaseEventTriggerGenqlSelection & { __args: {input: DatabaseEventTriggerIdInput} })
    findManyDatabaseEventTriggers?: DatabaseEventTriggerGenqlSelection
    findOneCronTrigger?: (CronTriggerGenqlSelection & { __args: {input: CronTriggerIdInput} })
    findManyCronTriggers?: CronTriggerGenqlSelection
    findOneRouteTrigger?: (RouteTriggerGenqlSelection & { __args: {input: RouteTriggerIdInput} })
    findManyRouteTriggers?: RouteTriggerGenqlSelection
    checkUserExists?: (CheckUserExistOutputGenqlSelection & { __args: {email: Scalars['String'], captchaToken?: (Scalars['String'] | null)} })
    checkWorkspaceInviteHashIsValid?: (WorkspaceInviteHashValidGenqlSelection & { __args: {inviteHash: Scalars['String']} })
    findWorkspaceFromInviteHash?: (WorkspaceGenqlSelection & { __args: {inviteHash: Scalars['String']} })
    validatePasswordResetToken?: (ValidatePasswordResetTokenGenqlSelection & { __args: {passwordResetToken: Scalars['String']} })
    apiKeys?: ApiKeyGenqlSelection
    apiKey?: (ApiKeyGenqlSelection & { __args: {input: GetApiKeyDTO} })
    currentUser?: UserGenqlSelection
    findWorkspaceInvitations?: WorkspaceInvitationGenqlSelection
    billingPortalSession?: (BillingSessionOutputGenqlSelection & { __args?: {returnUrlPath?: (Scalars['String'] | null)} })
    listPlans?: BillingPlanOutputGenqlSelection
    getMeteredProductsUsage?: BillingMeteredProductUsageOutputGenqlSelection
    getApprovedAccessDomains?: ApprovedAccessDomainGenqlSelection
    currentWorkspace?: WorkspaceGenqlSelection
    getPublicWorkspaceDataByDomain?: (PublicWorkspaceDataOutputGenqlSelection & { __args?: {origin?: (Scalars['String'] | null)} })
    findManyAgents?: AgentGenqlSelection
    findOneAgent?: (AgentGenqlSelection & { __args: {input: AgentIdInput} })
    findAgentHandoffTargets?: (AgentGenqlSelection & { __args: {input: AgentIdInput} })
    findAgentHandoffs?: (AgentHandoffDTOGenqlSelection & { __args: {input: AgentIdInput} })
    agentChatThreads?: (AgentChatThreadGenqlSelection & { __args: {agentId: Scalars['UUID']} })
    agentChatThread?: (AgentChatThreadGenqlSelection & { __args: {id: Scalars['UUID']} })
    agentChatMessages?: (AgentChatMessageGenqlSelection & { __args: {threadId: Scalars['UUID']} })
    getRoles?: RoleGenqlSelection
    field?: FieldGenqlSelection
    fields?: FieldConnectionGenqlSelection
    getSSOIdentityProviders?: FindAvailableSSOIDPOutputGenqlSelection
    getPageLayouts?: (PageLayoutGenqlSelection & { __args?: {objectMetadataId?: (Scalars['String'] | null)} })
    getPageLayout?: (PageLayoutGenqlSelection & { __args: {id: Scalars['String']} })
    getPageLayoutTabs?: (PageLayoutTabGenqlSelection & { __args: {pageLayoutId: Scalars['String']} })
    getPageLayoutTab?: (PageLayoutTabGenqlSelection & { __args: {id: Scalars['String']} })
    getPageLayoutWidgets?: (PageLayoutWidgetGenqlSelection & { __args: {pageLayoutTabId: Scalars['String']} })
    getPageLayoutWidget?: (PageLayoutWidgetGenqlSelection & { __args: {id: Scalars['String']} })
    webhooks?: WebhookGenqlSelection
    webhook?: (WebhookGenqlSelection & { __args: {input: GetWebhookDTO} })
    search?: (SearchResultConnectionGenqlSelection & { __args: {searchInput: Scalars['String'], limit: Scalars['Int'], after?: (Scalars['String'] | null), includedObjectNameSingulars?: (Scalars['String'][] | null), filter?: (ObjectRecordFilterInput | null), excludedObjectNameSingulars?: (Scalars['String'][] | null)} })
    getConnectedImapSmtpCaldavAccount?: (ConnectedImapSmtpCaldavAccountGenqlSelection & { __args: {id: Scalars['UUID']} })
    getAutoCompleteAddress?: (AutocompleteResultDtoGenqlSelection & { __args: {address: Scalars['String'], token: Scalars['String'], country?: (Scalars['String'] | null), isFieldCity?: (Scalars['Boolean'] | null)} })
    getAddressDetails?: (PlaceDetailsResultDtoGenqlSelection & { __args: {placeId: Scalars['String'], token: Scalars['String']} })
    getConfigVariablesGrouped?: ConfigVariablesOutputGenqlSelection
    getSystemHealthStatus?: SystemHealthGenqlSelection
    getIndicatorHealthStatus?: (AdminPanelHealthServiceDataGenqlSelection & { __args: {indicatorId: HealthIndicatorId} })
    getQueueMetrics?: (QueueMetricsDataGenqlSelection & { __args: {queueName: Scalars['String'], timeRange?: (QueueMetricsTimeRange | null)} })
    versionInfo?: VersionInfoGenqlSelection
    getDatabaseConfigVariable?: (ConfigVariableGenqlSelection & { __args: {key: Scalars['String']} })
    getPostgresCredentials?: PostgresCredentialsGenqlSelection
    findManyPublicDomains?: PublicDomainGenqlSelection
    getEmailingDomains?: EmailingDomainGenqlSelection
    getTimelineCalendarEventsFromPersonId?: (TimelineCalendarEventsWithTotalGenqlSelection & { __args: {personId: Scalars['UUID'], page: Scalars['Int'], pageSize: Scalars['Int']} })
    getTimelineCalendarEventsFromCompanyId?: (TimelineCalendarEventsWithTotalGenqlSelection & { __args: {companyId: Scalars['UUID'], page: Scalars['Int'], pageSize: Scalars['Int']} })
    getTimelineCalendarEventsFromOpportunityId?: (TimelineCalendarEventsWithTotalGenqlSelection & { __args: {opportunityId: Scalars['UUID'], page: Scalars['Int'], pageSize: Scalars['Int']} })
    getTimelineThreadsFromPersonId?: (TimelineThreadsWithTotalGenqlSelection & { __args: {personId: Scalars['UUID'], page: Scalars['Int'], pageSize: Scalars['Int']} })
    getTimelineThreadsFromCompanyId?: (TimelineThreadsWithTotalGenqlSelection & { __args: {companyId: Scalars['UUID'], page: Scalars['Int'], pageSize: Scalars['Int']} })
    getTimelineThreadsFromOpportunityId?: (TimelineThreadsWithTotalGenqlSelection & { __args: {opportunityId: Scalars['UUID'], page: Scalars['Int'], pageSize: Scalars['Int']} })
    findManyApplications?: ApplicationGenqlSelection
    findOneApplication?: (ApplicationGenqlSelection & { __args: {id: Scalars['UUID']} })
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    attachment?: (AttachmentGenqlSelection & { __args?: {filter?: (AttachmentFilterInput | null)} })
    attachmentsGroupBy?: (AttachmentGroupByConnectionGenqlSelection & { __args?: {groupBy?: (AttachmentGroupByInput[] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    blocklists?: (BlocklistConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (BlocklistFilterInput | null), orderBy?: ((BlocklistOrderByInput | null)[] | null)} })
    blocklist?: (BlocklistGenqlSelection & { __args?: {filter?: (BlocklistFilterInput | null)} })
    blocklistsGroupBy?: (BlocklistGroupByConnectionGenqlSelection & { __args?: {groupBy?: (BlocklistGroupByInput[] | null), filter?: (BlocklistFilterInput | null), orderBy?: ((BlocklistOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    calendarEvents?: (CalendarEventConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarEventFilterInput | null), orderBy?: ((CalendarEventOrderByInput | null)[] | null)} })
    calendarEvent?: (CalendarEventGenqlSelection & { __args?: {filter?: (CalendarEventFilterInput | null)} })
    calendarEventsGroupBy?: (CalendarEventGroupByConnectionGenqlSelection & { __args?: {groupBy?: (CalendarEventGroupByInput[] | null), filter?: (CalendarEventFilterInput | null), orderBy?: ((CalendarEventOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    calendarChannels?: (CalendarChannelConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarChannelFilterInput | null), orderBy?: ((CalendarChannelOrderByInput | null)[] | null)} })
    calendarChannel?: (CalendarChannelGenqlSelection & { __args?: {filter?: (CalendarChannelFilterInput | null)} })
    calendarChannelsGroupBy?: (CalendarChannelGroupByConnectionGenqlSelection & { __args?: {groupBy?: (CalendarChannelGroupByInput[] | null), filter?: (CalendarChannelFilterInput | null), orderBy?: ((CalendarChannelOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    calendarChannelEventAssociations?: (CalendarChannelEventAssociationConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarChannelEventAssociationFilterInput | null), orderBy?: ((CalendarChannelEventAssociationOrderByInput | null)[] | null)} })
    calendarChannelEventAssociation?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {filter?: (CalendarChannelEventAssociationFilterInput | null)} })
    calendarChannelEventAssociationsGroupBy?: (CalendarChannelEventAssociationGroupByConnectionGenqlSelection & { __args?: {groupBy?: (CalendarChannelEventAssociationGroupByInput[] | null), filter?: (CalendarChannelEventAssociationFilterInput | null), orderBy?: ((CalendarChannelEventAssociationOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    calendarEventParticipants?: (CalendarEventParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarEventParticipantFilterInput | null), orderBy?: ((CalendarEventParticipantOrderByInput | null)[] | null)} })
    calendarEventParticipant?: (CalendarEventParticipantGenqlSelection & { __args?: {filter?: (CalendarEventParticipantFilterInput | null)} })
    calendarEventParticipantsGroupBy?: (CalendarEventParticipantGroupByConnectionGenqlSelection & { __args?: {groupBy?: (CalendarEventParticipantGroupByInput[] | null), filter?: (CalendarEventParticipantFilterInput | null), orderBy?: ((CalendarEventParticipantOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    companies?: (CompanyConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CompanyFilterInput | null), orderBy?: ((CompanyOrderByInput | null)[] | null)} })
    company?: (CompanyGenqlSelection & { __args?: {filter?: (CompanyFilterInput | null)} })
    companyDuplicates?: (CompanyConnectionGenqlSelection & { __args?: {ids?: ((Scalars['UUID'] | null)[] | null), data?: ((CompanyCreateInput | null)[] | null)} })
    companiesGroupBy?: (CompanyGroupByConnectionGenqlSelection & { __args?: {groupBy?: (CompanyGroupByInput[] | null), filter?: (CompanyFilterInput | null), orderBy?: ((CompanyOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    connectedAccounts?: (ConnectedAccountConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ConnectedAccountFilterInput | null), orderBy?: ((ConnectedAccountOrderByInput | null)[] | null)} })
    connectedAccount?: (ConnectedAccountGenqlSelection & { __args?: {filter?: (ConnectedAccountFilterInput | null)} })
    connectedAccountsGroupBy?: (ConnectedAccountGroupByConnectionGenqlSelection & { __args?: {groupBy?: (ConnectedAccountGroupByInput[] | null), filter?: (ConnectedAccountFilterInput | null), orderBy?: ((ConnectedAccountOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    dashboards?: (DashboardConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (DashboardFilterInput | null), orderBy?: ((DashboardOrderByInput | null)[] | null)} })
    dashboard?: (DashboardGenqlSelection & { __args?: {filter?: (DashboardFilterInput | null)} })
    dashboardsGroupBy?: (DashboardGroupByConnectionGenqlSelection & { __args?: {groupBy?: (DashboardGroupByInput[] | null), filter?: (DashboardFilterInput | null), orderBy?: ((DashboardOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    favorite?: (FavoriteGenqlSelection & { __args?: {filter?: (FavoriteFilterInput | null)} })
    favoritesGroupBy?: (FavoriteGroupByConnectionGenqlSelection & { __args?: {groupBy?: (FavoriteGroupByInput[] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    favoriteFolders?: (FavoriteFolderConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFolderFilterInput | null), orderBy?: ((FavoriteFolderOrderByInput | null)[] | null)} })
    favoriteFolder?: (FavoriteFolderGenqlSelection & { __args?: {filter?: (FavoriteFolderFilterInput | null)} })
    favoriteFoldersGroupBy?: (FavoriteFolderGroupByConnectionGenqlSelection & { __args?: {groupBy?: (FavoriteFolderGroupByInput[] | null), filter?: (FavoriteFolderFilterInput | null), orderBy?: ((FavoriteFolderOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    timelineActivity?: (TimelineActivityGenqlSelection & { __args?: {filter?: (TimelineActivityFilterInput | null)} })
    timelineActivitiesGroupBy?: (TimelineActivityGroupByConnectionGenqlSelection & { __args?: {groupBy?: (TimelineActivityGroupByInput[] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    viewFields?: (ViewFieldConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewFieldFilterInput | null), orderBy?: ((ViewFieldOrderByInput | null)[] | null)} })
    viewField?: (ViewFieldGenqlSelection & { __args?: {filter?: (ViewFieldFilterInput | null)} })
    viewFieldsGroupBy?: (ViewFieldGroupByConnectionGenqlSelection & { __args?: {groupBy?: (ViewFieldGroupByInput[] | null), filter?: (ViewFieldFilterInput | null), orderBy?: ((ViewFieldOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    viewFilterGroups?: (ViewFilterGroupConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewFilterGroupFilterInput | null), orderBy?: ((ViewFilterGroupOrderByInput | null)[] | null)} })
    viewFilterGroup?: (ViewFilterGroupGenqlSelection & { __args?: {filter?: (ViewFilterGroupFilterInput | null)} })
    viewFilterGroupsGroupBy?: (ViewFilterGroupGroupByConnectionGenqlSelection & { __args?: {groupBy?: (ViewFilterGroupGroupByInput[] | null), filter?: (ViewFilterGroupFilterInput | null), orderBy?: ((ViewFilterGroupOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    viewGroups?: (ViewGroupConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewGroupFilterInput | null), orderBy?: ((ViewGroupOrderByInput | null)[] | null)} })
    viewGroup?: (ViewGroupGenqlSelection & { __args?: {filter?: (ViewGroupFilterInput | null)} })
    viewGroupsGroupBy?: (ViewGroupGroupByConnectionGenqlSelection & { __args?: {groupBy?: (ViewGroupGroupByInput[] | null), filter?: (ViewGroupFilterInput | null), orderBy?: ((ViewGroupOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    viewFilters?: (ViewFilterConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewFilterFilterInput | null), orderBy?: ((ViewFilterOrderByInput | null)[] | null)} })
    viewFilter?: (ViewFilterGenqlSelection & { __args?: {filter?: (ViewFilterFilterInput | null)} })
    viewFiltersGroupBy?: (ViewFilterGroupByConnectionGenqlSelection & { __args?: {groupBy?: (ViewFilterGroupByInput[] | null), filter?: (ViewFilterFilterInput | null), orderBy?: ((ViewFilterOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    viewSorts?: (ViewSortConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewSortFilterInput | null), orderBy?: ((ViewSortOrderByInput | null)[] | null)} })
    viewSort?: (ViewSortGenqlSelection & { __args?: {filter?: (ViewSortFilterInput | null)} })
    viewSortsGroupBy?: (ViewSortGroupByConnectionGenqlSelection & { __args?: {groupBy?: (ViewSortGroupByInput[] | null), filter?: (ViewSortFilterInput | null), orderBy?: ((ViewSortOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    views?: (ViewConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewFilterInput | null), orderBy?: ((ViewOrderByInput | null)[] | null)} })
    view?: (ViewGenqlSelection & { __args?: {filter?: (ViewFilterInput | null)} })
    viewsGroupBy?: (ViewGroupByConnectionGenqlSelection & { __args?: {groupBy?: (ViewGroupByInput[] | null), filter?: (ViewFilterInput | null), orderBy?: ((ViewOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    workflows?: (WorkflowConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowFilterInput | null), orderBy?: ((WorkflowOrderByInput | null)[] | null)} })
    workflow?: (WorkflowGenqlSelection & { __args?: {filter?: (WorkflowFilterInput | null)} })
    workflowsGroupBy?: (WorkflowGroupByConnectionGenqlSelection & { __args?: {groupBy?: (WorkflowGroupByInput[] | null), filter?: (WorkflowFilterInput | null), orderBy?: ((WorkflowOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    workflowVersions?: (WorkflowVersionConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowVersionFilterInput | null), orderBy?: ((WorkflowVersionOrderByInput | null)[] | null)} })
    workflowVersion?: (WorkflowVersionGenqlSelection & { __args?: {filter?: (WorkflowVersionFilterInput | null)} })
    workflowVersionsGroupBy?: (WorkflowVersionGroupByConnectionGenqlSelection & { __args?: {groupBy?: (WorkflowVersionGroupByInput[] | null), filter?: (WorkflowVersionFilterInput | null), orderBy?: ((WorkflowVersionOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    workflowRuns?: (WorkflowRunConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowRunFilterInput | null), orderBy?: ((WorkflowRunOrderByInput | null)[] | null)} })
    workflowRun?: (WorkflowRunGenqlSelection & { __args?: {filter?: (WorkflowRunFilterInput | null)} })
    workflowRunsGroupBy?: (WorkflowRunGroupByConnectionGenqlSelection & { __args?: {groupBy?: (WorkflowRunGroupByInput[] | null), filter?: (WorkflowRunFilterInput | null), orderBy?: ((WorkflowRunOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    workflowAutomatedTriggers?: (WorkflowAutomatedTriggerConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowAutomatedTriggerFilterInput | null), orderBy?: ((WorkflowAutomatedTriggerOrderByInput | null)[] | null)} })
    workflowAutomatedTrigger?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {filter?: (WorkflowAutomatedTriggerFilterInput | null)} })
    workflowAutomatedTriggersGroupBy?: (WorkflowAutomatedTriggerGroupByConnectionGenqlSelection & { __args?: {groupBy?: (WorkflowAutomatedTriggerGroupByInput[] | null), filter?: (WorkflowAutomatedTriggerFilterInput | null), orderBy?: ((WorkflowAutomatedTriggerOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    workspaceMembers?: (WorkspaceMemberConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkspaceMemberFilterInput | null), orderBy?: ((WorkspaceMemberOrderByInput | null)[] | null)} })
    workspaceMember?: (WorkspaceMemberGenqlSelection & { __args?: {filter?: (WorkspaceMemberFilterInput | null)} })
    workspaceMembersGroupBy?: (WorkspaceMemberGroupByConnectionGenqlSelection & { __args?: {groupBy?: (WorkspaceMemberGroupByInput[] | null), filter?: (WorkspaceMemberFilterInput | null), orderBy?: ((WorkspaceMemberOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    messages?: (MessageConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageFilterInput | null), orderBy?: ((MessageOrderByInput | null)[] | null)} })
    message?: (MessageGenqlSelection & { __args?: {filter?: (MessageFilterInput | null)} })
    messagesGroupBy?: (MessageGroupByConnectionGenqlSelection & { __args?: {groupBy?: (MessageGroupByInput[] | null), filter?: (MessageFilterInput | null), orderBy?: ((MessageOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    messageThreads?: (MessageThreadConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageThreadFilterInput | null), orderBy?: ((MessageThreadOrderByInput | null)[] | null)} })
    messageThread?: (MessageThreadGenqlSelection & { __args?: {filter?: (MessageThreadFilterInput | null)} })
    messageThreadsGroupBy?: (MessageThreadGroupByConnectionGenqlSelection & { __args?: {groupBy?: (MessageThreadGroupByInput[] | null), filter?: (MessageThreadFilterInput | null), orderBy?: ((MessageThreadOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    messageChannels?: (MessageChannelConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageChannelFilterInput | null), orderBy?: ((MessageChannelOrderByInput | null)[] | null)} })
    messageChannel?: (MessageChannelGenqlSelection & { __args?: {filter?: (MessageChannelFilterInput | null)} })
    messageChannelsGroupBy?: (MessageChannelGroupByConnectionGenqlSelection & { __args?: {groupBy?: (MessageChannelGroupByInput[] | null), filter?: (MessageChannelFilterInput | null), orderBy?: ((MessageChannelOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    messageParticipants?: (MessageParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageParticipantFilterInput | null), orderBy?: ((MessageParticipantOrderByInput | null)[] | null)} })
    messageParticipant?: (MessageParticipantGenqlSelection & { __args?: {filter?: (MessageParticipantFilterInput | null)} })
    messageParticipantsGroupBy?: (MessageParticipantGroupByConnectionGenqlSelection & { __args?: {groupBy?: (MessageParticipantGroupByInput[] | null), filter?: (MessageParticipantFilterInput | null), orderBy?: ((MessageParticipantOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    messageFolders?: (MessageFolderConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageFolderFilterInput | null), orderBy?: ((MessageFolderOrderByInput | null)[] | null)} })
    messageFolder?: (MessageFolderGenqlSelection & { __args?: {filter?: (MessageFolderFilterInput | null)} })
    messageFoldersGroupBy?: (MessageFolderGroupByConnectionGenqlSelection & { __args?: {groupBy?: (MessageFolderGroupByInput[] | null), filter?: (MessageFolderFilterInput | null), orderBy?: ((MessageFolderOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    messageChannelMessageAssociations?: (MessageChannelMessageAssociationConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageChannelMessageAssociationFilterInput | null), orderBy?: ((MessageChannelMessageAssociationOrderByInput | null)[] | null)} })
    messageChannelMessageAssociation?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {filter?: (MessageChannelMessageAssociationFilterInput | null)} })
    messageChannelMessageAssociationsGroupBy?: (MessageChannelMessageAssociationGroupByConnectionGenqlSelection & { __args?: {groupBy?: (MessageChannelMessageAssociationGroupByInput[] | null), filter?: (MessageChannelMessageAssociationFilterInput | null), orderBy?: ((MessageChannelMessageAssociationOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    notes?: (NoteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteFilterInput | null), orderBy?: ((NoteOrderByInput | null)[] | null)} })
    note?: (NoteGenqlSelection & { __args?: {filter?: (NoteFilterInput | null)} })
    notesGroupBy?: (NoteGroupByConnectionGenqlSelection & { __args?: {groupBy?: (NoteGroupByInput[] | null), filter?: (NoteFilterInput | null), orderBy?: ((NoteOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    noteTarget?: (NoteTargetGenqlSelection & { __args?: {filter?: (NoteTargetFilterInput | null)} })
    noteTargetsGroupBy?: (NoteTargetGroupByConnectionGenqlSelection & { __args?: {groupBy?: (NoteTargetGroupByInput[] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    opportunities?: (OpportunityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (OpportunityFilterInput | null), orderBy?: ((OpportunityOrderByInput | null)[] | null)} })
    opportunity?: (OpportunityGenqlSelection & { __args?: {filter?: (OpportunityFilterInput | null)} })
    opportunitiesGroupBy?: (OpportunityGroupByConnectionGenqlSelection & { __args?: {groupBy?: (OpportunityGroupByInput[] | null), filter?: (OpportunityFilterInput | null), orderBy?: ((OpportunityOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    people?: (PersonConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (PersonFilterInput | null), orderBy?: ((PersonOrderByInput | null)[] | null)} })
    person?: (PersonGenqlSelection & { __args?: {filter?: (PersonFilterInput | null)} })
    personDuplicates?: (PersonConnectionGenqlSelection & { __args?: {ids?: ((Scalars['UUID'] | null)[] | null), data?: ((PersonCreateInput | null)[] | null)} })
    peopleGroupBy?: (PersonGroupByConnectionGenqlSelection & { __args?: {groupBy?: (PersonGroupByInput[] | null), filter?: (PersonFilterInput | null), orderBy?: ((PersonOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    tasks?: (TaskConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskFilterInput | null), orderBy?: ((TaskOrderByInput | null)[] | null)} })
    task?: (TaskGenqlSelection & { __args?: {filter?: (TaskFilterInput | null)} })
    tasksGroupBy?: (TaskGroupByConnectionGenqlSelection & { __args?: {groupBy?: (TaskGroupByInput[] | null), filter?: (TaskFilterInput | null), orderBy?: ((TaskOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    taskTarget?: (TaskTargetGenqlSelection & { __args?: {filter?: (TaskTargetFilterInput | null)} })
    taskTargetsGroupBy?: (TaskTargetGroupByConnectionGenqlSelection & { __args?: {groupBy?: (TaskTargetGroupByInput[] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    pets?: (PetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (PetFilterInput | null), orderBy?: ((PetOrderByInput | null)[] | null)} })
    pet?: (PetGenqlSelection & { __args?: {filter?: (PetFilterInput | null)} })
    petsGroupBy?: (PetGroupByConnectionGenqlSelection & { __args?: {groupBy?: (PetGroupByInput[] | null), filter?: (PetFilterInput | null), orderBy?: ((PetOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    rockets?: (RocketConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (RocketFilterInput | null), orderBy?: ((RocketOrderByInput | null)[] | null)} })
    rocket?: (RocketGenqlSelection & { __args?: {filter?: (RocketFilterInput | null)} })
    rocketsGroupBy?: (RocketGroupByConnectionGenqlSelection & { __args?: {groupBy?: (RocketGroupByInput[] | null), filter?: (RocketFilterInput | null), orderBy?: ((RocketOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    surveyResults?: (SurveyResultConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (SurveyResultFilterInput | null), orderBy?: ((SurveyResultOrderByInput | null)[] | null)} })
    surveyResult?: (SurveyResultGenqlSelection & { __args?: {filter?: (SurveyResultFilterInput | null)} })
    surveyResultsGroupBy?: (SurveyResultGroupByConnectionGenqlSelection & { __args?: {groupBy?: (SurveyResultGroupByInput[] | null), filter?: (SurveyResultFilterInput | null), orderBy?: ((SurveyResultOrderByWithGroupByInput | null)[] | null), omitNullValues?: (Scalars['Boolean'] | null), viewId?: (Scalars['UUID'] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ServerlessFunctionIdInput {
/** The id of the function. */
id: Scalars['ID']}

export interface GetServerlessFunctionSourceCodeInput {
/** The id of the function. */
id: Scalars['ID'],
/** The version of the function */
version: Scalars['String']}

export interface DatabaseEventTriggerIdInput {id: Scalars['String']}

export interface CronTriggerIdInput {id: Scalars['String']}

export interface RouteTriggerIdInput {id: Scalars['String']}

export interface GetApiKeyDTO {id: Scalars['UUID']}

export interface AgentIdInput {
/** The id of the agent. */
id: Scalars['UUID']}

export interface GetWebhookDTO {id: Scalars['UUID']}

export interface ObjectRecordFilterInput {and?: (ObjectRecordFilterInput[] | null),not?: (ObjectRecordFilterInput | null),or?: (ObjectRecordFilterInput[] | null),id?: (UUIDFilter | null),createdAt?: (DateFilter | null),updatedAt?: (DateFilter | null),deletedAt?: (DateFilter | null)}

export interface UUIDFilter {eq?: (Scalars['UUID'] | null),gt?: (Scalars['UUID'] | null),gte?: (Scalars['UUID'] | null),in?: (Scalars['UUID'][] | null),lt?: (Scalars['UUID'] | null),lte?: (Scalars['UUID'] | null),neq?: (Scalars['UUID'] | null),is?: (FilterIs | null)}

export interface DateFilter {eq?: (Scalars['Date'] | null),gt?: (Scalars['Date'] | null),gte?: (Scalars['Date'] | null),in?: (Scalars['Date'][] | null),lt?: (Scalars['Date'] | null),lte?: (Scalars['Date'] | null),neq?: (Scalars['Date'] | null),is?: (FilterIs | null)}

export interface MutationGenqlSelection{
    createObjectEvent?: (AnalyticsGenqlSelection & { __args: {event: Scalars['String'], recordId: Scalars['UUID'], objectMetadataId: Scalars['UUID'], properties?: (Scalars['JSON'] | null)} })
    trackAnalytics?: (AnalyticsGenqlSelection & { __args: {type: AnalyticsType, name?: (Scalars['String'] | null), event?: (Scalars['String'] | null), properties?: (Scalars['JSON'] | null)} })
    deleteOneObject?: (ObjectGenqlSelection & { __args: {input: DeleteOneObjectInput} })
    updateOneObject?: (ObjectGenqlSelection & { __args: {input: UpdateOneObjectInput} })
    createOneObject?: ObjectGenqlSelection
    updateCoreViewField?: (CoreViewFieldGenqlSelection & { __args: {input: UpdateViewFieldInput} })
    createCoreViewField?: (CoreViewFieldGenqlSelection & { __args: {input: CreateViewFieldInput} })
    deleteCoreViewField?: (CoreViewFieldGenqlSelection & { __args: {input: DeleteViewFieldInput} })
    destroyCoreViewField?: (CoreViewFieldGenqlSelection & { __args: {input: DestroyViewFieldInput} })
    createCoreView?: (CoreViewGenqlSelection & { __args: {input: CreateViewInput} })
    updateCoreView?: (CoreViewGenqlSelection & { __args: {id: Scalars['String'], input: UpdateViewInput} })
    deleteCoreView?: { __args: {id: Scalars['String']} }
    destroyCoreView?: { __args: {id: Scalars['String']} }
    createCoreViewSort?: (CoreViewSortGenqlSelection & { __args: {input: CreateViewSortInput} })
    updateCoreViewSort?: (CoreViewSortGenqlSelection & { __args: {id: Scalars['String'], input: UpdateViewSortInput} })
    deleteCoreViewSort?: { __args: {id: Scalars['String']} }
    destroyCoreViewSort?: { __args: {id: Scalars['String']} }
    createCoreViewGroup?: (CoreViewGroupGenqlSelection & { __args: {input: CreateViewGroupInput} })
    updateCoreViewGroup?: (CoreViewGroupGenqlSelection & { __args: {input: UpdateViewGroupInput} })
    deleteCoreViewGroup?: (CoreViewGroupGenqlSelection & { __args: {input: DeleteViewGroupInput} })
    destroyCoreViewGroup?: (CoreViewGroupGenqlSelection & { __args: {input: DestroyViewGroupInput} })
    createCoreViewFilterGroup?: (CoreViewFilterGroupGenqlSelection & { __args: {input: CreateViewFilterGroupInput} })
    updateCoreViewFilterGroup?: (CoreViewFilterGroupGenqlSelection & { __args: {id: Scalars['String'], input: UpdateViewFilterGroupInput} })
    deleteCoreViewFilterGroup?: { __args: {id: Scalars['String']} }
    destroyCoreViewFilterGroup?: { __args: {id: Scalars['String']} }
    createCoreViewFilter?: (CoreViewFilterGenqlSelection & { __args: {input: CreateViewFilterInput} })
    updateCoreViewFilter?: (CoreViewFilterGenqlSelection & { __args: {input: UpdateViewFilterInput} })
    deleteCoreViewFilter?: (CoreViewFilterGenqlSelection & { __args: {input: DeleteViewFilterInput} })
    destroyCoreViewFilter?: (CoreViewFilterGenqlSelection & { __args: {input: DestroyViewFilterInput} })
    deleteOneServerlessFunction?: (ServerlessFunctionGenqlSelection & { __args: {input: ServerlessFunctionIdInput} })
    updateOneServerlessFunction?: (ServerlessFunctionGenqlSelection & { __args: {input: UpdateServerlessFunctionInput} })
    createOneServerlessFunction?: (ServerlessFunctionGenqlSelection & { __args: {input: CreateServerlessFunctionInput} })
    executeOneServerlessFunction?: (ServerlessFunctionExecutionResultGenqlSelection & { __args: {input: ExecuteServerlessFunctionInput} })
    publishServerlessFunction?: (ServerlessFunctionGenqlSelection & { __args: {input: PublishServerlessFunctionInput} })
    createOneServerlessFunctionLayer?: (ServerlessFunctionLayerGenqlSelection & { __args: {packageJson: Scalars['JSON'], yarnLock: Scalars['String']} })
    createFile?: (FileGenqlSelection & { __args: {file: Scalars['Upload']} })
    deleteFile?: (FileGenqlSelection & { __args: {fileId: Scalars['UUID']} })
    uploadFile?: (SignedFileDTOGenqlSelection & { __args: {file: Scalars['Upload'], fileFolder?: (FileFolder | null)} })
    uploadImage?: (SignedFileDTOGenqlSelection & { __args: {file: Scalars['Upload'], fileFolder?: (FileFolder | null)} })
    deleteOneDatabaseEventTrigger?: (DatabaseEventTriggerGenqlSelection & { __args: {input: DatabaseEventTriggerIdInput} })
    updateOneDatabaseEventTrigger?: (DatabaseEventTriggerGenqlSelection & { __args: {input: UpdateDatabaseEventTriggerInput} })
    createOneDatabaseEventTrigger?: (DatabaseEventTriggerGenqlSelection & { __args: {input: CreateDatabaseEventTriggerInput} })
    deleteOneCronTrigger?: (CronTriggerGenqlSelection & { __args: {input: CronTriggerIdInput} })
    updateOneCronTrigger?: (CronTriggerGenqlSelection & { __args: {input: UpdateCronTriggerInput} })
    createOneCronTrigger?: (CronTriggerGenqlSelection & { __args: {input: CreateCronTriggerInput} })
    deleteOneRouteTrigger?: (RouteTriggerGenqlSelection & { __args: {input: RouteTriggerIdInput} })
    updateOneRouteTrigger?: (RouteTriggerGenqlSelection & { __args: {input: UpdateRouteTriggerInput} })
    createOneRouteTrigger?: (RouteTriggerGenqlSelection & { __args: {input: CreateRouteTriggerInput} })
    getAuthorizationUrlForSSO?: (GetAuthorizationUrlForSSOOutputGenqlSelection & { __args: {input: GetAuthorizationUrlForSSOInput} })
    getLoginTokenFromCredentials?: (LoginTokenGenqlSelection & { __args: {email: Scalars['String'], password: Scalars['String'], captchaToken?: (Scalars['String'] | null), locale?: (Scalars['String'] | null), verifyEmailRedirectPath?: (Scalars['String'] | null), origin: Scalars['String']} })
    signIn?: (AvailableWorkspacesAndAccessTokensOutputGenqlSelection & { __args: {email: Scalars['String'], password: Scalars['String'], captchaToken?: (Scalars['String'] | null), locale?: (Scalars['String'] | null), verifyEmailRedirectPath?: (Scalars['String'] | null)} })
    getLoginTokenFromEmailVerificationToken?: (GetLoginTokenFromEmailVerificationTokenOutputGenqlSelection & { __args: {emailVerificationToken: Scalars['String'], email: Scalars['String'], captchaToken?: (Scalars['String'] | null), origin: Scalars['String']} })
    getWorkspaceAgnosticTokenFromEmailVerificationToken?: (AvailableWorkspacesAndAccessTokensOutputGenqlSelection & { __args: {emailVerificationToken: Scalars['String'], email: Scalars['String'], captchaToken?: (Scalars['String'] | null)} })
    getAuthTokensFromOTP?: (AuthTokensGenqlSelection & { __args: {otp: Scalars['String'], loginToken: Scalars['String'], captchaToken?: (Scalars['String'] | null), origin: Scalars['String']} })
    signUp?: (AvailableWorkspacesAndAccessTokensOutputGenqlSelection & { __args: {email: Scalars['String'], password: Scalars['String'], captchaToken?: (Scalars['String'] | null), locale?: (Scalars['String'] | null), verifyEmailRedirectPath?: (Scalars['String'] | null)} })
    signUpInWorkspace?: (SignUpOutputGenqlSelection & { __args: {email: Scalars['String'], password: Scalars['String'], workspaceId?: (Scalars['UUID'] | null), workspaceInviteHash?: (Scalars['String'] | null), workspacePersonalInviteToken?: (Scalars['String'] | null), captchaToken?: (Scalars['String'] | null), locale?: (Scalars['String'] | null), verifyEmailRedirectPath?: (Scalars['String'] | null)} })
    signUpInNewWorkspace?: SignUpOutputGenqlSelection
    generateTransientToken?: TransientTokenGenqlSelection
    getAuthTokensFromLoginToken?: (AuthTokensGenqlSelection & { __args: {loginToken: Scalars['String'], origin: Scalars['String']} })
    authorizeApp?: (AuthorizeAppGenqlSelection & { __args: {clientId: Scalars['String'], codeChallenge?: (Scalars['String'] | null), redirectUrl: Scalars['String']} })
    renewToken?: (AuthTokensGenqlSelection & { __args: {appToken: Scalars['String']} })
    generateApiKeyToken?: (ApiKeyTokenGenqlSelection & { __args: {apiKeyId: Scalars['UUID'], expiresAt: Scalars['String']} })
    emailPasswordResetLink?: (EmailPasswordResetLinkGenqlSelection & { __args: {email: Scalars['String'], workspaceId: Scalars['UUID']} })
    updatePasswordViaResetToken?: (InvalidatePasswordGenqlSelection & { __args: {passwordResetToken: Scalars['String'], newPassword: Scalars['String']} })
    createApiKey?: (ApiKeyGenqlSelection & { __args: {input: CreateApiKeyDTO} })
    updateApiKey?: (ApiKeyGenqlSelection & { __args: {input: UpdateApiKeyDTO} })
    revokeApiKey?: (ApiKeyGenqlSelection & { __args: {input: RevokeApiKeyDTO} })
    assignRoleToApiKey?: { __args: {apiKeyId: Scalars['UUID'], roleId: Scalars['UUID']} }
    initiateOTPProvisioning?: (InitiateTwoFactorAuthenticationProvisioningOutputGenqlSelection & { __args: {loginToken: Scalars['String'], origin: Scalars['String']} })
    initiateOTPProvisioningForAuthenticatedUser?: InitiateTwoFactorAuthenticationProvisioningOutputGenqlSelection
    deleteTwoFactorAuthenticationMethod?: (DeleteTwoFactorAuthenticationMethodOutputGenqlSelection & { __args: {twoFactorAuthenticationMethodId: Scalars['UUID']} })
    verifyTwoFactorAuthenticationMethodForAuthenticatedUser?: (VerifyTwoFactorAuthenticationMethodOutputGenqlSelection & { __args: {otp: Scalars['String']} })
    uploadProfilePicture?: (SignedFileDTOGenqlSelection & { __args: {file: Scalars['Upload']} })
    deleteUser?: UserGenqlSelection
    deleteWorkspaceInvitation?: { __args: {appTokenId: Scalars['String']} }
    resendWorkspaceInvitation?: (SendInvitationsOutputGenqlSelection & { __args: {appTokenId: Scalars['String']} })
    sendInvitations?: (SendInvitationsOutputGenqlSelection & { __args: {emails: Scalars['String'][]} })
    skipSyncEmailOnboardingStep?: OnboardingStepSuccessGenqlSelection
    skipBookOnboardingStep?: OnboardingStepSuccessGenqlSelection
    checkoutSession?: (BillingSessionOutputGenqlSelection & { __args: {recurringInterval: SubscriptionInterval, plan: BillingPlanKey, requirePaymentMethod: Scalars['Boolean'], successUrlPath?: (Scalars['String'] | null)} })
    switchSubscriptionInterval?: BillingUpdateOutputGenqlSelection
    switchBillingPlan?: BillingUpdateOutputGenqlSelection
    cancelSwitchBillingPlan?: BillingUpdateOutputGenqlSelection
    cancelSwitchBillingInterval?: BillingUpdateOutputGenqlSelection
    setMeteredSubscriptionPrice?: (BillingUpdateOutputGenqlSelection & { __args: {priceId: Scalars['String']} })
    endSubscriptionTrialPeriod?: BillingEndTrialPeriodOutputGenqlSelection
    cancelSwitchMeteredPrice?: BillingUpdateOutputGenqlSelection
    createApprovedAccessDomain?: (ApprovedAccessDomainGenqlSelection & { __args: {input: CreateApprovedAccessDomainInput} })
    deleteApprovedAccessDomain?: { __args: {input: DeleteApprovedAccessDomainInput} }
    validateApprovedAccessDomain?: (ApprovedAccessDomainGenqlSelection & { __args: {input: ValidateApprovedAccessDomainInput} })
    activateWorkspace?: (WorkspaceGenqlSelection & { __args: {data: ActivateWorkspaceInput} })
    updateWorkspace?: (WorkspaceGenqlSelection & { __args: {data: UpdateWorkspaceInput} })
    uploadWorkspaceLogo?: (SignedFileDTOGenqlSelection & { __args: {file: Scalars['Upload']} })
    deleteCurrentWorkspace?: WorkspaceGenqlSelection
    checkCustomDomainValidRecords?: DomainValidRecordsGenqlSelection
    createOneAgent?: (AgentGenqlSelection & { __args: {input: CreateAgentInput} })
    updateOneAgent?: (AgentGenqlSelection & { __args: {input: UpdateAgentInput} })
    deleteOneAgent?: (AgentGenqlSelection & { __args: {input: AgentIdInput} })
    createAgentHandoff?: { __args: {input: CreateAgentHandoffInput} }
    removeAgentHandoff?: { __args: {input: RemoveAgentHandoffInput} }
    createAgentChatThread?: (AgentChatThreadGenqlSelection & { __args: {input: CreateAgentChatThreadInput} })
    updateWorkspaceMemberRole?: (WorkspaceMemberGenqlSelection & { __args: {workspaceMemberId: Scalars['UUID'], roleId: Scalars['UUID']} })
    createOneRole?: (RoleGenqlSelection & { __args: {createRoleInput: CreateRoleInput} })
    updateOneRole?: (RoleGenqlSelection & { __args: {updateRoleInput: UpdateRoleInput} })
    deleteOneRole?: { __args: {roleId: Scalars['UUID']} }
    upsertObjectPermissions?: (ObjectPermissionGenqlSelection & { __args: {upsertObjectPermissionsInput: UpsertObjectPermissionsInput} })
    upsertPermissionFlags?: (PermissionFlagGenqlSelection & { __args: {upsertPermissionFlagsInput: UpsertPermissionFlagsInput} })
    upsertFieldPermissions?: (FieldPermissionGenqlSelection & { __args: {upsertFieldPermissionsInput: UpsertFieldPermissionsInput} })
    assignRoleToAgent?: { __args: {agentId: Scalars['UUID'], roleId: Scalars['UUID']} }
    removeRoleFromAgent?: { __args: {agentId: Scalars['UUID']} }
    createOneField?: (FieldGenqlSelection & { __args: {input: CreateOneFieldMetadataInput} })
    updateOneField?: (FieldGenqlSelection & { __args: {input: UpdateOneFieldMetadataInput} })
    deleteOneField?: (FieldGenqlSelection & { __args: {input: DeleteOneFieldInput} })
    resendEmailVerificationToken?: (ResendEmailVerificationTokenOutputGenqlSelection & { __args: {email: Scalars['String'], origin: Scalars['String']} })
    createOIDCIdentityProvider?: (SetupSsoOutputGenqlSelection & { __args: {input: SetupOIDCSsoInput} })
    createSAMLIdentityProvider?: (SetupSsoOutputGenqlSelection & { __args: {input: SetupSAMLSsoInput} })
    deleteSSOIdentityProvider?: (DeleteSsoOutputGenqlSelection & { __args: {input: DeleteSsoInput} })
    editSSOIdentityProvider?: (EditSsoOutputGenqlSelection & { __args: {input: EditSsoInput} })
    impersonate?: (ImpersonateOutputGenqlSelection & { __args: {userId: Scalars['UUID'], workspaceId: Scalars['UUID']} })
    createPageLayout?: (PageLayoutGenqlSelection & { __args: {input: CreatePageLayoutInput} })
    updatePageLayout?: (PageLayoutGenqlSelection & { __args: {id: Scalars['String'], input: UpdatePageLayoutInput} })
    deletePageLayout?: (PageLayoutGenqlSelection & { __args: {id: Scalars['String']} })
    destroyPageLayout?: { __args: {id: Scalars['String']} }
    restorePageLayout?: (PageLayoutGenqlSelection & { __args: {id: Scalars['String']} })
    updatePageLayoutWithTabsAndWidgets?: (PageLayoutGenqlSelection & { __args: {id: Scalars['String'], input: UpdatePageLayoutWithTabsInput} })
    createPageLayoutTab?: (PageLayoutTabGenqlSelection & { __args: {input: CreatePageLayoutTabInput} })
    updatePageLayoutTab?: (PageLayoutTabGenqlSelection & { __args: {id: Scalars['String'], input: UpdatePageLayoutTabInput} })
    deletePageLayoutTab?: { __args: {id: Scalars['String']} }
    destroyPageLayoutTab?: { __args: {id: Scalars['String']} }
    restorePageLayoutTab?: (PageLayoutTabGenqlSelection & { __args: {id: Scalars['String']} })
    createPageLayoutWidget?: (PageLayoutWidgetGenqlSelection & { __args: {input: CreatePageLayoutWidgetInput} })
    updatePageLayoutWidget?: (PageLayoutWidgetGenqlSelection & { __args: {id: Scalars['String'], input: UpdatePageLayoutWidgetInput} })
    deletePageLayoutWidget?: (PageLayoutWidgetGenqlSelection & { __args: {id: Scalars['String']} })
    destroyPageLayoutWidget?: { __args: {id: Scalars['String']} }
    restorePageLayoutWidget?: (PageLayoutWidgetGenqlSelection & { __args: {id: Scalars['String']} })
    createWebhook?: (WebhookGenqlSelection & { __args: {input: CreateWebhookDTO} })
    updateWebhook?: (WebhookGenqlSelection & { __args: {input: UpdateWebhookDTO} })
    deleteWebhook?: { __args: {input: DeleteWebhookDTO} }
    startChannelSync?: (ChannelSyncSuccessGenqlSelection & { __args: {connectedAccountId: Scalars['UUID']} })
    saveImapSmtpCaldavAccount?: (ImapSmtpCaldavConnectionSuccessGenqlSelection & { __args: {accountOwnerId: Scalars['UUID'], handle: Scalars['String'], connectionParameters: EmailAccountConnectionParameters, id?: (Scalars['UUID'] | null)} })
    updateLabPublicFeatureFlag?: (FeatureFlagDTOGenqlSelection & { __args: {input: UpdateLabPublicFeatureFlagInput} })
    userLookupAdminPanel?: (UserLookupGenqlSelection & { __args: {userIdentifier: Scalars['String']} })
    updateWorkspaceFeatureFlag?: { __args: {workspaceId: Scalars['UUID'], featureFlag: Scalars['String'], value: Scalars['Boolean']} }
    createDatabaseConfigVariable?: { __args: {key: Scalars['String'], value: Scalars['JSON']} }
    updateDatabaseConfigVariable?: { __args: {key: Scalars['String'], value: Scalars['JSON']} }
    deleteDatabaseConfigVariable?: { __args: {key: Scalars['String']} }
    activateWorkflowVersion?: { __args: {workflowVersionId: Scalars['UUID']} }
    deactivateWorkflowVersion?: { __args: {workflowVersionId: Scalars['UUID']} }
    runWorkflowVersion?: (WorkflowRunGenqlSelection & { __args: {input: RunWorkflowVersionInput} })
    computeStepOutputSchema?: { __args: {input: ComputeStepOutputSchemaInput} }
    createWorkflowVersionStep?: (WorkflowVersionStepChangesGenqlSelection & { __args: {input: CreateWorkflowVersionStepInput} })
    updateWorkflowVersionStep?: (WorkflowActionGenqlSelection & { __args: {input: UpdateWorkflowVersionStepInput} })
    deleteWorkflowVersionStep?: (WorkflowVersionStepChangesGenqlSelection & { __args: {input: DeleteWorkflowVersionStepInput} })
    submitFormStep?: { __args: {input: SubmitFormStepInput} }
    updateWorkflowRunStep?: (WorkflowActionGenqlSelection & { __args: {input: UpdateWorkflowRunStepInput} })
    duplicateWorkflowVersionStep?: (WorkflowVersionStepChangesGenqlSelection & { __args: {input: DuplicateWorkflowVersionStepInput} })
    createWorkflowVersionEdge?: (WorkflowVersionStepChangesGenqlSelection & { __args: {input: CreateWorkflowVersionEdgeInput} })
    deleteWorkflowVersionEdge?: (WorkflowVersionStepChangesGenqlSelection & { __args: {input: CreateWorkflowVersionEdgeInput} })
    createDraftFromWorkflowVersion?: (WorkflowVersionDTOGenqlSelection & { __args: {input: CreateDraftFromWorkflowVersionInput} })
    updateWorkflowVersionPositions?: { __args: {input: UpdateWorkflowVersionPositionsInput} }
    enablePostgresProxy?: PostgresCredentialsGenqlSelection
    disablePostgresProxy?: PostgresCredentialsGenqlSelection
    createPublicDomain?: (PublicDomainGenqlSelection & { __args: {domain: Scalars['String']} })
    deletePublicDomain?: { __args: {domain: Scalars['String']} }
    checkPublicDomainValidRecords?: (DomainValidRecordsGenqlSelection & { __args: {domain: Scalars['String']} })
    createEmailingDomain?: (EmailingDomainGenqlSelection & { __args: {domain: Scalars['String'], driver: EmailingDomainDriver} })
    deleteEmailingDomain?: { __args: {id: Scalars['String']} }
    verifyEmailingDomain?: (EmailingDomainGenqlSelection & { __args: {id: Scalars['String']} })
    createOneAppToken?: AppTokenGenqlSelection
    syncApplication?: { __args: {manifest: Scalars['JSON'], packageJson: Scalars['JSON'], yarnLock: Scalars['String']} }
    deleteApplication?: { __args: {packageJson: Scalars['JSON']} }
    updateOneApplicationVariable?: { __args: {key: Scalars['String'], value: Scalars['String'], applicationId: Scalars['UUID']} }
    createAttachments?: (AttachmentGenqlSelection & { __args?: {data?: (AttachmentCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createAttachment?: (AttachmentGenqlSelection & { __args?: {data?: (AttachmentCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateAttachment?: (AttachmentGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (AttachmentUpdateInput | null)} })
    deleteAttachment?: (AttachmentGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateAttachments?: (AttachmentGenqlSelection & { __args?: {data?: (AttachmentUpdateInput | null), filter?: (AttachmentFilterInput | null)} })
    deleteAttachments?: (AttachmentGenqlSelection & { __args?: {filter?: (AttachmentFilterInput | null)} })
    destroyAttachment?: (AttachmentGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyAttachments?: (AttachmentGenqlSelection & { __args?: {filter?: (AttachmentFilterInput | null)} })
    restoreAttachment?: (AttachmentGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreAttachments?: (AttachmentGenqlSelection & { __args?: {filter?: (AttachmentFilterInput | null)} })
    createBlocklists?: (BlocklistGenqlSelection & { __args?: {data?: (BlocklistCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createBlocklist?: (BlocklistGenqlSelection & { __args?: {data?: (BlocklistCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateBlocklist?: (BlocklistGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (BlocklistUpdateInput | null)} })
    deleteBlocklist?: (BlocklistGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateBlocklists?: (BlocklistGenqlSelection & { __args?: {data?: (BlocklistUpdateInput | null), filter?: (BlocklistFilterInput | null)} })
    deleteBlocklists?: (BlocklistGenqlSelection & { __args?: {filter?: (BlocklistFilterInput | null)} })
    destroyBlocklist?: (BlocklistGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyBlocklists?: (BlocklistGenqlSelection & { __args?: {filter?: (BlocklistFilterInput | null)} })
    restoreBlocklist?: (BlocklistGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreBlocklists?: (BlocklistGenqlSelection & { __args?: {filter?: (BlocklistFilterInput | null)} })
    createCalendarEvents?: (CalendarEventGenqlSelection & { __args?: {data?: (CalendarEventCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createCalendarEvent?: (CalendarEventGenqlSelection & { __args?: {data?: (CalendarEventCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateCalendarEvent?: (CalendarEventGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (CalendarEventUpdateInput | null)} })
    deleteCalendarEvent?: (CalendarEventGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateCalendarEvents?: (CalendarEventGenqlSelection & { __args?: {data?: (CalendarEventUpdateInput | null), filter?: (CalendarEventFilterInput | null)} })
    deleteCalendarEvents?: (CalendarEventGenqlSelection & { __args?: {filter?: (CalendarEventFilterInput | null)} })
    destroyCalendarEvent?: (CalendarEventGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyCalendarEvents?: (CalendarEventGenqlSelection & { __args?: {filter?: (CalendarEventFilterInput | null)} })
    restoreCalendarEvent?: (CalendarEventGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreCalendarEvents?: (CalendarEventGenqlSelection & { __args?: {filter?: (CalendarEventFilterInput | null)} })
    createCalendarChannels?: (CalendarChannelGenqlSelection & { __args?: {data?: (CalendarChannelCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createCalendarChannel?: (CalendarChannelGenqlSelection & { __args?: {data?: (CalendarChannelCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateCalendarChannel?: (CalendarChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (CalendarChannelUpdateInput | null)} })
    deleteCalendarChannel?: (CalendarChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateCalendarChannels?: (CalendarChannelGenqlSelection & { __args?: {data?: (CalendarChannelUpdateInput | null), filter?: (CalendarChannelFilterInput | null)} })
    deleteCalendarChannels?: (CalendarChannelGenqlSelection & { __args?: {filter?: (CalendarChannelFilterInput | null)} })
    destroyCalendarChannel?: (CalendarChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyCalendarChannels?: (CalendarChannelGenqlSelection & { __args?: {filter?: (CalendarChannelFilterInput | null)} })
    restoreCalendarChannel?: (CalendarChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreCalendarChannels?: (CalendarChannelGenqlSelection & { __args?: {filter?: (CalendarChannelFilterInput | null)} })
    createCalendarChannelEventAssociations?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {data?: (CalendarChannelEventAssociationCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createCalendarChannelEventAssociation?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {data?: (CalendarChannelEventAssociationCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateCalendarChannelEventAssociation?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (CalendarChannelEventAssociationUpdateInput | null)} })
    deleteCalendarChannelEventAssociation?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateCalendarChannelEventAssociations?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {data?: (CalendarChannelEventAssociationUpdateInput | null), filter?: (CalendarChannelEventAssociationFilterInput | null)} })
    deleteCalendarChannelEventAssociations?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {filter?: (CalendarChannelEventAssociationFilterInput | null)} })
    destroyCalendarChannelEventAssociation?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyCalendarChannelEventAssociations?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {filter?: (CalendarChannelEventAssociationFilterInput | null)} })
    restoreCalendarChannelEventAssociation?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreCalendarChannelEventAssociations?: (CalendarChannelEventAssociationGenqlSelection & { __args?: {filter?: (CalendarChannelEventAssociationFilterInput | null)} })
    createCalendarEventParticipants?: (CalendarEventParticipantGenqlSelection & { __args?: {data?: (CalendarEventParticipantCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createCalendarEventParticipant?: (CalendarEventParticipantGenqlSelection & { __args?: {data?: (CalendarEventParticipantCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateCalendarEventParticipant?: (CalendarEventParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (CalendarEventParticipantUpdateInput | null)} })
    deleteCalendarEventParticipant?: (CalendarEventParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateCalendarEventParticipants?: (CalendarEventParticipantGenqlSelection & { __args?: {data?: (CalendarEventParticipantUpdateInput | null), filter?: (CalendarEventParticipantFilterInput | null)} })
    deleteCalendarEventParticipants?: (CalendarEventParticipantGenqlSelection & { __args?: {filter?: (CalendarEventParticipantFilterInput | null)} })
    destroyCalendarEventParticipant?: (CalendarEventParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyCalendarEventParticipants?: (CalendarEventParticipantGenqlSelection & { __args?: {filter?: (CalendarEventParticipantFilterInput | null)} })
    restoreCalendarEventParticipant?: (CalendarEventParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreCalendarEventParticipants?: (CalendarEventParticipantGenqlSelection & { __args?: {filter?: (CalendarEventParticipantFilterInput | null)} })
    createCompanies?: (CompanyGenqlSelection & { __args?: {data?: (CompanyCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createCompany?: (CompanyGenqlSelection & { __args?: {data?: (CompanyCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateCompany?: (CompanyGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (CompanyUpdateInput | null)} })
    deleteCompany?: (CompanyGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateCompanies?: (CompanyGenqlSelection & { __args?: {data?: (CompanyUpdateInput | null), filter?: (CompanyFilterInput | null)} })
    deleteCompanies?: (CompanyGenqlSelection & { __args?: {filter?: (CompanyFilterInput | null)} })
    destroyCompany?: (CompanyGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyCompanies?: (CompanyGenqlSelection & { __args?: {filter?: (CompanyFilterInput | null)} })
    restoreCompany?: (CompanyGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreCompanies?: (CompanyGenqlSelection & { __args?: {filter?: (CompanyFilterInput | null)} })
    mergeCompanies?: (CompanyGenqlSelection & { __args?: {ids?: (Scalars['UUID'][] | null), conflictPriorityIndex?: (Scalars['Int'] | null), dryRun?: (Scalars['Boolean'] | null)} })
    createConnectedAccounts?: (ConnectedAccountGenqlSelection & { __args?: {data?: (ConnectedAccountCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createConnectedAccount?: (ConnectedAccountGenqlSelection & { __args?: {data?: (ConnectedAccountCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateConnectedAccount?: (ConnectedAccountGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (ConnectedAccountUpdateInput | null)} })
    deleteConnectedAccount?: (ConnectedAccountGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateConnectedAccounts?: (ConnectedAccountGenqlSelection & { __args?: {data?: (ConnectedAccountUpdateInput | null), filter?: (ConnectedAccountFilterInput | null)} })
    deleteConnectedAccounts?: (ConnectedAccountGenqlSelection & { __args?: {filter?: (ConnectedAccountFilterInput | null)} })
    destroyConnectedAccount?: (ConnectedAccountGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyConnectedAccounts?: (ConnectedAccountGenqlSelection & { __args?: {filter?: (ConnectedAccountFilterInput | null)} })
    restoreConnectedAccount?: (ConnectedAccountGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreConnectedAccounts?: (ConnectedAccountGenqlSelection & { __args?: {filter?: (ConnectedAccountFilterInput | null)} })
    createDashboards?: (DashboardGenqlSelection & { __args?: {data?: (DashboardCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createDashboard?: (DashboardGenqlSelection & { __args?: {data?: (DashboardCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateDashboard?: (DashboardGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (DashboardUpdateInput | null)} })
    deleteDashboard?: (DashboardGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateDashboards?: (DashboardGenqlSelection & { __args?: {data?: (DashboardUpdateInput | null), filter?: (DashboardFilterInput | null)} })
    deleteDashboards?: (DashboardGenqlSelection & { __args?: {filter?: (DashboardFilterInput | null)} })
    destroyDashboard?: (DashboardGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyDashboards?: (DashboardGenqlSelection & { __args?: {filter?: (DashboardFilterInput | null)} })
    restoreDashboard?: (DashboardGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreDashboards?: (DashboardGenqlSelection & { __args?: {filter?: (DashboardFilterInput | null)} })
    createFavorites?: (FavoriteGenqlSelection & { __args?: {data?: (FavoriteCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createFavorite?: (FavoriteGenqlSelection & { __args?: {data?: (FavoriteCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateFavorite?: (FavoriteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (FavoriteUpdateInput | null)} })
    deleteFavorite?: (FavoriteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateFavorites?: (FavoriteGenqlSelection & { __args?: {data?: (FavoriteUpdateInput | null), filter?: (FavoriteFilterInput | null)} })
    deleteFavorites?: (FavoriteGenqlSelection & { __args?: {filter?: (FavoriteFilterInput | null)} })
    destroyFavorite?: (FavoriteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyFavorites?: (FavoriteGenqlSelection & { __args?: {filter?: (FavoriteFilterInput | null)} })
    restoreFavorite?: (FavoriteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreFavorites?: (FavoriteGenqlSelection & { __args?: {filter?: (FavoriteFilterInput | null)} })
    createFavoriteFolders?: (FavoriteFolderGenqlSelection & { __args?: {data?: (FavoriteFolderCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createFavoriteFolder?: (FavoriteFolderGenqlSelection & { __args?: {data?: (FavoriteFolderCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateFavoriteFolder?: (FavoriteFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (FavoriteFolderUpdateInput | null)} })
    deleteFavoriteFolder?: (FavoriteFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateFavoriteFolders?: (FavoriteFolderGenqlSelection & { __args?: {data?: (FavoriteFolderUpdateInput | null), filter?: (FavoriteFolderFilterInput | null)} })
    deleteFavoriteFolders?: (FavoriteFolderGenqlSelection & { __args?: {filter?: (FavoriteFolderFilterInput | null)} })
    destroyFavoriteFolder?: (FavoriteFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyFavoriteFolders?: (FavoriteFolderGenqlSelection & { __args?: {filter?: (FavoriteFolderFilterInput | null)} })
    restoreFavoriteFolder?: (FavoriteFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreFavoriteFolders?: (FavoriteFolderGenqlSelection & { __args?: {filter?: (FavoriteFolderFilterInput | null)} })
    createTimelineActivities?: (TimelineActivityGenqlSelection & { __args?: {data?: (TimelineActivityCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createTimelineActivity?: (TimelineActivityGenqlSelection & { __args?: {data?: (TimelineActivityCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateTimelineActivity?: (TimelineActivityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (TimelineActivityUpdateInput | null)} })
    deleteTimelineActivity?: (TimelineActivityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateTimelineActivities?: (TimelineActivityGenqlSelection & { __args?: {data?: (TimelineActivityUpdateInput | null), filter?: (TimelineActivityFilterInput | null)} })
    deleteTimelineActivities?: (TimelineActivityGenqlSelection & { __args?: {filter?: (TimelineActivityFilterInput | null)} })
    destroyTimelineActivity?: (TimelineActivityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyTimelineActivities?: (TimelineActivityGenqlSelection & { __args?: {filter?: (TimelineActivityFilterInput | null)} })
    restoreTimelineActivity?: (TimelineActivityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreTimelineActivities?: (TimelineActivityGenqlSelection & { __args?: {filter?: (TimelineActivityFilterInput | null)} })
    createViewFields?: (ViewFieldGenqlSelection & { __args?: {data?: (ViewFieldCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createViewField?: (ViewFieldGenqlSelection & { __args?: {data?: (ViewFieldCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateViewField?: (ViewFieldGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (ViewFieldUpdateInput | null)} })
    deleteViewField?: (ViewFieldGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateViewFields?: (ViewFieldGenqlSelection & { __args?: {data?: (ViewFieldUpdateInput | null), filter?: (ViewFieldFilterInput | null)} })
    deleteViewFields?: (ViewFieldGenqlSelection & { __args?: {filter?: (ViewFieldFilterInput | null)} })
    destroyViewField?: (ViewFieldGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyViewFields?: (ViewFieldGenqlSelection & { __args?: {filter?: (ViewFieldFilterInput | null)} })
    restoreViewField?: (ViewFieldGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreViewFields?: (ViewFieldGenqlSelection & { __args?: {filter?: (ViewFieldFilterInput | null)} })
    createViewFilterGroups?: (ViewFilterGroupGenqlSelection & { __args?: {data?: (ViewFilterGroupCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createViewFilterGroup?: (ViewFilterGroupGenqlSelection & { __args?: {data?: (ViewFilterGroupCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateViewFilterGroup?: (ViewFilterGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (ViewFilterGroupUpdateInput | null)} })
    deleteViewFilterGroup?: (ViewFilterGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateViewFilterGroups?: (ViewFilterGroupGenqlSelection & { __args?: {data?: (ViewFilterGroupUpdateInput | null), filter?: (ViewFilterGroupFilterInput | null)} })
    deleteViewFilterGroups?: (ViewFilterGroupGenqlSelection & { __args?: {filter?: (ViewFilterGroupFilterInput | null)} })
    destroyViewFilterGroup?: (ViewFilterGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyViewFilterGroups?: (ViewFilterGroupGenqlSelection & { __args?: {filter?: (ViewFilterGroupFilterInput | null)} })
    restoreViewFilterGroup?: (ViewFilterGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreViewFilterGroups?: (ViewFilterGroupGenqlSelection & { __args?: {filter?: (ViewFilterGroupFilterInput | null)} })
    createViewGroups?: (ViewGroupGenqlSelection & { __args?: {data?: (ViewGroupCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createViewGroup?: (ViewGroupGenqlSelection & { __args?: {data?: (ViewGroupCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateViewGroup?: (ViewGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (ViewGroupUpdateInput | null)} })
    deleteViewGroup?: (ViewGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateViewGroups?: (ViewGroupGenqlSelection & { __args?: {data?: (ViewGroupUpdateInput | null), filter?: (ViewGroupFilterInput | null)} })
    deleteViewGroups?: (ViewGroupGenqlSelection & { __args?: {filter?: (ViewGroupFilterInput | null)} })
    destroyViewGroup?: (ViewGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyViewGroups?: (ViewGroupGenqlSelection & { __args?: {filter?: (ViewGroupFilterInput | null)} })
    restoreViewGroup?: (ViewGroupGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreViewGroups?: (ViewGroupGenqlSelection & { __args?: {filter?: (ViewGroupFilterInput | null)} })
    createViewFilters?: (ViewFilterGenqlSelection & { __args?: {data?: (ViewFilterCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createViewFilter?: (ViewFilterGenqlSelection & { __args?: {data?: (ViewFilterCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateViewFilter?: (ViewFilterGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (ViewFilterUpdateInput | null)} })
    deleteViewFilter?: (ViewFilterGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateViewFilters?: (ViewFilterGenqlSelection & { __args?: {data?: (ViewFilterUpdateInput | null), filter?: (ViewFilterFilterInput | null)} })
    deleteViewFilters?: (ViewFilterGenqlSelection & { __args?: {filter?: (ViewFilterFilterInput | null)} })
    destroyViewFilter?: (ViewFilterGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyViewFilters?: (ViewFilterGenqlSelection & { __args?: {filter?: (ViewFilterFilterInput | null)} })
    restoreViewFilter?: (ViewFilterGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreViewFilters?: (ViewFilterGenqlSelection & { __args?: {filter?: (ViewFilterFilterInput | null)} })
    createViewSorts?: (ViewSortGenqlSelection & { __args?: {data?: (ViewSortCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createViewSort?: (ViewSortGenqlSelection & { __args?: {data?: (ViewSortCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateViewSort?: (ViewSortGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (ViewSortUpdateInput | null)} })
    deleteViewSort?: (ViewSortGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateViewSorts?: (ViewSortGenqlSelection & { __args?: {data?: (ViewSortUpdateInput | null), filter?: (ViewSortFilterInput | null)} })
    deleteViewSorts?: (ViewSortGenqlSelection & { __args?: {filter?: (ViewSortFilterInput | null)} })
    destroyViewSort?: (ViewSortGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyViewSorts?: (ViewSortGenqlSelection & { __args?: {filter?: (ViewSortFilterInput | null)} })
    restoreViewSort?: (ViewSortGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreViewSorts?: (ViewSortGenqlSelection & { __args?: {filter?: (ViewSortFilterInput | null)} })
    createViews?: (ViewGenqlSelection & { __args?: {data?: (ViewCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createView?: (ViewGenqlSelection & { __args?: {data?: (ViewCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateView?: (ViewGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (ViewUpdateInput | null)} })
    deleteView?: (ViewGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateViews?: (ViewGenqlSelection & { __args?: {data?: (ViewUpdateInput | null), filter?: (ViewFilterInput | null)} })
    deleteViews?: (ViewGenqlSelection & { __args?: {filter?: (ViewFilterInput | null)} })
    destroyView?: (ViewGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyViews?: (ViewGenqlSelection & { __args?: {filter?: (ViewFilterInput | null)} })
    restoreView?: (ViewGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreViews?: (ViewGenqlSelection & { __args?: {filter?: (ViewFilterInput | null)} })
    createWorkflows?: (WorkflowGenqlSelection & { __args?: {data?: (WorkflowCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createWorkflow?: (WorkflowGenqlSelection & { __args?: {data?: (WorkflowCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateWorkflow?: (WorkflowGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (WorkflowUpdateInput | null)} })
    deleteWorkflow?: (WorkflowGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateWorkflows?: (WorkflowGenqlSelection & { __args?: {data?: (WorkflowUpdateInput | null), filter?: (WorkflowFilterInput | null)} })
    deleteWorkflows?: (WorkflowGenqlSelection & { __args?: {filter?: (WorkflowFilterInput | null)} })
    destroyWorkflow?: (WorkflowGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyWorkflows?: (WorkflowGenqlSelection & { __args?: {filter?: (WorkflowFilterInput | null)} })
    restoreWorkflow?: (WorkflowGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreWorkflows?: (WorkflowGenqlSelection & { __args?: {filter?: (WorkflowFilterInput | null)} })
    createWorkflowVersions?: (WorkflowVersionGenqlSelection & { __args?: {data?: (WorkflowVersionCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createWorkflowVersion?: (WorkflowVersionGenqlSelection & { __args?: {data?: (WorkflowVersionCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateWorkflowVersion?: (WorkflowVersionGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (WorkflowVersionUpdateInput | null)} })
    deleteWorkflowVersion?: (WorkflowVersionGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateWorkflowVersions?: (WorkflowVersionGenqlSelection & { __args?: {data?: (WorkflowVersionUpdateInput | null), filter?: (WorkflowVersionFilterInput | null)} })
    deleteWorkflowVersions?: (WorkflowVersionGenqlSelection & { __args?: {filter?: (WorkflowVersionFilterInput | null)} })
    destroyWorkflowVersion?: (WorkflowVersionGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyWorkflowVersions?: (WorkflowVersionGenqlSelection & { __args?: {filter?: (WorkflowVersionFilterInput | null)} })
    restoreWorkflowVersion?: (WorkflowVersionGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreWorkflowVersions?: (WorkflowVersionGenqlSelection & { __args?: {filter?: (WorkflowVersionFilterInput | null)} })
    createWorkflowRuns?: (WorkflowRunGenqlSelection & { __args?: {data?: (WorkflowRunCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createWorkflowRun?: (WorkflowRunGenqlSelection & { __args?: {data?: (WorkflowRunCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateWorkflowRun?: (WorkflowRunGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (WorkflowRunUpdateInput | null)} })
    deleteWorkflowRun?: (WorkflowRunGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateWorkflowRuns?: (WorkflowRunGenqlSelection & { __args?: {data?: (WorkflowRunUpdateInput | null), filter?: (WorkflowRunFilterInput | null)} })
    deleteWorkflowRuns?: (WorkflowRunGenqlSelection & { __args?: {filter?: (WorkflowRunFilterInput | null)} })
    destroyWorkflowRun?: (WorkflowRunGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyWorkflowRuns?: (WorkflowRunGenqlSelection & { __args?: {filter?: (WorkflowRunFilterInput | null)} })
    restoreWorkflowRun?: (WorkflowRunGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreWorkflowRuns?: (WorkflowRunGenqlSelection & { __args?: {filter?: (WorkflowRunFilterInput | null)} })
    createWorkflowAutomatedTriggers?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {data?: (WorkflowAutomatedTriggerCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createWorkflowAutomatedTrigger?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {data?: (WorkflowAutomatedTriggerCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateWorkflowAutomatedTrigger?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (WorkflowAutomatedTriggerUpdateInput | null)} })
    deleteWorkflowAutomatedTrigger?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateWorkflowAutomatedTriggers?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {data?: (WorkflowAutomatedTriggerUpdateInput | null), filter?: (WorkflowAutomatedTriggerFilterInput | null)} })
    deleteWorkflowAutomatedTriggers?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {filter?: (WorkflowAutomatedTriggerFilterInput | null)} })
    destroyWorkflowAutomatedTrigger?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyWorkflowAutomatedTriggers?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {filter?: (WorkflowAutomatedTriggerFilterInput | null)} })
    restoreWorkflowAutomatedTrigger?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreWorkflowAutomatedTriggers?: (WorkflowAutomatedTriggerGenqlSelection & { __args?: {filter?: (WorkflowAutomatedTriggerFilterInput | null)} })
    createWorkspaceMembers?: (WorkspaceMemberGenqlSelection & { __args?: {data?: (WorkspaceMemberCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createWorkspaceMember?: (WorkspaceMemberGenqlSelection & { __args?: {data?: (WorkspaceMemberCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateWorkspaceMember?: (WorkspaceMemberGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (WorkspaceMemberUpdateInput | null)} })
    deleteWorkspaceMember?: (WorkspaceMemberGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateWorkspaceMembers?: (WorkspaceMemberGenqlSelection & { __args?: {data?: (WorkspaceMemberUpdateInput | null), filter?: (WorkspaceMemberFilterInput | null)} })
    deleteWorkspaceMembers?: (WorkspaceMemberGenqlSelection & { __args?: {filter?: (WorkspaceMemberFilterInput | null)} })
    destroyWorkspaceMember?: (WorkspaceMemberGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyWorkspaceMembers?: (WorkspaceMemberGenqlSelection & { __args?: {filter?: (WorkspaceMemberFilterInput | null)} })
    restoreWorkspaceMember?: (WorkspaceMemberGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreWorkspaceMembers?: (WorkspaceMemberGenqlSelection & { __args?: {filter?: (WorkspaceMemberFilterInput | null)} })
    createMessages?: (MessageGenqlSelection & { __args?: {data?: (MessageCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createMessage?: (MessageGenqlSelection & { __args?: {data?: (MessageCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateMessage?: (MessageGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (MessageUpdateInput | null)} })
    deleteMessage?: (MessageGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateMessages?: (MessageGenqlSelection & { __args?: {data?: (MessageUpdateInput | null), filter?: (MessageFilterInput | null)} })
    deleteMessages?: (MessageGenqlSelection & { __args?: {filter?: (MessageFilterInput | null)} })
    destroyMessage?: (MessageGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyMessages?: (MessageGenqlSelection & { __args?: {filter?: (MessageFilterInput | null)} })
    restoreMessage?: (MessageGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreMessages?: (MessageGenqlSelection & { __args?: {filter?: (MessageFilterInput | null)} })
    createMessageThreads?: (MessageThreadGenqlSelection & { __args?: {data?: (MessageThreadCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createMessageThread?: (MessageThreadGenqlSelection & { __args?: {data?: (MessageThreadCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateMessageThread?: (MessageThreadGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (MessageThreadUpdateInput | null)} })
    deleteMessageThread?: (MessageThreadGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateMessageThreads?: (MessageThreadGenqlSelection & { __args?: {data?: (MessageThreadUpdateInput | null), filter?: (MessageThreadFilterInput | null)} })
    deleteMessageThreads?: (MessageThreadGenqlSelection & { __args?: {filter?: (MessageThreadFilterInput | null)} })
    destroyMessageThread?: (MessageThreadGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyMessageThreads?: (MessageThreadGenqlSelection & { __args?: {filter?: (MessageThreadFilterInput | null)} })
    restoreMessageThread?: (MessageThreadGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreMessageThreads?: (MessageThreadGenqlSelection & { __args?: {filter?: (MessageThreadFilterInput | null)} })
    createMessageChannels?: (MessageChannelGenqlSelection & { __args?: {data?: (MessageChannelCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createMessageChannel?: (MessageChannelGenqlSelection & { __args?: {data?: (MessageChannelCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateMessageChannel?: (MessageChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (MessageChannelUpdateInput | null)} })
    deleteMessageChannel?: (MessageChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateMessageChannels?: (MessageChannelGenqlSelection & { __args?: {data?: (MessageChannelUpdateInput | null), filter?: (MessageChannelFilterInput | null)} })
    deleteMessageChannels?: (MessageChannelGenqlSelection & { __args?: {filter?: (MessageChannelFilterInput | null)} })
    destroyMessageChannel?: (MessageChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyMessageChannels?: (MessageChannelGenqlSelection & { __args?: {filter?: (MessageChannelFilterInput | null)} })
    restoreMessageChannel?: (MessageChannelGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreMessageChannels?: (MessageChannelGenqlSelection & { __args?: {filter?: (MessageChannelFilterInput | null)} })
    createMessageParticipants?: (MessageParticipantGenqlSelection & { __args?: {data?: (MessageParticipantCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createMessageParticipant?: (MessageParticipantGenqlSelection & { __args?: {data?: (MessageParticipantCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateMessageParticipant?: (MessageParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (MessageParticipantUpdateInput | null)} })
    deleteMessageParticipant?: (MessageParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateMessageParticipants?: (MessageParticipantGenqlSelection & { __args?: {data?: (MessageParticipantUpdateInput | null), filter?: (MessageParticipantFilterInput | null)} })
    deleteMessageParticipants?: (MessageParticipantGenqlSelection & { __args?: {filter?: (MessageParticipantFilterInput | null)} })
    destroyMessageParticipant?: (MessageParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyMessageParticipants?: (MessageParticipantGenqlSelection & { __args?: {filter?: (MessageParticipantFilterInput | null)} })
    restoreMessageParticipant?: (MessageParticipantGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreMessageParticipants?: (MessageParticipantGenqlSelection & { __args?: {filter?: (MessageParticipantFilterInput | null)} })
    createMessageFolders?: (MessageFolderGenqlSelection & { __args?: {data?: (MessageFolderCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createMessageFolder?: (MessageFolderGenqlSelection & { __args?: {data?: (MessageFolderCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateMessageFolder?: (MessageFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (MessageFolderUpdateInput | null)} })
    deleteMessageFolder?: (MessageFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateMessageFolders?: (MessageFolderGenqlSelection & { __args?: {data?: (MessageFolderUpdateInput | null), filter?: (MessageFolderFilterInput | null)} })
    deleteMessageFolders?: (MessageFolderGenqlSelection & { __args?: {filter?: (MessageFolderFilterInput | null)} })
    destroyMessageFolder?: (MessageFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyMessageFolders?: (MessageFolderGenqlSelection & { __args?: {filter?: (MessageFolderFilterInput | null)} })
    restoreMessageFolder?: (MessageFolderGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreMessageFolders?: (MessageFolderGenqlSelection & { __args?: {filter?: (MessageFolderFilterInput | null)} })
    createMessageChannelMessageAssociations?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {data?: (MessageChannelMessageAssociationCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createMessageChannelMessageAssociation?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {data?: (MessageChannelMessageAssociationCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateMessageChannelMessageAssociation?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (MessageChannelMessageAssociationUpdateInput | null)} })
    deleteMessageChannelMessageAssociation?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateMessageChannelMessageAssociations?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {data?: (MessageChannelMessageAssociationUpdateInput | null), filter?: (MessageChannelMessageAssociationFilterInput | null)} })
    deleteMessageChannelMessageAssociations?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {filter?: (MessageChannelMessageAssociationFilterInput | null)} })
    destroyMessageChannelMessageAssociation?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyMessageChannelMessageAssociations?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {filter?: (MessageChannelMessageAssociationFilterInput | null)} })
    restoreMessageChannelMessageAssociation?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreMessageChannelMessageAssociations?: (MessageChannelMessageAssociationGenqlSelection & { __args?: {filter?: (MessageChannelMessageAssociationFilterInput | null)} })
    createNotes?: (NoteGenqlSelection & { __args?: {data?: (NoteCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createNote?: (NoteGenqlSelection & { __args?: {data?: (NoteCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateNote?: (NoteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (NoteUpdateInput | null)} })
    deleteNote?: (NoteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateNotes?: (NoteGenqlSelection & { __args?: {data?: (NoteUpdateInput | null), filter?: (NoteFilterInput | null)} })
    deleteNotes?: (NoteGenqlSelection & { __args?: {filter?: (NoteFilterInput | null)} })
    destroyNote?: (NoteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyNotes?: (NoteGenqlSelection & { __args?: {filter?: (NoteFilterInput | null)} })
    restoreNote?: (NoteGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreNotes?: (NoteGenqlSelection & { __args?: {filter?: (NoteFilterInput | null)} })
    createNoteTargets?: (NoteTargetGenqlSelection & { __args?: {data?: (NoteTargetCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createNoteTarget?: (NoteTargetGenqlSelection & { __args?: {data?: (NoteTargetCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateNoteTarget?: (NoteTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (NoteTargetUpdateInput | null)} })
    deleteNoteTarget?: (NoteTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateNoteTargets?: (NoteTargetGenqlSelection & { __args?: {data?: (NoteTargetUpdateInput | null), filter?: (NoteTargetFilterInput | null)} })
    deleteNoteTargets?: (NoteTargetGenqlSelection & { __args?: {filter?: (NoteTargetFilterInput | null)} })
    destroyNoteTarget?: (NoteTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyNoteTargets?: (NoteTargetGenqlSelection & { __args?: {filter?: (NoteTargetFilterInput | null)} })
    restoreNoteTarget?: (NoteTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreNoteTargets?: (NoteTargetGenqlSelection & { __args?: {filter?: (NoteTargetFilterInput | null)} })
    createOpportunities?: (OpportunityGenqlSelection & { __args?: {data?: (OpportunityCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createOpportunity?: (OpportunityGenqlSelection & { __args?: {data?: (OpportunityCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateOpportunity?: (OpportunityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (OpportunityUpdateInput | null)} })
    deleteOpportunity?: (OpportunityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateOpportunities?: (OpportunityGenqlSelection & { __args?: {data?: (OpportunityUpdateInput | null), filter?: (OpportunityFilterInput | null)} })
    deleteOpportunities?: (OpportunityGenqlSelection & { __args?: {filter?: (OpportunityFilterInput | null)} })
    destroyOpportunity?: (OpportunityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyOpportunities?: (OpportunityGenqlSelection & { __args?: {filter?: (OpportunityFilterInput | null)} })
    restoreOpportunity?: (OpportunityGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreOpportunities?: (OpportunityGenqlSelection & { __args?: {filter?: (OpportunityFilterInput | null)} })
    createPeople?: (PersonGenqlSelection & { __args?: {data?: (PersonCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createPerson?: (PersonGenqlSelection & { __args?: {data?: (PersonCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updatePerson?: (PersonGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (PersonUpdateInput | null)} })
    deletePerson?: (PersonGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updatePeople?: (PersonGenqlSelection & { __args?: {data?: (PersonUpdateInput | null), filter?: (PersonFilterInput | null)} })
    deletePeople?: (PersonGenqlSelection & { __args?: {filter?: (PersonFilterInput | null)} })
    destroyPerson?: (PersonGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyPeople?: (PersonGenqlSelection & { __args?: {filter?: (PersonFilterInput | null)} })
    restorePerson?: (PersonGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restorePeople?: (PersonGenqlSelection & { __args?: {filter?: (PersonFilterInput | null)} })
    mergePeople?: (PersonGenqlSelection & { __args?: {ids?: (Scalars['UUID'][] | null), conflictPriorityIndex?: (Scalars['Int'] | null), dryRun?: (Scalars['Boolean'] | null)} })
    createTasks?: (TaskGenqlSelection & { __args?: {data?: (TaskCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createTask?: (TaskGenqlSelection & { __args?: {data?: (TaskCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateTask?: (TaskGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (TaskUpdateInput | null)} })
    deleteTask?: (TaskGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateTasks?: (TaskGenqlSelection & { __args?: {data?: (TaskUpdateInput | null), filter?: (TaskFilterInput | null)} })
    deleteTasks?: (TaskGenqlSelection & { __args?: {filter?: (TaskFilterInput | null)} })
    destroyTask?: (TaskGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyTasks?: (TaskGenqlSelection & { __args?: {filter?: (TaskFilterInput | null)} })
    restoreTask?: (TaskGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreTasks?: (TaskGenqlSelection & { __args?: {filter?: (TaskFilterInput | null)} })
    createTaskTargets?: (TaskTargetGenqlSelection & { __args?: {data?: (TaskTargetCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createTaskTarget?: (TaskTargetGenqlSelection & { __args?: {data?: (TaskTargetCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateTaskTarget?: (TaskTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (TaskTargetUpdateInput | null)} })
    deleteTaskTarget?: (TaskTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateTaskTargets?: (TaskTargetGenqlSelection & { __args?: {data?: (TaskTargetUpdateInput | null), filter?: (TaskTargetFilterInput | null)} })
    deleteTaskTargets?: (TaskTargetGenqlSelection & { __args?: {filter?: (TaskTargetFilterInput | null)} })
    destroyTaskTarget?: (TaskTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyTaskTargets?: (TaskTargetGenqlSelection & { __args?: {filter?: (TaskTargetFilterInput | null)} })
    restoreTaskTarget?: (TaskTargetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreTaskTargets?: (TaskTargetGenqlSelection & { __args?: {filter?: (TaskTargetFilterInput | null)} })
    createPets?: (PetGenqlSelection & { __args?: {data?: (PetCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createPet?: (PetGenqlSelection & { __args?: {data?: (PetCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updatePet?: (PetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (PetUpdateInput | null)} })
    deletePet?: (PetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updatePets?: (PetGenqlSelection & { __args?: {data?: (PetUpdateInput | null), filter?: (PetFilterInput | null)} })
    deletePets?: (PetGenqlSelection & { __args?: {filter?: (PetFilterInput | null)} })
    destroyPet?: (PetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyPets?: (PetGenqlSelection & { __args?: {filter?: (PetFilterInput | null)} })
    restorePet?: (PetGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restorePets?: (PetGenqlSelection & { __args?: {filter?: (PetFilterInput | null)} })
    createRockets?: (RocketGenqlSelection & { __args?: {data?: (RocketCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createRocket?: (RocketGenqlSelection & { __args?: {data?: (RocketCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateRocket?: (RocketGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (RocketUpdateInput | null)} })
    deleteRocket?: (RocketGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateRockets?: (RocketGenqlSelection & { __args?: {data?: (RocketUpdateInput | null), filter?: (RocketFilterInput | null)} })
    deleteRockets?: (RocketGenqlSelection & { __args?: {filter?: (RocketFilterInput | null)} })
    destroyRocket?: (RocketGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroyRockets?: (RocketGenqlSelection & { __args?: {filter?: (RocketFilterInput | null)} })
    restoreRocket?: (RocketGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreRockets?: (RocketGenqlSelection & { __args?: {filter?: (RocketFilterInput | null)} })
    createSurveyResults?: (SurveyResultGenqlSelection & { __args?: {data?: (SurveyResultCreateInput[] | null), upsert?: (Scalars['Boolean'] | null)} })
    createSurveyResult?: (SurveyResultGenqlSelection & { __args?: {data?: (SurveyResultCreateInput | null), upsert?: (Scalars['Boolean'] | null)} })
    updateSurveyResult?: (SurveyResultGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null), data?: (SurveyResultUpdateInput | null)} })
    deleteSurveyResult?: (SurveyResultGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    updateSurveyResults?: (SurveyResultGenqlSelection & { __args?: {data?: (SurveyResultUpdateInput | null), filter?: (SurveyResultFilterInput | null)} })
    deleteSurveyResults?: (SurveyResultGenqlSelection & { __args?: {filter?: (SurveyResultFilterInput | null)} })
    destroySurveyResult?: (SurveyResultGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    destroySurveyResults?: (SurveyResultGenqlSelection & { __args?: {filter?: (SurveyResultFilterInput | null)} })
    restoreSurveyResult?: (SurveyResultGenqlSelection & { __args?: {id?: (Scalars['UUID'] | null)} })
    restoreSurveyResults?: (SurveyResultGenqlSelection & { __args?: {filter?: (SurveyResultFilterInput | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DeleteOneObjectInput {
/** The id of the record to delete. */
id: Scalars['UUID']}

export interface UpdateOneObjectInput {update: UpdateObjectPayload,
/** The id of the object to update */
id: Scalars['UUID']}

export interface UpdateObjectPayload {labelSingular?: (Scalars['String'] | null),labelPlural?: (Scalars['String'] | null),nameSingular?: (Scalars['String'] | null),namePlural?: (Scalars['String'] | null),description?: (Scalars['String'] | null),icon?: (Scalars['String'] | null),shortcut?: (Scalars['String'] | null),isActive?: (Scalars['Boolean'] | null),labelIdentifierFieldMetadataId?: (Scalars['UUID'] | null),imageIdentifierFieldMetadataId?: (Scalars['UUID'] | null),isLabelSyncedWithName?: (Scalars['Boolean'] | null)}

export interface UpdateViewFieldInput {
/** The id of the view field to update */
id: Scalars['UUID'],
/** The view field to update */
update: UpdateViewFieldInputUpdates}

export interface UpdateViewFieldInputUpdates {isVisible?: (Scalars['Boolean'] | null),size?: (Scalars['Float'] | null),position?: (Scalars['Float'] | null),aggregateOperation?: (AggregateOperations | null)}

export interface CreateViewFieldInput {id?: (Scalars['UUID'] | null),fieldMetadataId: Scalars['UUID'],viewId: Scalars['UUID'],isVisible?: (Scalars['Boolean'] | null),size?: (Scalars['Float'] | null),position?: (Scalars['Float'] | null),aggregateOperation?: (AggregateOperations | null)}

export interface DeleteViewFieldInput {
/** The id of the view field to delete. */
id: Scalars['UUID']}

export interface DestroyViewFieldInput {
/** The id of the view field to destroy. */
id: Scalars['UUID']}

export interface CreateViewInput {id?: (Scalars['UUID'] | null),name: Scalars['String'],objectMetadataId: Scalars['UUID'],type?: (ViewType | null),key?: (ViewKey | null),icon: Scalars['String'],position?: (Scalars['Float'] | null),isCompact?: (Scalars['Boolean'] | null),openRecordIn?: (ViewOpenRecordIn | null),kanbanAggregateOperation?: (AggregateOperations | null),kanbanAggregateOperationFieldMetadataId?: (Scalars['UUID'] | null),anyFieldFilterValue?: (Scalars['String'] | null),calendarLayout?: (ViewCalendarLayout | null),calendarFieldMetadataId?: (Scalars['UUID'] | null)}

export interface UpdateViewInput {id?: (Scalars['UUID'] | null),name?: (Scalars['String'] | null),type?: (ViewType | null),icon?: (Scalars['String'] | null),position?: (Scalars['Float'] | null),isCompact?: (Scalars['Boolean'] | null),openRecordIn?: (ViewOpenRecordIn | null),kanbanAggregateOperation?: (AggregateOperations | null),kanbanAggregateOperationFieldMetadataId?: (Scalars['UUID'] | null),anyFieldFilterValue?: (Scalars['String'] | null),calendarLayout?: (ViewCalendarLayout | null),calendarFieldMetadataId?: (Scalars['UUID'] | null)}

export interface CreateViewSortInput {id?: (Scalars['UUID'] | null),fieldMetadataId: Scalars['UUID'],direction?: (ViewSortDirection | null),viewId: Scalars['UUID']}

export interface UpdateViewSortInput {id?: (Scalars['UUID'] | null),fieldMetadataId?: (Scalars['UUID'] | null),direction?: (ViewSortDirection | null),viewId?: (Scalars['UUID'] | null)}

export interface CreateViewGroupInput {id?: (Scalars['UUID'] | null),fieldMetadataId: Scalars['UUID'],isVisible?: (Scalars['Boolean'] | null),fieldValue: Scalars['String'],position?: (Scalars['Float'] | null),viewId: Scalars['UUID']}

export interface UpdateViewGroupInput {
/** The id of the view group to update */
id: Scalars['UUID'],
/** The view group to update */
update: UpdateViewGroupInputUpdates}

export interface UpdateViewGroupInputUpdates {fieldMetadataId?: (Scalars['UUID'] | null),isVisible?: (Scalars['Boolean'] | null),fieldValue?: (Scalars['String'] | null),position?: (Scalars['Float'] | null)}

export interface DeleteViewGroupInput {
/** The id of the view group to delete. */
id: Scalars['UUID']}

export interface DestroyViewGroupInput {
/** The id of the view group to destroy. */
id: Scalars['UUID']}

export interface CreateViewFilterGroupInput {id?: (Scalars['UUID'] | null),parentViewFilterGroupId?: (Scalars['UUID'] | null),logicalOperator?: (ViewFilterGroupLogicalOperator | null),positionInViewFilterGroup?: (Scalars['Float'] | null),viewId: Scalars['UUID']}

export interface UpdateViewFilterGroupInput {id?: (Scalars['UUID'] | null),parentViewFilterGroupId?: (Scalars['UUID'] | null),logicalOperator?: (ViewFilterGroupLogicalOperator | null),positionInViewFilterGroup?: (Scalars['Float'] | null),viewId?: (Scalars['UUID'] | null)}

export interface CreateViewFilterInput {id?: (Scalars['UUID'] | null),fieldMetadataId: Scalars['UUID'],operand?: (ViewFilterOperand | null),value: Scalars['JSON'],viewFilterGroupId?: (Scalars['UUID'] | null),positionInViewFilterGroup?: (Scalars['Float'] | null),subFieldName?: (Scalars['String'] | null),viewId: Scalars['UUID']}

export interface UpdateViewFilterInput {
/** The id of the view filter to update */
id: Scalars['UUID'],
/** The view filter to update */
update: UpdateViewFilterInputUpdates}

export interface UpdateViewFilterInputUpdates {fieldMetadataId?: (Scalars['UUID'] | null),operand?: (ViewFilterOperand | null),value?: (Scalars['JSON'] | null),viewFilterGroupId?: (Scalars['UUID'] | null),positionInViewFilterGroup?: (Scalars['Float'] | null),subFieldName?: (Scalars['String'] | null)}

export interface DeleteViewFilterInput {
/** The id of the view filter to delete. */
id: Scalars['UUID']}

export interface DestroyViewFilterInput {
/** The id of the view filter to destroy. */
id: Scalars['UUID']}

export interface UpdateServerlessFunctionInput {
/** Id of the serverless function to update */
id: Scalars['UUID'],
/** The serverless function updates */
update: UpdateServerlessFunctionInputUpdates}

export interface UpdateServerlessFunctionInputUpdates {name: Scalars['String'],description?: (Scalars['String'] | null),timeoutSeconds?: (Scalars['Float'] | null),code: Scalars['JSON']}

export interface CreateServerlessFunctionInput {name: Scalars['String'],description?: (Scalars['String'] | null),timeoutSeconds?: (Scalars['Float'] | null),code?: (Scalars['JSON'] | null)}

export interface ExecuteServerlessFunctionInput {
/** Id of the serverless function to execute */
id: Scalars['UUID'],
/** Payload in JSON format */
payload: Scalars['JSON'],
/** Version of the serverless function to execute */
version: Scalars['String']}

export interface PublishServerlessFunctionInput {
/** The id of the function. */
id: Scalars['ID']}

export interface UpdateDatabaseEventTriggerInput {
/** The id of the database event trigger to update */
id: Scalars['String'],
/** The database event trigger updates */
update: UpdateDatabaseEventTriggerInputUpdates}

export interface UpdateDatabaseEventTriggerInputUpdates {settings: Scalars['JSON']}

export interface CreateDatabaseEventTriggerInput {settings: Scalars['JSON'],serverlessFunctionId: Scalars['String']}

export interface UpdateCronTriggerInput {
/** The id of the cron trigger to update */
id: Scalars['String'],
/** The cron trigger updates */
update: UpdateCronTriggerInputUpdates}

export interface UpdateCronTriggerInputUpdates {settings: Scalars['JSON']}

export interface CreateCronTriggerInput {settings: Scalars['JSON'],serverlessFunctionId: Scalars['String']}

export interface UpdateRouteTriggerInput {
/** The id of the route to update */
id: Scalars['String'],
/** The route updates */
update: UpdateRouteTriggerInputUpdates}

export interface UpdateRouteTriggerInputUpdates {path: Scalars['String'],isAuthRequired: Scalars['Boolean'],httpMethod: HTTPMethod}

export interface CreateRouteTriggerInput {path: Scalars['String'],isAuthRequired: Scalars['Boolean'],httpMethod: HTTPMethod,serverlessFunctionId: Scalars['String']}

export interface GetAuthorizationUrlForSSOInput {identityProviderId: Scalars['UUID'],workspaceInviteHash?: (Scalars['String'] | null)}

export interface CreateApiKeyDTO {name: Scalars['String'],expiresAt: Scalars['String'],revokedAt?: (Scalars['String'] | null),roleId: Scalars['UUID']}

export interface UpdateApiKeyDTO {id: Scalars['UUID'],name?: (Scalars['String'] | null),expiresAt?: (Scalars['String'] | null),revokedAt?: (Scalars['String'] | null)}

export interface RevokeApiKeyDTO {id: Scalars['UUID']}

export interface CreateApprovedAccessDomainInput {domain: Scalars['String'],email: Scalars['String']}

export interface DeleteApprovedAccessDomainInput {id: Scalars['UUID']}

export interface ValidateApprovedAccessDomainInput {validationToken: Scalars['String'],approvedAccessDomainId: Scalars['UUID']}

export interface ActivateWorkspaceInput {displayName?: (Scalars['String'] | null)}

export interface UpdateWorkspaceInput {subdomain?: (Scalars['String'] | null),customDomain?: (Scalars['String'] | null),displayName?: (Scalars['String'] | null),logo?: (Scalars['String'] | null),inviteHash?: (Scalars['String'] | null),isPublicInviteLinkEnabled?: (Scalars['Boolean'] | null),allowImpersonation?: (Scalars['Boolean'] | null),isGoogleAuthEnabled?: (Scalars['Boolean'] | null),isMicrosoftAuthEnabled?: (Scalars['Boolean'] | null),isPasswordAuthEnabled?: (Scalars['Boolean'] | null),defaultRoleId?: (Scalars['UUID'] | null),isTwoFactorAuthenticationEnforced?: (Scalars['Boolean'] | null),trashRetentionDays?: (Scalars['Float'] | null)}

export interface CreateAgentInput {name?: (Scalars['String'] | null),label: Scalars['String'],icon?: (Scalars['String'] | null),description?: (Scalars['String'] | null),prompt: Scalars['String'],modelId: Scalars['String'],roleId?: (Scalars['UUID'] | null),responseFormat?: (Scalars['JSON'] | null),modelConfiguration?: (Scalars['JSON'] | null)}

export interface UpdateAgentInput {id: Scalars['UUID'],name: Scalars['String'],label: Scalars['String'],icon?: (Scalars['String'] | null),description?: (Scalars['String'] | null),prompt: Scalars['String'],modelId: Scalars['String'],roleId?: (Scalars['UUID'] | null),responseFormat?: (Scalars['JSON'] | null),modelConfiguration?: (Scalars['JSON'] | null)}

export interface CreateAgentHandoffInput {fromAgentId: Scalars['UUID'],toAgentId: Scalars['UUID'],description?: (Scalars['String'] | null)}

export interface RemoveAgentHandoffInput {fromAgentId: Scalars['UUID'],toAgentId: Scalars['UUID']}

export interface CreateAgentChatThreadInput {agentId: Scalars['UUID']}

export interface CreateRoleInput {id?: (Scalars['String'] | null),label: Scalars['String'],description?: (Scalars['String'] | null),icon?: (Scalars['String'] | null),canUpdateAllSettings?: (Scalars['Boolean'] | null),canAccessAllTools?: (Scalars['Boolean'] | null),canReadAllObjectRecords?: (Scalars['Boolean'] | null),canUpdateAllObjectRecords?: (Scalars['Boolean'] | null),canSoftDeleteAllObjectRecords?: (Scalars['Boolean'] | null),canDestroyAllObjectRecords?: (Scalars['Boolean'] | null),canBeAssignedToUsers?: (Scalars['Boolean'] | null),canBeAssignedToAgents?: (Scalars['Boolean'] | null),canBeAssignedToApiKeys?: (Scalars['Boolean'] | null)}

export interface UpdateRoleInput {update: UpdateRolePayload,
/** The id of the role to update */
id: Scalars['UUID']}

export interface UpdateRolePayload {label?: (Scalars['String'] | null),description?: (Scalars['String'] | null),icon?: (Scalars['String'] | null),canUpdateAllSettings?: (Scalars['Boolean'] | null),canAccessAllTools?: (Scalars['Boolean'] | null),canReadAllObjectRecords?: (Scalars['Boolean'] | null),canUpdateAllObjectRecords?: (Scalars['Boolean'] | null),canSoftDeleteAllObjectRecords?: (Scalars['Boolean'] | null),canDestroyAllObjectRecords?: (Scalars['Boolean'] | null),canBeAssignedToUsers?: (Scalars['Boolean'] | null),canBeAssignedToAgents?: (Scalars['Boolean'] | null),canBeAssignedToApiKeys?: (Scalars['Boolean'] | null)}

export interface UpsertObjectPermissionsInput {roleId: Scalars['UUID'],objectPermissions: ObjectPermissionInput[]}

export interface ObjectPermissionInput {objectMetadataId: Scalars['UUID'],canReadObjectRecords?: (Scalars['Boolean'] | null),canUpdateObjectRecords?: (Scalars['Boolean'] | null),canSoftDeleteObjectRecords?: (Scalars['Boolean'] | null),canDestroyObjectRecords?: (Scalars['Boolean'] | null)}

export interface UpsertPermissionFlagsInput {roleId: Scalars['UUID'],permissionFlagKeys: PermissionFlagType[]}

export interface UpsertFieldPermissionsInput {roleId: Scalars['UUID'],fieldPermissions: FieldPermissionInput[]}

export interface FieldPermissionInput {objectMetadataId: Scalars['UUID'],fieldMetadataId: Scalars['UUID'],canReadFieldValue?: (Scalars['Boolean'] | null),canUpdateFieldValue?: (Scalars['Boolean'] | null)}

export interface CreateOneFieldMetadataInput {
/** The record to create */
field: CreateFieldInput}

export interface CreateFieldInput {type: FieldMetadataType,name: Scalars['String'],label: Scalars['String'],description?: (Scalars['String'] | null),icon?: (Scalars['String'] | null),isCustom?: (Scalars['Boolean'] | null),isActive?: (Scalars['Boolean'] | null),isSystem?: (Scalars['Boolean'] | null),isUIReadOnly?: (Scalars['Boolean'] | null),isNullable?: (Scalars['Boolean'] | null),isUnique?: (Scalars['Boolean'] | null),defaultValue?: (Scalars['JSON'] | null),options?: (Scalars['JSON'] | null),settings?: (Scalars['JSON'] | null),isLabelSyncedWithName?: (Scalars['Boolean'] | null),objectMetadataId: Scalars['UUID'],isRemoteCreation?: (Scalars['Boolean'] | null),relationCreationPayload?: (Scalars['JSON'] | null),morphRelationsCreationPayload?: (Scalars['JSON'][] | null)}

export interface UpdateOneFieldMetadataInput {
/** The id of the record to update */
id: Scalars['UUID'],
/** The record to update */
update: UpdateFieldInput}

export interface UpdateFieldInput {name?: (Scalars['String'] | null),label?: (Scalars['String'] | null),description?: (Scalars['String'] | null),icon?: (Scalars['String'] | null),isActive?: (Scalars['Boolean'] | null),isSystem?: (Scalars['Boolean'] | null),isUIReadOnly?: (Scalars['Boolean'] | null),isNullable?: (Scalars['Boolean'] | null),isUnique?: (Scalars['Boolean'] | null),defaultValue?: (Scalars['JSON'] | null),options?: (Scalars['JSON'] | null),settings?: (Scalars['JSON'] | null),isLabelSyncedWithName?: (Scalars['Boolean'] | null)}

export interface DeleteOneFieldInput {
/** The id of the field to delete. */
id: Scalars['UUID']}

export interface SetupOIDCSsoInput {name: Scalars['String'],issuer: Scalars['String'],clientID: Scalars['String'],clientSecret: Scalars['String']}

export interface SetupSAMLSsoInput {name: Scalars['String'],issuer: Scalars['String'],id: Scalars['UUID'],ssoURL: Scalars['String'],certificate: Scalars['String'],fingerprint?: (Scalars['String'] | null)}

export interface DeleteSsoInput {identityProviderId: Scalars['UUID']}

export interface EditSsoInput {id: Scalars['UUID'],status: SSOIdentityProviderStatus}

export interface CreatePageLayoutInput {name: Scalars['String'],type?: (PageLayoutType | null),objectMetadataId?: (Scalars['UUID'] | null)}

export interface UpdatePageLayoutInput {name?: (Scalars['String'] | null),type?: (PageLayoutType | null),objectMetadataId?: (Scalars['UUID'] | null)}

export interface UpdatePageLayoutWithTabsInput {name: Scalars['String'],type: PageLayoutType,objectMetadataId?: (Scalars['UUID'] | null),tabs: UpdatePageLayoutTabWithWidgetsInput[]}

export interface UpdatePageLayoutTabWithWidgetsInput {id: Scalars['UUID'],title: Scalars['String'],position: Scalars['Float'],widgets: UpdatePageLayoutWidgetWithIdInput[]}

export interface UpdatePageLayoutWidgetWithIdInput {id: Scalars['UUID'],pageLayoutTabId: Scalars['UUID'],title: Scalars['String'],type: WidgetType,objectMetadataId?: (Scalars['UUID'] | null),gridPosition: GridPositionInput,configuration?: (Scalars['JSON'] | null)}

export interface GridPositionInput {row: Scalars['Float'],column: Scalars['Float'],rowSpan: Scalars['Float'],columnSpan: Scalars['Float']}

export interface CreatePageLayoutTabInput {title: Scalars['String'],position?: (Scalars['Float'] | null),pageLayoutId: Scalars['UUID']}

export interface UpdatePageLayoutTabInput {title?: (Scalars['String'] | null),position?: (Scalars['Float'] | null)}

export interface CreatePageLayoutWidgetInput {pageLayoutTabId: Scalars['UUID'],title: Scalars['String'],type?: (WidgetType | null),objectMetadataId?: (Scalars['UUID'] | null),gridPosition: GridPositionInput,configuration?: (Scalars['JSON'] | null)}

export interface UpdatePageLayoutWidgetInput {title?: (Scalars['String'] | null),type?: (WidgetType | null),objectMetadataId?: (Scalars['UUID'] | null),gridPosition?: (GridPositionInput | null),configuration?: (Scalars['JSON'] | null)}

export interface CreateWebhookDTO {targetUrl: Scalars['String'],operations: Scalars['String'][],description?: (Scalars['String'] | null),secret?: (Scalars['String'] | null)}

export interface UpdateWebhookDTO {id: Scalars['UUID'],targetUrl?: (Scalars['String'] | null),operations?: (Scalars['String'][] | null),description?: (Scalars['String'] | null),secret?: (Scalars['String'] | null)}

export interface DeleteWebhookDTO {id: Scalars['UUID']}

export interface EmailAccountConnectionParameters {IMAP?: (ConnectionParameters | null),SMTP?: (ConnectionParameters | null),CALDAV?: (ConnectionParameters | null)}

export interface ConnectionParameters {host: Scalars['String'],port: Scalars['Float'],username?: (Scalars['String'] | null),password: Scalars['String'],secure?: (Scalars['Boolean'] | null)}

export interface UpdateLabPublicFeatureFlagInput {publicFeatureFlag: Scalars['String'],value: Scalars['Boolean']}

export interface RunWorkflowVersionInput {
/** Workflow version ID */
workflowVersionId: Scalars['UUID'],
/** Workflow run ID */
workflowRunId?: (Scalars['UUID'] | null),
/** Execution result in JSON format */
payload?: (Scalars['JSON'] | null)}

export interface ComputeStepOutputSchemaInput {
/** Step JSON format */
step: Scalars['JSON'],
/** Workflow version ID */
workflowVersionId?: (Scalars['UUID'] | null)}

export interface CreateWorkflowVersionStepInput {
/** Workflow version ID */
workflowVersionId: Scalars['UUID'],
/** New step type */
stepType: Scalars['String'],
/** Parent step ID */
parentStepId?: (Scalars['String'] | null),
/** Parent step connection options */
parentStepConnectionOptions?: (Scalars['JSON'] | null),
/** Next step ID */
nextStepId?: (Scalars['UUID'] | null),
/** Step position */
position?: (WorkflowStepPositionInput | null),
/** Step ID */
id?: (Scalars['String'] | null)}

export interface WorkflowStepPositionInput {x: Scalars['Float'],y: Scalars['Float']}

export interface UpdateWorkflowVersionStepInput {
/** Workflow version ID */
workflowVersionId: Scalars['UUID'],
/** Step to update in JSON format */
step: Scalars['JSON']}

export interface DeleteWorkflowVersionStepInput {
/** Workflow version ID */
workflowVersionId: Scalars['UUID'],
/** Step to delete ID */
stepId: Scalars['String']}

export interface SubmitFormStepInput {
/** Workflow step ID */
stepId: Scalars['UUID'],
/** Workflow run ID */
workflowRunId: Scalars['UUID'],
/** Form response in JSON format */
response: Scalars['JSON']}

export interface UpdateWorkflowRunStepInput {
/** Workflow run ID */
workflowRunId: Scalars['UUID'],
/** Step to update in JSON format */
step: Scalars['JSON']}

export interface DuplicateWorkflowVersionStepInput {stepId: Scalars['String'],workflowVersionId: Scalars['String']}

export interface CreateWorkflowVersionEdgeInput {
/** Workflow version ID */
workflowVersionId: Scalars['String'],
/** Workflow version source step ID */
source: Scalars['String'],
/** Workflow version target step ID */
target: Scalars['String'],
/** Workflow version source step connection options */
sourceConnectionOptions?: (Scalars['JSON'] | null)}

export interface CreateDraftFromWorkflowVersionInput {
/** Workflow ID */
workflowId: Scalars['UUID'],
/** Workflow version ID */
workflowVersionIdToCopy: Scalars['UUID']}

export interface UpdateWorkflowVersionPositionsInput {
/** Workflow version ID */
workflowVersionId: Scalars['UUID'],
/** Workflow version updated positions */
positions: WorkflowStepPositionUpdateInput[]}

export interface WorkflowStepPositionUpdateInput {
/** Step or trigger ID */
id: Scalars['String'],
/** Position of the step or trigger */
position: WorkflowStepPositionInput}

export interface SubscriptionGenqlSelection{
    onDbEvent?: (OnDbEventDTOGenqlSelection & { __args: {input: OnDbEventInput} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OnDbEventInput {action?: (DatabaseEventAction | null),objectNameSingular?: (Scalars['String'] | null),recordId?: (Scalars['UUID'] | null)}

export interface LinksGenqlSelection{
    primaryLinkLabel?: boolean | number
    primaryLinkUrl?: boolean | number
    secondaryLinks?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface LinksCreateInput {primaryLinkLabel?: (Scalars['String'] | null),primaryLinkUrl?: (Scalars['String'] | null),secondaryLinks?: (Scalars['JSON'] | null)}

export interface LinksUpdateInput {primaryLinkLabel?: (Scalars['String'] | null),primaryLinkUrl?: (Scalars['String'] | null),secondaryLinks?: (Scalars['JSON'] | null)}

export interface LinksFilterInput {primaryLinkLabel?: (StringFilter | null),primaryLinkUrl?: (StringFilter | null),secondaryLinks?: (RawJsonFilter | null)}

export interface StringFilter {eq?: (Scalars['String'] | null),gt?: (Scalars['String'] | null),gte?: (Scalars['String'] | null),in?: (Scalars['String'][] | null),lt?: (Scalars['String'] | null),lte?: (Scalars['String'] | null),neq?: (Scalars['String'] | null),startsWith?: (Scalars['String'] | null),like?: (Scalars['String'] | null),ilike?: (Scalars['String'] | null),regex?: (Scalars['String'] | null),iregex?: (Scalars['String'] | null),is?: (FilterIs | null)}

export interface RawJsonFilter {is?: (FilterIs | null),like?: (Scalars['String'] | null)}

export interface LinksOrderByInput {primaryLinkLabel?: (OrderByDirection | null),primaryLinkUrl?: (OrderByDirection | null),secondaryLinks?: (OrderByDirection | null)}

export interface LinksGroupByInput {primaryLinkLabel?: (Scalars['Boolean'] | null),primaryLinkUrl?: (Scalars['Boolean'] | null),secondaryLinks?: (Scalars['Boolean'] | null)}

export interface CurrencyGenqlSelection{
    amountMicros?: boolean | number
    currencyCode?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CurrencyCreateInput {amountMicros?: (Scalars['BigFloat'] | null),currencyCode?: (Scalars['String'] | null)}

export interface CurrencyUpdateInput {amountMicros?: (Scalars['BigFloat'] | null),currencyCode?: (Scalars['String'] | null)}

export interface CurrencyFilterInput {amountMicros?: (BigFloatFilter | null),currencyCode?: (StringFilter | null)}

export interface BigFloatFilter {eq?: (Scalars['BigFloat'] | null),gt?: (Scalars['BigFloat'] | null),gte?: (Scalars['BigFloat'] | null),in?: (Scalars['BigFloat'][] | null),lt?: (Scalars['BigFloat'] | null),lte?: (Scalars['BigFloat'] | null),neq?: (Scalars['BigFloat'] | null),is?: (FilterIs | null)}

export interface CurrencyOrderByInput {amountMicros?: (OrderByDirection | null),currencyCode?: (OrderByDirection | null)}

export interface CurrencyGroupByInput {amountMicros?: (Scalars['Boolean'] | null),currencyCode?: (Scalars['Boolean'] | null)}

export interface FullNameCreateInput {firstName?: (Scalars['String'] | null),lastName?: (Scalars['String'] | null)}

export interface FullNameUpdateInput {firstName?: (Scalars['String'] | null),lastName?: (Scalars['String'] | null)}

export interface FullNameFilterInput {firstName?: (StringFilter | null),lastName?: (StringFilter | null)}

export interface FullNameOrderByInput {firstName?: (OrderByDirection | null),lastName?: (OrderByDirection | null)}

export interface FullNameGroupByInput {firstName?: (Scalars['Boolean'] | null),lastName?: (Scalars['Boolean'] | null)}

export interface AddressGenqlSelection{
    addressStreet1?: boolean | number
    addressStreet2?: boolean | number
    addressCity?: boolean | number
    addressPostcode?: boolean | number
    addressState?: boolean | number
    addressCountry?: boolean | number
    addressLat?: boolean | number
    addressLng?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AddressCreateInput {addressStreet1?: (Scalars['String'] | null),addressStreet2?: (Scalars['String'] | null),addressCity?: (Scalars['String'] | null),addressPostcode?: (Scalars['String'] | null),addressState?: (Scalars['String'] | null),addressCountry?: (Scalars['String'] | null),addressLat?: (Scalars['BigFloat'] | null),addressLng?: (Scalars['BigFloat'] | null)}

export interface AddressUpdateInput {addressStreet1?: (Scalars['String'] | null),addressStreet2?: (Scalars['String'] | null),addressCity?: (Scalars['String'] | null),addressPostcode?: (Scalars['String'] | null),addressState?: (Scalars['String'] | null),addressCountry?: (Scalars['String'] | null),addressLat?: (Scalars['BigFloat'] | null),addressLng?: (Scalars['BigFloat'] | null)}

export interface AddressFilterInput {addressStreet1?: (StringFilter | null),addressStreet2?: (StringFilter | null),addressCity?: (StringFilter | null),addressPostcode?: (StringFilter | null),addressState?: (StringFilter | null),addressCountry?: (StringFilter | null),addressLat?: (BigFloatFilter | null),addressLng?: (BigFloatFilter | null)}

export interface AddressOrderByInput {addressStreet1?: (OrderByDirection | null),addressStreet2?: (OrderByDirection | null),addressCity?: (OrderByDirection | null),addressPostcode?: (OrderByDirection | null),addressState?: (OrderByDirection | null),addressCountry?: (OrderByDirection | null),addressLat?: (OrderByDirection | null),addressLng?: (OrderByDirection | null)}

export interface AddressGroupByInput {addressStreet1?: (Scalars['Boolean'] | null),addressStreet2?: (Scalars['Boolean'] | null),addressCity?: (Scalars['Boolean'] | null),addressPostcode?: (Scalars['Boolean'] | null),addressState?: (Scalars['Boolean'] | null),addressCountry?: (Scalars['Boolean'] | null),addressLat?: (Scalars['Boolean'] | null),addressLng?: (Scalars['Boolean'] | null)}

export interface ActorGenqlSelection{
    source?: boolean | number
    workspaceMemberId?: boolean | number
    name?: boolean | number
    context?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ActorCreateInput {source?: (ActorSourceEnum | null),context?: (Scalars['JSON'] | null)}

export interface ActorUpdateInput {source?: (ActorSourceEnum | null),context?: (Scalars['JSON'] | null)}

export interface ActorFilterInput {source?: (ActorSourceEnumFilter | null),workspaceMemberId?: (UUIDFilter | null),name?: (StringFilter | null),context?: (RawJsonFilter | null)}

export interface ActorSourceEnumFilter {eq?: (ActorSourceEnum | null),neq?: (ActorSourceEnum | null),in?: ((ActorSourceEnum | null)[] | null),containsAny?: ((ActorSourceEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface ActorOrderByInput {source?: (OrderByDirection | null),workspaceMemberId?: (OrderByDirection | null),name?: (OrderByDirection | null),context?: (OrderByDirection | null)}

export interface ActorGroupByInput {source?: (Scalars['Boolean'] | null),context?: (Scalars['Boolean'] | null)}

export interface EmailsGenqlSelection{
    primaryEmail?: boolean | number
    additionalEmails?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface EmailsCreateInput {primaryEmail?: (Scalars['String'] | null),additionalEmails?: (Scalars['JSON'] | null)}

export interface EmailsUpdateInput {primaryEmail?: (Scalars['String'] | null),additionalEmails?: (Scalars['JSON'] | null)}

export interface EmailsFilterInput {primaryEmail?: (StringFilter | null),additionalEmails?: (RawJsonFilter | null)}

export interface EmailsOrderByInput {primaryEmail?: (OrderByDirection | null),additionalEmails?: (OrderByDirection | null)}

export interface EmailsGroupByInput {primaryEmail?: (Scalars['Boolean'] | null),additionalEmails?: (Scalars['Boolean'] | null)}

export interface PhonesGenqlSelection{
    primaryPhoneNumber?: boolean | number
    primaryPhoneCountryCode?: boolean | number
    primaryPhoneCallingCode?: boolean | number
    additionalPhones?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PhonesCreateInput {primaryPhoneNumber?: (Scalars['String'] | null),primaryPhoneCountryCode?: (Scalars['String'] | null),primaryPhoneCallingCode?: (Scalars['String'] | null),additionalPhones?: (Scalars['JSON'] | null)}

export interface PhonesUpdateInput {primaryPhoneNumber?: (Scalars['String'] | null),primaryPhoneCountryCode?: (Scalars['String'] | null),primaryPhoneCallingCode?: (Scalars['String'] | null),additionalPhones?: (Scalars['JSON'] | null)}

export interface PhonesFilterInput {primaryPhoneNumber?: (StringFilter | null),primaryPhoneCountryCode?: (StringFilter | null),primaryPhoneCallingCode?: (StringFilter | null),additionalPhones?: (RawJsonFilter | null)}

export interface PhonesOrderByInput {primaryPhoneNumber?: (OrderByDirection | null),primaryPhoneCountryCode?: (OrderByDirection | null),primaryPhoneCallingCode?: (OrderByDirection | null),additionalPhones?: (OrderByDirection | null)}

export interface PhonesGroupByInput {primaryPhoneNumber?: (Scalars['Boolean'] | null),primaryPhoneCountryCode?: (Scalars['Boolean'] | null),primaryPhoneCallingCode?: (Scalars['Boolean'] | null),additionalPhones?: (Scalars['Boolean'] | null)}

export interface RichTextV2GenqlSelection{
    blocknote?: boolean | number
    markdown?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RichTextV2CreateInput {blocknote?: (Scalars['String'] | null),markdown?: (Scalars['String'] | null)}

export interface RichTextV2UpdateInput {blocknote?: (Scalars['String'] | null),markdown?: (Scalars['String'] | null)}

export interface RichTextV2FilterInput {blocknote?: (StringFilter | null),markdown?: (StringFilter | null)}

export interface RichTextV2OrderByInput {blocknote?: (OrderByDirection | null),markdown?: (OrderByDirection | null)}

export interface RichTextV2GroupByInput {blocknote?: (Scalars['Boolean'] | null),markdown?: (Scalars['Boolean'] | null)}

export interface GroupByDateGranularityInput {
/** Date granularity (e.g. day, month, quarter, year, day of the week, quarter of the year, month of the year) */
granularity?: (DateGranularityEnum | null)}

export interface OrderByDateGranularityInput {orderBy?: (OrderByDirection | null),granularity?: (DateGranularityEnum | null)}


/** An attachment */
export interface AttachmentGenqlSelection{
    /** Attachment name */
    name?: boolean | number
    /** Attachment full path */
    fullPath?: boolean | number
    /** Attachment type */
    type?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Attachment author */
    authorId?: boolean | number
    /** Attachment task */
    taskId?: boolean | number
    /** Attachment note */
    noteId?: boolean | number
    /** Attachment person */
    personId?: boolean | number
    /** Attachment company */
    companyId?: boolean | number
    /** Attachment opportunity */
    opportunityId?: boolean | number
    /** Attachment dashboard */
    dashboardId?: boolean | number
    /** Attachment workflow */
    workflowId?: boolean | number
    /** Attachments Rocket */
    rocketId?: boolean | number
    /** Attachments Pet */
    petId?: boolean | number
    /** Attachments Survey result */
    surveyResultId?: boolean | number
    /** Attachment author */
    author?: WorkspaceMemberGenqlSelection
    /** Attachment task */
    task?: TaskGenqlSelection
    /** Attachment note */
    note?: NoteGenqlSelection
    /** Attachment person */
    person?: PersonGenqlSelection
    /** Attachment company */
    company?: CompanyGenqlSelection
    /** Attachment opportunity */
    opportunity?: OpportunityGenqlSelection
    /** Attachment dashboard */
    dashboard?: DashboardGenqlSelection
    /** Attachment workflow */
    workflow?: WorkflowGenqlSelection
    /** Attachments Rocket */
    rocket?: RocketGenqlSelection
    /** Attachments Pet */
    pet?: PetGenqlSelection
    /** Attachments Survey result */
    surveyResult?: SurveyResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An attachment */
export interface AttachmentEdgeGenqlSelection{
    node?: AttachmentGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An attachment */
export interface AttachmentConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for fullPath */
    countUniqueValuesFullPath?: boolean | number
    /** Number of empty values for fullPath */
    countEmptyFullPath?: boolean | number
    /** Number of non-empty values for fullPath */
    countNotEmptyFullPath?: boolean | number
    /** Percentage of empty values for fullPath */
    percentageEmptyFullPath?: boolean | number
    /** Percentage of non-empty values for fullPath */
    percentageNotEmptyFullPath?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: AttachmentEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An attachment */
export interface AttachmentGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for fullPath */
    countUniqueValuesFullPath?: boolean | number
    /** Number of empty values for fullPath */
    countEmptyFullPath?: boolean | number
    /** Number of non-empty values for fullPath */
    countNotEmptyFullPath?: boolean | number
    /** Percentage of empty values for fullPath */
    percentageEmptyFullPath?: boolean | number
    /** Percentage of non-empty values for fullPath */
    percentageNotEmptyFullPath?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: AttachmentEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface AttachmentRelationInput {
/** Connect to a attachment record */
connect?: (AttachmentConnectInput | null),
/** Disconnect from a attachment record */
disconnect?: (Scalars['Boolean'] | null)}

export interface AttachmentConnectInput {
/** Find a attachment record based on its unique fields: id */
where?: (AttachmentWhereUniqueInput | null)}

export interface AttachmentWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** An attachment */
export interface AttachmentCreateInput {
/** Attachment name */
name?: (Scalars['String'] | null),
/** Attachment full path */
fullPath?: (Scalars['String'] | null),
/** Attachment type */
type?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Attachment author */
authorId?: (Scalars['ID'] | null),
/** Attachment author */
author?: (WorkspaceMemberRelationInput | null),
/** Attachment task */
taskId?: (Scalars['ID'] | null),
/** Attachment task */
task?: (TaskRelationInput | null),
/** Attachment note */
noteId?: (Scalars['ID'] | null),
/** Attachment note */
note?: (NoteRelationInput | null),
/** Attachment person */
personId?: (Scalars['ID'] | null),
/** Attachment person */
person?: (PersonRelationInput | null),
/** Attachment company */
companyId?: (Scalars['ID'] | null),
/** Attachment company */
company?: (CompanyRelationInput | null),
/** Attachment opportunity */
opportunityId?: (Scalars['ID'] | null),
/** Attachment opportunity */
opportunity?: (OpportunityRelationInput | null),
/** Attachment dashboard */
dashboardId?: (Scalars['ID'] | null),
/** Attachment dashboard */
dashboard?: (DashboardRelationInput | null),
/** Attachment workflow */
workflowId?: (Scalars['ID'] | null),
/** Attachment workflow */
workflow?: (WorkflowRelationInput | null),
/** Attachments Rocket */
rocketId?: (Scalars['ID'] | null),
/** Attachments Rocket */
rocket?: (RocketRelationInput | null),
/** Attachments Pet */
petId?: (Scalars['ID'] | null),
/** Attachments Pet */
pet?: (PetRelationInput | null),
/** Attachments Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** Attachments Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** An attachment */
export interface AttachmentUpdateInput {
/** Attachment name */
name?: (Scalars['String'] | null),
/** Attachment full path */
fullPath?: (Scalars['String'] | null),
/** Attachment type */
type?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Attachment author */
authorId?: (Scalars['ID'] | null),
/** Attachment author */
author?: (WorkspaceMemberRelationInput | null),
/** Attachment task */
taskId?: (Scalars['ID'] | null),
/** Attachment task */
task?: (TaskRelationInput | null),
/** Attachment note */
noteId?: (Scalars['ID'] | null),
/** Attachment note */
note?: (NoteRelationInput | null),
/** Attachment person */
personId?: (Scalars['ID'] | null),
/** Attachment person */
person?: (PersonRelationInput | null),
/** Attachment company */
companyId?: (Scalars['ID'] | null),
/** Attachment company */
company?: (CompanyRelationInput | null),
/** Attachment opportunity */
opportunityId?: (Scalars['ID'] | null),
/** Attachment opportunity */
opportunity?: (OpportunityRelationInput | null),
/** Attachment dashboard */
dashboardId?: (Scalars['ID'] | null),
/** Attachment dashboard */
dashboard?: (DashboardRelationInput | null),
/** Attachment workflow */
workflowId?: (Scalars['ID'] | null),
/** Attachment workflow */
workflow?: (WorkflowRelationInput | null),
/** Attachments Rocket */
rocketId?: (Scalars['ID'] | null),
/** Attachments Rocket */
rocket?: (RocketRelationInput | null),
/** Attachments Pet */
petId?: (Scalars['ID'] | null),
/** Attachments Pet */
pet?: (PetRelationInput | null),
/** Attachments Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** Attachments Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** An attachment */
export interface AttachmentFilterInput {
/** Attachment name */
name?: (StringFilter | null),
/** Attachment full path */
fullPath?: (StringFilter | null),
/** Attachment type */
type?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Attachment author */
authorId?: (UUIDFilter | null),
/** Attachment task */
taskId?: (UUIDFilter | null),
/** Attachment note */
noteId?: (UUIDFilter | null),
/** Attachment person */
personId?: (UUIDFilter | null),
/** Attachment company */
companyId?: (UUIDFilter | null),
/** Attachment opportunity */
opportunityId?: (UUIDFilter | null),
/** Attachment dashboard */
dashboardId?: (UUIDFilter | null),
/** Attachment workflow */
workflowId?: (UUIDFilter | null),
/** Attachments Rocket */
rocketId?: (UUIDFilter | null),
/** Attachments Pet */
petId?: (UUIDFilter | null),
/** Attachments Survey result */
surveyResultId?: (UUIDFilter | null),and?: ((AttachmentFilterInput | null)[] | null),or?: ((AttachmentFilterInput | null)[] | null),not?: (AttachmentFilterInput | null)}


/** An attachment */
export interface AttachmentOrderByInput {
/** Attachment name */
name?: (OrderByDirection | null),
/** Attachment full path */
fullPath?: (OrderByDirection | null),
/** Attachment type */
type?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Attachment author */
authorId?: (OrderByDirection | null),
/** Attachment task */
taskId?: (OrderByDirection | null),
/** Attachment note */
noteId?: (OrderByDirection | null),
/** Attachment person */
personId?: (OrderByDirection | null),
/** Attachment company */
companyId?: (OrderByDirection | null),
/** Attachment opportunity */
opportunityId?: (OrderByDirection | null),
/** Attachment dashboard */
dashboardId?: (OrderByDirection | null),
/** Attachment workflow */
workflowId?: (OrderByDirection | null),
/** Attachments Rocket */
rocketId?: (OrderByDirection | null),
/** Attachments Pet */
petId?: (OrderByDirection | null),
/** Attachments Survey result */
surveyResultId?: (OrderByDirection | null)}


/** An attachment */
export interface AttachmentOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (AttachmentOrderByWithGroupByAggregateInput | null),
/** Attachment name */
name?: (OrderByDirection | null),
/** Attachment full path */
fullPath?: (OrderByDirection | null),
/** Attachment type */
type?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Attachment author */
authorId?: (OrderByDirection | null),
/** Attachment task */
taskId?: (OrderByDirection | null),
/** Attachment note */
noteId?: (OrderByDirection | null),
/** Attachment person */
personId?: (OrderByDirection | null),
/** Attachment company */
companyId?: (OrderByDirection | null),
/** Attachment opportunity */
opportunityId?: (OrderByDirection | null),
/** Attachment dashboard */
dashboardId?: (OrderByDirection | null),
/** Attachment workflow */
workflowId?: (OrderByDirection | null),
/** Attachments Rocket */
rocketId?: (OrderByDirection | null),
/** Attachments Pet */
petId?: (OrderByDirection | null),
/** Attachments Survey result */
surveyResultId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface AttachmentOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for fullPath */
countUniqueValuesFullPath?: (OrderByDirection | null),
/** Number of empty values for fullPath */
countEmptyFullPath?: (OrderByDirection | null),
/** Number of non-empty values for fullPath */
countNotEmptyFullPath?: (OrderByDirection | null),
/** Percentage of empty values for fullPath */
percentageEmptyFullPath?: (OrderByDirection | null),
/** Percentage of non-empty values for fullPath */
percentageNotEmptyFullPath?: (OrderByDirection | null),
/** Number of unique values for type */
countUniqueValuesType?: (OrderByDirection | null),
/** Number of empty values for type */
countEmptyType?: (OrderByDirection | null),
/** Number of non-empty values for type */
countNotEmptyType?: (OrderByDirection | null),
/** Percentage of empty values for type */
percentageEmptyType?: (OrderByDirection | null),
/** Percentage of non-empty values for type */
percentageNotEmptyType?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Attachment author */
authorId?: (OrderByDirection | null),
/** Attachment task */
taskId?: (OrderByDirection | null),
/** Attachment note */
noteId?: (OrderByDirection | null),
/** Attachment person */
personId?: (OrderByDirection | null),
/** Attachment company */
companyId?: (OrderByDirection | null),
/** Attachment opportunity */
opportunityId?: (OrderByDirection | null),
/** Attachment dashboard */
dashboardId?: (OrderByDirection | null),
/** Attachment workflow */
workflowId?: (OrderByDirection | null),
/** Attachments Rocket */
rocketId?: (OrderByDirection | null),
/** Attachments Pet */
petId?: (OrderByDirection | null),
/** Attachments Survey result */
surveyResultId?: (OrderByDirection | null)}


/** An attachment */
export interface AttachmentGroupByInput {
/** Attachment name */
name?: (Scalars['Boolean'] | null),
/** Attachment full path */
fullPath?: (Scalars['Boolean'] | null),
/** Attachment type */
type?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Attachment author */
authorId?: (Scalars['Boolean'] | null),
/** Attachment task */
taskId?: (Scalars['Boolean'] | null),
/** Attachment note */
noteId?: (Scalars['Boolean'] | null),
/** Attachment person */
personId?: (Scalars['Boolean'] | null),
/** Attachment company */
companyId?: (Scalars['Boolean'] | null),
/** Attachment opportunity */
opportunityId?: (Scalars['Boolean'] | null),
/** Attachment dashboard */
dashboardId?: (Scalars['Boolean'] | null),
/** Attachment workflow */
workflowId?: (Scalars['Boolean'] | null),
/** Attachments Rocket */
rocketId?: (Scalars['Boolean'] | null),
/** Attachments Pet */
petId?: (Scalars['Boolean'] | null),
/** Attachments Survey result */
surveyResultId?: (Scalars['Boolean'] | null)}


/** Blocklist */
export interface BlocklistGenqlSelection{
    /** Handle */
    handle?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** WorkspaceMember */
    workspaceMemberId?: boolean | number
    /** WorkspaceMember */
    workspaceMember?: WorkspaceMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Blocklist */
export interface BlocklistEdgeGenqlSelection{
    node?: BlocklistGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Blocklist */
export interface BlocklistConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: BlocklistEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Blocklist */
export interface BlocklistGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: BlocklistEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface BlocklistRelationInput {
/** Connect to a blocklist record */
connect?: (BlocklistConnectInput | null),
/** Disconnect from a blocklist record */
disconnect?: (Scalars['Boolean'] | null)}

export interface BlocklistConnectInput {
/** Find a blocklist record based on its unique fields: id */
where?: (BlocklistWhereUniqueInput | null)}

export interface BlocklistWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Blocklist */
export interface BlocklistCreateInput {
/** Handle */
handle?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** WorkspaceMember */
workspaceMemberId?: (Scalars['ID'] | null),
/** WorkspaceMember */
workspaceMember?: (WorkspaceMemberRelationInput | null)}


/** Blocklist */
export interface BlocklistUpdateInput {
/** Handle */
handle?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** WorkspaceMember */
workspaceMemberId?: (Scalars['ID'] | null),
/** WorkspaceMember */
workspaceMember?: (WorkspaceMemberRelationInput | null)}


/** Blocklist */
export interface BlocklistFilterInput {
/** Handle */
handle?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** WorkspaceMember */
workspaceMemberId?: (UUIDFilter | null),and?: ((BlocklistFilterInput | null)[] | null),or?: ((BlocklistFilterInput | null)[] | null),not?: (BlocklistFilterInput | null)}


/** Blocklist */
export interface BlocklistOrderByInput {
/** Handle */
handle?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** WorkspaceMember */
workspaceMemberId?: (OrderByDirection | null)}


/** Blocklist */
export interface BlocklistOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (BlocklistOrderByWithGroupByAggregateInput | null),
/** Handle */
handle?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** WorkspaceMember */
workspaceMemberId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface BlocklistOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for handle */
countUniqueValuesHandle?: (OrderByDirection | null),
/** Number of empty values for handle */
countEmptyHandle?: (OrderByDirection | null),
/** Number of non-empty values for handle */
countNotEmptyHandle?: (OrderByDirection | null),
/** Percentage of empty values for handle */
percentageEmptyHandle?: (OrderByDirection | null),
/** Percentage of non-empty values for handle */
percentageNotEmptyHandle?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** WorkspaceMember */
workspaceMemberId?: (OrderByDirection | null)}


/** Blocklist */
export interface BlocklistGroupByInput {
/** Handle */
handle?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** WorkspaceMember */
workspaceMemberId?: (Scalars['Boolean'] | null)}


/** Calendar events */
export interface CalendarEventGenqlSelection{
    /** Title */
    title?: boolean | number
    /** Is canceled */
    isCanceled?: boolean | number
    /** Is Full Day */
    isFullDay?: boolean | number
    /** Start Date */
    startsAt?: boolean | number
    /** End Date */
    endsAt?: boolean | number
    /** Creation DateTime */
    externalCreatedAt?: boolean | number
    /** Update DateTime */
    externalUpdatedAt?: boolean | number
    /** Description */
    description?: boolean | number
    /** Location */
    location?: boolean | number
    /** iCal UID */
    iCalUID?: boolean | number
    /** Conference Solution */
    conferenceSolution?: boolean | number
    /** Meet Link */
    conferenceLink?: LinksGenqlSelection
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Calendar Channel Event Associations */
    calendarChannelEventAssociations?: (CalendarChannelEventAssociationConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarChannelEventAssociationFilterInput | null), orderBy?: ((CalendarChannelEventAssociationOrderByInput | null)[] | null)} })
    /** Event Participants */
    calendarEventParticipants?: (CalendarEventParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarEventParticipantFilterInput | null), orderBy?: ((CalendarEventParticipantOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar events */
export interface CalendarEventEdgeGenqlSelection{
    node?: CalendarEventGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar events */
export interface CalendarEventConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for isCanceled */
    countUniqueValuesIsCanceled?: boolean | number
    /** Number of empty values for isCanceled */
    countEmptyIsCanceled?: boolean | number
    /** Number of non-empty values for isCanceled */
    countNotEmptyIsCanceled?: boolean | number
    /** Percentage of empty values for isCanceled */
    percentageEmptyIsCanceled?: boolean | number
    /** Percentage of non-empty values for isCanceled */
    percentageNotEmptyIsCanceled?: boolean | number
    /** Count of true values in the field isCanceled */
    countTrueIsCanceled?: boolean | number
    /** Count of false values in the field isCanceled */
    countFalseIsCanceled?: boolean | number
    /** Number of unique values for isFullDay */
    countUniqueValuesIsFullDay?: boolean | number
    /** Number of empty values for isFullDay */
    countEmptyIsFullDay?: boolean | number
    /** Number of non-empty values for isFullDay */
    countNotEmptyIsFullDay?: boolean | number
    /** Percentage of empty values for isFullDay */
    percentageEmptyIsFullDay?: boolean | number
    /** Percentage of non-empty values for isFullDay */
    percentageNotEmptyIsFullDay?: boolean | number
    /** Count of true values in the field isFullDay */
    countTrueIsFullDay?: boolean | number
    /** Count of false values in the field isFullDay */
    countFalseIsFullDay?: boolean | number
    /** Number of unique values for startsAt */
    countUniqueValuesStartsAt?: boolean | number
    /** Number of empty values for startsAt */
    countEmptyStartsAt?: boolean | number
    /** Number of non-empty values for startsAt */
    countNotEmptyStartsAt?: boolean | number
    /** Percentage of empty values for startsAt */
    percentageEmptyStartsAt?: boolean | number
    /** Percentage of non-empty values for startsAt */
    percentageNotEmptyStartsAt?: boolean | number
    /** Earliest date contained in the field startsAt */
    minStartsAt?: boolean | number
    /** Latest date contained in the field startsAt */
    maxStartsAt?: boolean | number
    /** Number of unique values for endsAt */
    countUniqueValuesEndsAt?: boolean | number
    /** Number of empty values for endsAt */
    countEmptyEndsAt?: boolean | number
    /** Number of non-empty values for endsAt */
    countNotEmptyEndsAt?: boolean | number
    /** Percentage of empty values for endsAt */
    percentageEmptyEndsAt?: boolean | number
    /** Percentage of non-empty values for endsAt */
    percentageNotEmptyEndsAt?: boolean | number
    /** Earliest date contained in the field endsAt */
    minEndsAt?: boolean | number
    /** Latest date contained in the field endsAt */
    maxEndsAt?: boolean | number
    /** Number of unique values for externalCreatedAt */
    countUniqueValuesExternalCreatedAt?: boolean | number
    /** Number of empty values for externalCreatedAt */
    countEmptyExternalCreatedAt?: boolean | number
    /** Number of non-empty values for externalCreatedAt */
    countNotEmptyExternalCreatedAt?: boolean | number
    /** Percentage of empty values for externalCreatedAt */
    percentageEmptyExternalCreatedAt?: boolean | number
    /** Percentage of non-empty values for externalCreatedAt */
    percentageNotEmptyExternalCreatedAt?: boolean | number
    /** Earliest date contained in the field externalCreatedAt */
    minExternalCreatedAt?: boolean | number
    /** Latest date contained in the field externalCreatedAt */
    maxExternalCreatedAt?: boolean | number
    /** Number of unique values for externalUpdatedAt */
    countUniqueValuesExternalUpdatedAt?: boolean | number
    /** Number of empty values for externalUpdatedAt */
    countEmptyExternalUpdatedAt?: boolean | number
    /** Number of non-empty values for externalUpdatedAt */
    countNotEmptyExternalUpdatedAt?: boolean | number
    /** Percentage of empty values for externalUpdatedAt */
    percentageEmptyExternalUpdatedAt?: boolean | number
    /** Percentage of non-empty values for externalUpdatedAt */
    percentageNotEmptyExternalUpdatedAt?: boolean | number
    /** Earliest date contained in the field externalUpdatedAt */
    minExternalUpdatedAt?: boolean | number
    /** Latest date contained in the field externalUpdatedAt */
    maxExternalUpdatedAt?: boolean | number
    /** Number of unique values for description */
    countUniqueValuesDescription?: boolean | number
    /** Number of empty values for description */
    countEmptyDescription?: boolean | number
    /** Number of non-empty values for description */
    countNotEmptyDescription?: boolean | number
    /** Percentage of empty values for description */
    percentageEmptyDescription?: boolean | number
    /** Percentage of non-empty values for description */
    percentageNotEmptyDescription?: boolean | number
    /** Number of unique values for location */
    countUniqueValuesLocation?: boolean | number
    /** Number of empty values for location */
    countEmptyLocation?: boolean | number
    /** Number of non-empty values for location */
    countNotEmptyLocation?: boolean | number
    /** Percentage of empty values for location */
    percentageEmptyLocation?: boolean | number
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: boolean | number
    /** Number of unique values for iCalUID */
    countUniqueValuesICalUID?: boolean | number
    /** Number of empty values for iCalUID */
    countEmptyICalUID?: boolean | number
    /** Number of non-empty values for iCalUID */
    countNotEmptyICalUID?: boolean | number
    /** Percentage of empty values for iCalUID */
    percentageEmptyICalUID?: boolean | number
    /** Percentage of non-empty values for iCalUID */
    percentageNotEmptyICalUID?: boolean | number
    /** Number of unique values for conferenceSolution */
    countUniqueValuesConferenceSolution?: boolean | number
    /** Number of empty values for conferenceSolution */
    countEmptyConferenceSolution?: boolean | number
    /** Number of non-empty values for conferenceSolution */
    countNotEmptyConferenceSolution?: boolean | number
    /** Percentage of empty values for conferenceSolution */
    percentageEmptyConferenceSolution?: boolean | number
    /** Percentage of non-empty values for conferenceSolution */
    percentageNotEmptyConferenceSolution?: boolean | number
    /** Number of unique values for conferenceLink */
    countUniqueValuesConferenceLink?: boolean | number
    /** Number of empty values for conferenceLink */
    countEmptyConferenceLink?: boolean | number
    /** Number of non-empty values for conferenceLink */
    countNotEmptyConferenceLink?: boolean | number
    /** Percentage of empty values for conferenceLink */
    percentageEmptyConferenceLink?: boolean | number
    /** Percentage of non-empty values for conferenceLink */
    percentageNotEmptyConferenceLink?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarEventEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar events */
export interface CalendarEventGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for isCanceled */
    countUniqueValuesIsCanceled?: boolean | number
    /** Number of empty values for isCanceled */
    countEmptyIsCanceled?: boolean | number
    /** Number of non-empty values for isCanceled */
    countNotEmptyIsCanceled?: boolean | number
    /** Percentage of empty values for isCanceled */
    percentageEmptyIsCanceled?: boolean | number
    /** Percentage of non-empty values for isCanceled */
    percentageNotEmptyIsCanceled?: boolean | number
    /** Count of true values in the field isCanceled */
    countTrueIsCanceled?: boolean | number
    /** Count of false values in the field isCanceled */
    countFalseIsCanceled?: boolean | number
    /** Number of unique values for isFullDay */
    countUniqueValuesIsFullDay?: boolean | number
    /** Number of empty values for isFullDay */
    countEmptyIsFullDay?: boolean | number
    /** Number of non-empty values for isFullDay */
    countNotEmptyIsFullDay?: boolean | number
    /** Percentage of empty values for isFullDay */
    percentageEmptyIsFullDay?: boolean | number
    /** Percentage of non-empty values for isFullDay */
    percentageNotEmptyIsFullDay?: boolean | number
    /** Count of true values in the field isFullDay */
    countTrueIsFullDay?: boolean | number
    /** Count of false values in the field isFullDay */
    countFalseIsFullDay?: boolean | number
    /** Number of unique values for startsAt */
    countUniqueValuesStartsAt?: boolean | number
    /** Number of empty values for startsAt */
    countEmptyStartsAt?: boolean | number
    /** Number of non-empty values for startsAt */
    countNotEmptyStartsAt?: boolean | number
    /** Percentage of empty values for startsAt */
    percentageEmptyStartsAt?: boolean | number
    /** Percentage of non-empty values for startsAt */
    percentageNotEmptyStartsAt?: boolean | number
    /** Earliest date contained in the field startsAt */
    minStartsAt?: boolean | number
    /** Latest date contained in the field startsAt */
    maxStartsAt?: boolean | number
    /** Number of unique values for endsAt */
    countUniqueValuesEndsAt?: boolean | number
    /** Number of empty values for endsAt */
    countEmptyEndsAt?: boolean | number
    /** Number of non-empty values for endsAt */
    countNotEmptyEndsAt?: boolean | number
    /** Percentage of empty values for endsAt */
    percentageEmptyEndsAt?: boolean | number
    /** Percentage of non-empty values for endsAt */
    percentageNotEmptyEndsAt?: boolean | number
    /** Earliest date contained in the field endsAt */
    minEndsAt?: boolean | number
    /** Latest date contained in the field endsAt */
    maxEndsAt?: boolean | number
    /** Number of unique values for externalCreatedAt */
    countUniqueValuesExternalCreatedAt?: boolean | number
    /** Number of empty values for externalCreatedAt */
    countEmptyExternalCreatedAt?: boolean | number
    /** Number of non-empty values for externalCreatedAt */
    countNotEmptyExternalCreatedAt?: boolean | number
    /** Percentage of empty values for externalCreatedAt */
    percentageEmptyExternalCreatedAt?: boolean | number
    /** Percentage of non-empty values for externalCreatedAt */
    percentageNotEmptyExternalCreatedAt?: boolean | number
    /** Earliest date contained in the field externalCreatedAt */
    minExternalCreatedAt?: boolean | number
    /** Latest date contained in the field externalCreatedAt */
    maxExternalCreatedAt?: boolean | number
    /** Number of unique values for externalUpdatedAt */
    countUniqueValuesExternalUpdatedAt?: boolean | number
    /** Number of empty values for externalUpdatedAt */
    countEmptyExternalUpdatedAt?: boolean | number
    /** Number of non-empty values for externalUpdatedAt */
    countNotEmptyExternalUpdatedAt?: boolean | number
    /** Percentage of empty values for externalUpdatedAt */
    percentageEmptyExternalUpdatedAt?: boolean | number
    /** Percentage of non-empty values for externalUpdatedAt */
    percentageNotEmptyExternalUpdatedAt?: boolean | number
    /** Earliest date contained in the field externalUpdatedAt */
    minExternalUpdatedAt?: boolean | number
    /** Latest date contained in the field externalUpdatedAt */
    maxExternalUpdatedAt?: boolean | number
    /** Number of unique values for description */
    countUniqueValuesDescription?: boolean | number
    /** Number of empty values for description */
    countEmptyDescription?: boolean | number
    /** Number of non-empty values for description */
    countNotEmptyDescription?: boolean | number
    /** Percentage of empty values for description */
    percentageEmptyDescription?: boolean | number
    /** Percentage of non-empty values for description */
    percentageNotEmptyDescription?: boolean | number
    /** Number of unique values for location */
    countUniqueValuesLocation?: boolean | number
    /** Number of empty values for location */
    countEmptyLocation?: boolean | number
    /** Number of non-empty values for location */
    countNotEmptyLocation?: boolean | number
    /** Percentage of empty values for location */
    percentageEmptyLocation?: boolean | number
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: boolean | number
    /** Number of unique values for iCalUID */
    countUniqueValuesICalUID?: boolean | number
    /** Number of empty values for iCalUID */
    countEmptyICalUID?: boolean | number
    /** Number of non-empty values for iCalUID */
    countNotEmptyICalUID?: boolean | number
    /** Percentage of empty values for iCalUID */
    percentageEmptyICalUID?: boolean | number
    /** Percentage of non-empty values for iCalUID */
    percentageNotEmptyICalUID?: boolean | number
    /** Number of unique values for conferenceSolution */
    countUniqueValuesConferenceSolution?: boolean | number
    /** Number of empty values for conferenceSolution */
    countEmptyConferenceSolution?: boolean | number
    /** Number of non-empty values for conferenceSolution */
    countNotEmptyConferenceSolution?: boolean | number
    /** Percentage of empty values for conferenceSolution */
    percentageEmptyConferenceSolution?: boolean | number
    /** Percentage of non-empty values for conferenceSolution */
    percentageNotEmptyConferenceSolution?: boolean | number
    /** Number of unique values for conferenceLink */
    countUniqueValuesConferenceLink?: boolean | number
    /** Number of empty values for conferenceLink */
    countEmptyConferenceLink?: boolean | number
    /** Number of non-empty values for conferenceLink */
    countNotEmptyConferenceLink?: boolean | number
    /** Percentage of empty values for conferenceLink */
    percentageEmptyConferenceLink?: boolean | number
    /** Percentage of non-empty values for conferenceLink */
    percentageNotEmptyConferenceLink?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarEventEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CalendarEventRelationInput {
/** Connect to a calendarEvent record */
connect?: (CalendarEventConnectInput | null),
/** Disconnect from a calendarEvent record */
disconnect?: (Scalars['Boolean'] | null)}

export interface CalendarEventConnectInput {
/** Find a calendarEvent record based on its unique fields: id */
where?: (CalendarEventWhereUniqueInput | null)}

export interface CalendarEventWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Calendar events */
export interface CalendarEventCreateInput {
/** Title */
title?: (Scalars['String'] | null),
/** Is canceled */
isCanceled?: (Scalars['Boolean'] | null),
/** Is Full Day */
isFullDay?: (Scalars['Boolean'] | null),
/** Start Date */
startsAt?: (Scalars['DateTime'] | null),
/** End Date */
endsAt?: (Scalars['DateTime'] | null),
/** Creation DateTime */
externalCreatedAt?: (Scalars['DateTime'] | null),
/** Update DateTime */
externalUpdatedAt?: (Scalars['DateTime'] | null),
/** Description */
description?: (Scalars['String'] | null),
/** Location */
location?: (Scalars['String'] | null),
/** iCal UID */
iCalUID?: (Scalars['String'] | null),
/** Conference Solution */
conferenceSolution?: (Scalars['String'] | null),
/** Meet Link */
conferenceLink?: (LinksCreateInput | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** Calendar events */
export interface CalendarEventUpdateInput {
/** Title */
title?: (Scalars['String'] | null),
/** Is canceled */
isCanceled?: (Scalars['Boolean'] | null),
/** Is Full Day */
isFullDay?: (Scalars['Boolean'] | null),
/** Start Date */
startsAt?: (Scalars['DateTime'] | null),
/** End Date */
endsAt?: (Scalars['DateTime'] | null),
/** Creation DateTime */
externalCreatedAt?: (Scalars['DateTime'] | null),
/** Update DateTime */
externalUpdatedAt?: (Scalars['DateTime'] | null),
/** Description */
description?: (Scalars['String'] | null),
/** Location */
location?: (Scalars['String'] | null),
/** iCal UID */
iCalUID?: (Scalars['String'] | null),
/** Conference Solution */
conferenceSolution?: (Scalars['String'] | null),
/** Meet Link */
conferenceLink?: (LinksUpdateInput | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** Calendar events */
export interface CalendarEventFilterInput {
/** Title */
title?: (StringFilter | null),
/** Is canceled */
isCanceled?: (BooleanFilter | null),
/** Is Full Day */
isFullDay?: (BooleanFilter | null),
/** Start Date */
startsAt?: (DateFilter | null),
/** End Date */
endsAt?: (DateFilter | null),
/** Creation DateTime */
externalCreatedAt?: (DateFilter | null),
/** Update DateTime */
externalUpdatedAt?: (DateFilter | null),
/** Description */
description?: (StringFilter | null),
/** Location */
location?: (StringFilter | null),
/** iCal UID */
iCalUID?: (StringFilter | null),
/** Conference Solution */
conferenceSolution?: (StringFilter | null),
/** Meet Link */
conferenceLink?: (LinksFilterInput | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((CalendarEventFilterInput | null)[] | null),or?: ((CalendarEventFilterInput | null)[] | null),not?: (CalendarEventFilterInput | null)}

export interface BooleanFilter {eq?: (Scalars['Boolean'] | null),is?: (FilterIs | null)}


/** Calendar events */
export interface CalendarEventOrderByInput {
/** Title */
title?: (OrderByDirection | null),
/** Is canceled */
isCanceled?: (OrderByDirection | null),
/** Is Full Day */
isFullDay?: (OrderByDirection | null),
/** Start Date */
startsAt?: (OrderByDirection | null),
/** End Date */
endsAt?: (OrderByDirection | null),
/** Creation DateTime */
externalCreatedAt?: (OrderByDirection | null),
/** Update DateTime */
externalUpdatedAt?: (OrderByDirection | null),
/** Description */
description?: (OrderByDirection | null),
/** Location */
location?: (OrderByDirection | null),
/** iCal UID */
iCalUID?: (OrderByDirection | null),
/** Conference Solution */
conferenceSolution?: (OrderByDirection | null),
/** Meet Link */
conferenceLink?: (LinksOrderByInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** Calendar events */
export interface CalendarEventOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (CalendarEventOrderByWithGroupByAggregateInput | null),
/** Title */
title?: (OrderByDirection | null),
/** Is canceled */
isCanceled?: (OrderByDirection | null),
/** Is Full Day */
isFullDay?: (OrderByDirection | null),
/** Start Date */
startsAt?: (OrderByDateGranularityInput | null),
/** End Date */
endsAt?: (OrderByDateGranularityInput | null),
/** Creation DateTime */
externalCreatedAt?: (OrderByDateGranularityInput | null),
/** Update DateTime */
externalUpdatedAt?: (OrderByDateGranularityInput | null),
/** Description */
description?: (OrderByDirection | null),
/** Location */
location?: (OrderByDirection | null),
/** iCal UID */
iCalUID?: (OrderByDirection | null),
/** Conference Solution */
conferenceSolution?: (OrderByDirection | null),
/** Meet Link */
conferenceLink?: (LinksOrderByInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface CalendarEventOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for title */
countUniqueValuesTitle?: (OrderByDirection | null),
/** Number of empty values for title */
countEmptyTitle?: (OrderByDirection | null),
/** Number of non-empty values for title */
countNotEmptyTitle?: (OrderByDirection | null),
/** Percentage of empty values for title */
percentageEmptyTitle?: (OrderByDirection | null),
/** Percentage of non-empty values for title */
percentageNotEmptyTitle?: (OrderByDirection | null),
/** Number of unique values for isCanceled */
countUniqueValuesIsCanceled?: (OrderByDirection | null),
/** Number of empty values for isCanceled */
countEmptyIsCanceled?: (OrderByDirection | null),
/** Number of non-empty values for isCanceled */
countNotEmptyIsCanceled?: (OrderByDirection | null),
/** Percentage of empty values for isCanceled */
percentageEmptyIsCanceled?: (OrderByDirection | null),
/** Percentage of non-empty values for isCanceled */
percentageNotEmptyIsCanceled?: (OrderByDirection | null),
/** Count of true values in the field isCanceled */
countTrueIsCanceled?: (OrderByDirection | null),
/** Count of false values in the field isCanceled */
countFalseIsCanceled?: (OrderByDirection | null),
/** Number of unique values for isFullDay */
countUniqueValuesIsFullDay?: (OrderByDirection | null),
/** Number of empty values for isFullDay */
countEmptyIsFullDay?: (OrderByDirection | null),
/** Number of non-empty values for isFullDay */
countNotEmptyIsFullDay?: (OrderByDirection | null),
/** Percentage of empty values for isFullDay */
percentageEmptyIsFullDay?: (OrderByDirection | null),
/** Percentage of non-empty values for isFullDay */
percentageNotEmptyIsFullDay?: (OrderByDirection | null),
/** Count of true values in the field isFullDay */
countTrueIsFullDay?: (OrderByDirection | null),
/** Count of false values in the field isFullDay */
countFalseIsFullDay?: (OrderByDirection | null),
/** Number of unique values for startsAt */
countUniqueValuesStartsAt?: (OrderByDirection | null),
/** Number of empty values for startsAt */
countEmptyStartsAt?: (OrderByDirection | null),
/** Number of non-empty values for startsAt */
countNotEmptyStartsAt?: (OrderByDirection | null),
/** Percentage of empty values for startsAt */
percentageEmptyStartsAt?: (OrderByDirection | null),
/** Percentage of non-empty values for startsAt */
percentageNotEmptyStartsAt?: (OrderByDirection | null),
/** Earliest date contained in the field startsAt */
minStartsAt?: (OrderByDirection | null),
/** Latest date contained in the field startsAt */
maxStartsAt?: (OrderByDirection | null),
/** Number of unique values for endsAt */
countUniqueValuesEndsAt?: (OrderByDirection | null),
/** Number of empty values for endsAt */
countEmptyEndsAt?: (OrderByDirection | null),
/** Number of non-empty values for endsAt */
countNotEmptyEndsAt?: (OrderByDirection | null),
/** Percentage of empty values for endsAt */
percentageEmptyEndsAt?: (OrderByDirection | null),
/** Percentage of non-empty values for endsAt */
percentageNotEmptyEndsAt?: (OrderByDirection | null),
/** Earliest date contained in the field endsAt */
minEndsAt?: (OrderByDirection | null),
/** Latest date contained in the field endsAt */
maxEndsAt?: (OrderByDirection | null),
/** Number of unique values for externalCreatedAt */
countUniqueValuesExternalCreatedAt?: (OrderByDirection | null),
/** Number of empty values for externalCreatedAt */
countEmptyExternalCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for externalCreatedAt */
countNotEmptyExternalCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for externalCreatedAt */
percentageEmptyExternalCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for externalCreatedAt */
percentageNotEmptyExternalCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field externalCreatedAt */
minExternalCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field externalCreatedAt */
maxExternalCreatedAt?: (OrderByDirection | null),
/** Number of unique values for externalUpdatedAt */
countUniqueValuesExternalUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for externalUpdatedAt */
countEmptyExternalUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for externalUpdatedAt */
countNotEmptyExternalUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for externalUpdatedAt */
percentageEmptyExternalUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for externalUpdatedAt */
percentageNotEmptyExternalUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field externalUpdatedAt */
minExternalUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field externalUpdatedAt */
maxExternalUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for description */
countUniqueValuesDescription?: (OrderByDirection | null),
/** Number of empty values for description */
countEmptyDescription?: (OrderByDirection | null),
/** Number of non-empty values for description */
countNotEmptyDescription?: (OrderByDirection | null),
/** Percentage of empty values for description */
percentageEmptyDescription?: (OrderByDirection | null),
/** Percentage of non-empty values for description */
percentageNotEmptyDescription?: (OrderByDirection | null),
/** Number of unique values for location */
countUniqueValuesLocation?: (OrderByDirection | null),
/** Number of empty values for location */
countEmptyLocation?: (OrderByDirection | null),
/** Number of non-empty values for location */
countNotEmptyLocation?: (OrderByDirection | null),
/** Percentage of empty values for location */
percentageEmptyLocation?: (OrderByDirection | null),
/** Percentage of non-empty values for location */
percentageNotEmptyLocation?: (OrderByDirection | null),
/** Number of unique values for iCalUID */
countUniqueValuesICalUID?: (OrderByDirection | null),
/** Number of empty values for iCalUID */
countEmptyICalUID?: (OrderByDirection | null),
/** Number of non-empty values for iCalUID */
countNotEmptyICalUID?: (OrderByDirection | null),
/** Percentage of empty values for iCalUID */
percentageEmptyICalUID?: (OrderByDirection | null),
/** Percentage of non-empty values for iCalUID */
percentageNotEmptyICalUID?: (OrderByDirection | null),
/** Number of unique values for conferenceSolution */
countUniqueValuesConferenceSolution?: (OrderByDirection | null),
/** Number of empty values for conferenceSolution */
countEmptyConferenceSolution?: (OrderByDirection | null),
/** Number of non-empty values for conferenceSolution */
countNotEmptyConferenceSolution?: (OrderByDirection | null),
/** Percentage of empty values for conferenceSolution */
percentageEmptyConferenceSolution?: (OrderByDirection | null),
/** Percentage of non-empty values for conferenceSolution */
percentageNotEmptyConferenceSolution?: (OrderByDirection | null),
/** Number of unique values for conferenceLink */
countUniqueValuesConferenceLink?: (OrderByDirection | null),
/** Number of empty values for conferenceLink */
countEmptyConferenceLink?: (OrderByDirection | null),
/** Number of non-empty values for conferenceLink */
countNotEmptyConferenceLink?: (OrderByDirection | null),
/** Percentage of empty values for conferenceLink */
percentageEmptyConferenceLink?: (OrderByDirection | null),
/** Percentage of non-empty values for conferenceLink */
percentageNotEmptyConferenceLink?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** Calendar events */
export interface CalendarEventGroupByInput {
/** Title */
title?: (Scalars['Boolean'] | null),
/** Is canceled */
isCanceled?: (Scalars['Boolean'] | null),
/** Is Full Day */
isFullDay?: (Scalars['Boolean'] | null),
/** Start Date */
startsAt?: (GroupByDateGranularityInput | null),
/** End Date */
endsAt?: (GroupByDateGranularityInput | null),
/** Creation DateTime */
externalCreatedAt?: (GroupByDateGranularityInput | null),
/** Update DateTime */
externalUpdatedAt?: (GroupByDateGranularityInput | null),
/** Description */
description?: (Scalars['Boolean'] | null),
/** Location */
location?: (Scalars['Boolean'] | null),
/** iCal UID */
iCalUID?: (Scalars['Boolean'] | null),
/** Conference Solution */
conferenceSolution?: (Scalars['Boolean'] | null),
/** Meet Link */
conferenceLink?: (LinksGroupByInput | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** Calendar Channels */
export interface CalendarChannelGenqlSelection{
    /** Handle */
    handle?: boolean | number
    /** Sync status */
    syncStatus?: boolean | number
    /** Sync stage */
    syncStage?: boolean | number
    /** Visibility */
    visibility?: boolean | number
    /** Is Contact Auto Creation Enabled */
    isContactAutoCreationEnabled?: boolean | number
    /** Automatically create records for people you participated with in an event. */
    contactAutoCreationPolicy?: boolean | number
    /** Is Sync Enabled */
    isSyncEnabled?: boolean | number
    /** Sync Cursor. Used for syncing events from the calendar provider */
    syncCursor?: boolean | number
    /** Last sync date */
    syncedAt?: boolean | number
    /** Sync stage started at */
    syncStageStartedAt?: boolean | number
    /** Throttle Failure Count */
    throttleFailureCount?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Connected Account */
    connectedAccountId?: boolean | number
    /** Connected Account */
    connectedAccount?: ConnectedAccountGenqlSelection
    /** Calendar Channel Event Associations */
    calendarChannelEventAssociations?: (CalendarChannelEventAssociationConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarChannelEventAssociationFilterInput | null), orderBy?: ((CalendarChannelEventAssociationOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar Channels */
export interface CalendarChannelEdgeGenqlSelection{
    node?: CalendarChannelGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar Channels */
export interface CalendarChannelConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: boolean | number
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: boolean | number
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: boolean | number
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: boolean | number
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: boolean | number
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: boolean | number
    /** Number of empty values for syncStage */
    countEmptySyncStage?: boolean | number
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: boolean | number
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: boolean | number
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: boolean | number
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: boolean | number
    /** Number of empty values for visibility */
    countEmptyVisibility?: boolean | number
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: boolean | number
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: boolean | number
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: boolean | number
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: boolean | number
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: boolean | number
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: boolean | number
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: boolean | number
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: boolean | number
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: boolean | number
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: boolean | number
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: boolean | number
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: boolean | number
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: boolean | number
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: boolean | number
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: boolean | number
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: boolean | number
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: boolean | number
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: boolean | number
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: boolean | number
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: boolean | number
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: boolean | number
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: boolean | number
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: boolean | number
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: boolean | number
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: boolean | number
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: boolean | number
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: boolean | number
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: boolean | number
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: boolean | number
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: boolean | number
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: boolean | number
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: boolean | number
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: boolean | number
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: boolean | number
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: boolean | number
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: boolean | number
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: boolean | number
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: boolean | number
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: boolean | number
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: boolean | number
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: boolean | number
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarChannelEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar Channels */
export interface CalendarChannelGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: boolean | number
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: boolean | number
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: boolean | number
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: boolean | number
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: boolean | number
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: boolean | number
    /** Number of empty values for syncStage */
    countEmptySyncStage?: boolean | number
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: boolean | number
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: boolean | number
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: boolean | number
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: boolean | number
    /** Number of empty values for visibility */
    countEmptyVisibility?: boolean | number
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: boolean | number
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: boolean | number
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: boolean | number
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: boolean | number
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: boolean | number
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: boolean | number
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: boolean | number
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: boolean | number
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: boolean | number
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: boolean | number
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: boolean | number
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: boolean | number
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: boolean | number
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: boolean | number
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: boolean | number
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: boolean | number
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: boolean | number
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: boolean | number
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: boolean | number
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: boolean | number
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: boolean | number
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: boolean | number
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: boolean | number
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: boolean | number
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: boolean | number
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: boolean | number
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: boolean | number
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: boolean | number
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: boolean | number
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: boolean | number
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: boolean | number
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: boolean | number
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: boolean | number
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: boolean | number
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: boolean | number
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: boolean | number
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: boolean | number
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: boolean | number
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: boolean | number
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: boolean | number
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: boolean | number
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarChannelEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CalendarChannelRelationInput {
/** Connect to a calendarChannel record */
connect?: (CalendarChannelConnectInput | null),
/** Disconnect from a calendarChannel record */
disconnect?: (Scalars['Boolean'] | null)}

export interface CalendarChannelConnectInput {
/** Find a calendarChannel record based on its unique fields: id */
where?: (CalendarChannelWhereUniqueInput | null)}

export interface CalendarChannelWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Calendar Channels */
export interface CalendarChannelCreateInput {
/** Handle */
handle?: (Scalars['String'] | null),
/** Sync status */
syncStatus?: (CalendarChannelSyncStatusEnum | null),
/** Sync stage */
syncStage?: (CalendarChannelSyncStageEnum | null),
/** Visibility */
visibility?: (CalendarChannelVisibilityEnum | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (Scalars['Boolean'] | null),
/** Automatically create records for people you participated with in an event. */
contactAutoCreationPolicy?: (CalendarChannelContactAutoCreationPolicyEnum | null),
/** Is Sync Enabled */
isSyncEnabled?: (Scalars['Boolean'] | null),
/** Sync Cursor. Used for syncing events from the calendar provider */
syncCursor?: (Scalars['String'] | null),
/** Last sync date */
syncedAt?: (Scalars['DateTime'] | null),
/** Sync stage started at */
syncStageStartedAt?: (Scalars['DateTime'] | null),
/** Throttle Failure Count */
throttleFailureCount?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Connected Account */
connectedAccountId?: (Scalars['ID'] | null),
/** Connected Account */
connectedAccount?: (ConnectedAccountRelationInput | null)}


/** Calendar Channels */
export interface CalendarChannelUpdateInput {
/** Handle */
handle?: (Scalars['String'] | null),
/** Sync status */
syncStatus?: (CalendarChannelSyncStatusEnum | null),
/** Sync stage */
syncStage?: (CalendarChannelSyncStageEnum | null),
/** Visibility */
visibility?: (CalendarChannelVisibilityEnum | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (Scalars['Boolean'] | null),
/** Automatically create records for people you participated with in an event. */
contactAutoCreationPolicy?: (CalendarChannelContactAutoCreationPolicyEnum | null),
/** Is Sync Enabled */
isSyncEnabled?: (Scalars['Boolean'] | null),
/** Sync Cursor. Used for syncing events from the calendar provider */
syncCursor?: (Scalars['String'] | null),
/** Last sync date */
syncedAt?: (Scalars['DateTime'] | null),
/** Sync stage started at */
syncStageStartedAt?: (Scalars['DateTime'] | null),
/** Throttle Failure Count */
throttleFailureCount?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Connected Account */
connectedAccountId?: (Scalars['ID'] | null),
/** Connected Account */
connectedAccount?: (ConnectedAccountRelationInput | null)}


/** Calendar Channels */
export interface CalendarChannelFilterInput {
/** Handle */
handle?: (StringFilter | null),
/** Sync status */
syncStatus?: (CalendarChannelSyncStatusEnumFilter | null),
/** Sync stage */
syncStage?: (CalendarChannelSyncStageEnumFilter | null),
/** Visibility */
visibility?: (CalendarChannelVisibilityEnumFilter | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (BooleanFilter | null),
/** Automatically create records for people you participated with in an event. */
contactAutoCreationPolicy?: (CalendarChannelContactAutoCreationPolicyEnumFilter | null),
/** Is Sync Enabled */
isSyncEnabled?: (BooleanFilter | null),
/** Sync Cursor. Used for syncing events from the calendar provider */
syncCursor?: (StringFilter | null),
/** Last sync date */
syncedAt?: (DateFilter | null),
/** Sync stage started at */
syncStageStartedAt?: (DateFilter | null),
/** Throttle Failure Count */
throttleFailureCount?: (FloatFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Connected Account */
connectedAccountId?: (UUIDFilter | null),and?: ((CalendarChannelFilterInput | null)[] | null),or?: ((CalendarChannelFilterInput | null)[] | null),not?: (CalendarChannelFilterInput | null)}

export interface CalendarChannelSyncStatusEnumFilter {eq?: (CalendarChannelSyncStatusEnum | null),neq?: (CalendarChannelSyncStatusEnum | null),in?: ((CalendarChannelSyncStatusEnum | null)[] | null),containsAny?: ((CalendarChannelSyncStatusEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface CalendarChannelSyncStageEnumFilter {eq?: (CalendarChannelSyncStageEnum | null),neq?: (CalendarChannelSyncStageEnum | null),in?: ((CalendarChannelSyncStageEnum | null)[] | null),containsAny?: ((CalendarChannelSyncStageEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface CalendarChannelVisibilityEnumFilter {eq?: (CalendarChannelVisibilityEnum | null),neq?: (CalendarChannelVisibilityEnum | null),in?: ((CalendarChannelVisibilityEnum | null)[] | null),containsAny?: ((CalendarChannelVisibilityEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface CalendarChannelContactAutoCreationPolicyEnumFilter {eq?: (CalendarChannelContactAutoCreationPolicyEnum | null),neq?: (CalendarChannelContactAutoCreationPolicyEnum | null),in?: ((CalendarChannelContactAutoCreationPolicyEnum | null)[] | null),containsAny?: ((CalendarChannelContactAutoCreationPolicyEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface FloatFilter {eq?: (Scalars['Float'] | null),gt?: (Scalars['Float'] | null),gte?: (Scalars['Float'] | null),in?: (Scalars['Float'][] | null),lt?: (Scalars['Float'] | null),lte?: (Scalars['Float'] | null),neq?: (Scalars['Float'] | null),is?: (FilterIs | null)}


/** Calendar Channels */
export interface CalendarChannelOrderByInput {
/** Handle */
handle?: (OrderByDirection | null),
/** Sync status */
syncStatus?: (OrderByDirection | null),
/** Sync stage */
syncStage?: (OrderByDirection | null),
/** Visibility */
visibility?: (OrderByDirection | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (OrderByDirection | null),
/** Automatically create records for people you participated with in an event. */
contactAutoCreationPolicy?: (OrderByDirection | null),
/** Is Sync Enabled */
isSyncEnabled?: (OrderByDirection | null),
/** Sync Cursor. Used for syncing events from the calendar provider */
syncCursor?: (OrderByDirection | null),
/** Last sync date */
syncedAt?: (OrderByDirection | null),
/** Sync stage started at */
syncStageStartedAt?: (OrderByDirection | null),
/** Throttle Failure Count */
throttleFailureCount?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Connected Account */
connectedAccountId?: (OrderByDirection | null)}


/** Calendar Channels */
export interface CalendarChannelOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (CalendarChannelOrderByWithGroupByAggregateInput | null),
/** Handle */
handle?: (OrderByDirection | null),
/** Sync status */
syncStatus?: (OrderByDirection | null),
/** Sync stage */
syncStage?: (OrderByDirection | null),
/** Visibility */
visibility?: (OrderByDirection | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (OrderByDirection | null),
/** Automatically create records for people you participated with in an event. */
contactAutoCreationPolicy?: (OrderByDirection | null),
/** Is Sync Enabled */
isSyncEnabled?: (OrderByDirection | null),
/** Sync Cursor. Used for syncing events from the calendar provider */
syncCursor?: (OrderByDirection | null),
/** Last sync date */
syncedAt?: (OrderByDateGranularityInput | null),
/** Sync stage started at */
syncStageStartedAt?: (OrderByDateGranularityInput | null),
/** Throttle Failure Count */
throttleFailureCount?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Connected Account */
connectedAccountId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface CalendarChannelOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for handle */
countUniqueValuesHandle?: (OrderByDirection | null),
/** Number of empty values for handle */
countEmptyHandle?: (OrderByDirection | null),
/** Number of non-empty values for handle */
countNotEmptyHandle?: (OrderByDirection | null),
/** Percentage of empty values for handle */
percentageEmptyHandle?: (OrderByDirection | null),
/** Percentage of non-empty values for handle */
percentageNotEmptyHandle?: (OrderByDirection | null),
/** Number of unique values for syncStatus */
countUniqueValuesSyncStatus?: (OrderByDirection | null),
/** Number of empty values for syncStatus */
countEmptySyncStatus?: (OrderByDirection | null),
/** Number of non-empty values for syncStatus */
countNotEmptySyncStatus?: (OrderByDirection | null),
/** Percentage of empty values for syncStatus */
percentageEmptySyncStatus?: (OrderByDirection | null),
/** Percentage of non-empty values for syncStatus */
percentageNotEmptySyncStatus?: (OrderByDirection | null),
/** Number of unique values for syncStage */
countUniqueValuesSyncStage?: (OrderByDirection | null),
/** Number of empty values for syncStage */
countEmptySyncStage?: (OrderByDirection | null),
/** Number of non-empty values for syncStage */
countNotEmptySyncStage?: (OrderByDirection | null),
/** Percentage of empty values for syncStage */
percentageEmptySyncStage?: (OrderByDirection | null),
/** Percentage of non-empty values for syncStage */
percentageNotEmptySyncStage?: (OrderByDirection | null),
/** Number of unique values for visibility */
countUniqueValuesVisibility?: (OrderByDirection | null),
/** Number of empty values for visibility */
countEmptyVisibility?: (OrderByDirection | null),
/** Number of non-empty values for visibility */
countNotEmptyVisibility?: (OrderByDirection | null),
/** Percentage of empty values for visibility */
percentageEmptyVisibility?: (OrderByDirection | null),
/** Percentage of non-empty values for visibility */
percentageNotEmptyVisibility?: (OrderByDirection | null),
/** Number of unique values for isContactAutoCreationEnabled */
countUniqueValuesIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Number of empty values for isContactAutoCreationEnabled */
countEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Number of non-empty values for isContactAutoCreationEnabled */
countNotEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Percentage of empty values for isContactAutoCreationEnabled */
percentageEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Percentage of non-empty values for isContactAutoCreationEnabled */
percentageNotEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Count of true values in the field isContactAutoCreationEnabled */
countTrueIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Count of false values in the field isContactAutoCreationEnabled */
countFalseIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Number of unique values for contactAutoCreationPolicy */
countUniqueValuesContactAutoCreationPolicy?: (OrderByDirection | null),
/** Number of empty values for contactAutoCreationPolicy */
countEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Number of non-empty values for contactAutoCreationPolicy */
countNotEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Percentage of empty values for contactAutoCreationPolicy */
percentageEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Percentage of non-empty values for contactAutoCreationPolicy */
percentageNotEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Number of unique values for isSyncEnabled */
countUniqueValuesIsSyncEnabled?: (OrderByDirection | null),
/** Number of empty values for isSyncEnabled */
countEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Number of non-empty values for isSyncEnabled */
countNotEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Percentage of empty values for isSyncEnabled */
percentageEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Percentage of non-empty values for isSyncEnabled */
percentageNotEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Count of true values in the field isSyncEnabled */
countTrueIsSyncEnabled?: (OrderByDirection | null),
/** Count of false values in the field isSyncEnabled */
countFalseIsSyncEnabled?: (OrderByDirection | null),
/** Number of unique values for syncCursor */
countUniqueValuesSyncCursor?: (OrderByDirection | null),
/** Number of empty values for syncCursor */
countEmptySyncCursor?: (OrderByDirection | null),
/** Number of non-empty values for syncCursor */
countNotEmptySyncCursor?: (OrderByDirection | null),
/** Percentage of empty values for syncCursor */
percentageEmptySyncCursor?: (OrderByDirection | null),
/** Percentage of non-empty values for syncCursor */
percentageNotEmptySyncCursor?: (OrderByDirection | null),
/** Number of unique values for syncedAt */
countUniqueValuesSyncedAt?: (OrderByDirection | null),
/** Number of empty values for syncedAt */
countEmptySyncedAt?: (OrderByDirection | null),
/** Number of non-empty values for syncedAt */
countNotEmptySyncedAt?: (OrderByDirection | null),
/** Percentage of empty values for syncedAt */
percentageEmptySyncedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for syncedAt */
percentageNotEmptySyncedAt?: (OrderByDirection | null),
/** Earliest date contained in the field syncedAt */
minSyncedAt?: (OrderByDirection | null),
/** Latest date contained in the field syncedAt */
maxSyncedAt?: (OrderByDirection | null),
/** Number of unique values for syncStageStartedAt */
countUniqueValuesSyncStageStartedAt?: (OrderByDirection | null),
/** Number of empty values for syncStageStartedAt */
countEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Number of non-empty values for syncStageStartedAt */
countNotEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Percentage of empty values for syncStageStartedAt */
percentageEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for syncStageStartedAt */
percentageNotEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Earliest date contained in the field syncStageStartedAt */
minSyncStageStartedAt?: (OrderByDirection | null),
/** Latest date contained in the field syncStageStartedAt */
maxSyncStageStartedAt?: (OrderByDirection | null),
/** Number of unique values for throttleFailureCount */
countUniqueValuesThrottleFailureCount?: (OrderByDirection | null),
/** Number of empty values for throttleFailureCount */
countEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Number of non-empty values for throttleFailureCount */
countNotEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Percentage of empty values for throttleFailureCount */
percentageEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Percentage of non-empty values for throttleFailureCount */
percentageNotEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Minimum amount contained in the field throttleFailureCount */
minThrottleFailureCount?: (OrderByDirection | null),
/** Maximum amount contained in the field throttleFailureCount */
maxThrottleFailureCount?: (OrderByDirection | null),
/** Average amount contained in the field throttleFailureCount */
avgThrottleFailureCount?: (OrderByDirection | null),
/** Sum of amounts contained in the field throttleFailureCount */
sumThrottleFailureCount?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Connected Account */
connectedAccountId?: (OrderByDirection | null)}


/** Calendar Channels */
export interface CalendarChannelGroupByInput {
/** Handle */
handle?: (Scalars['Boolean'] | null),
/** Sync status */
syncStatus?: (Scalars['Boolean'] | null),
/** Sync stage */
syncStage?: (Scalars['Boolean'] | null),
/** Visibility */
visibility?: (Scalars['Boolean'] | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (Scalars['Boolean'] | null),
/** Automatically create records for people you participated with in an event. */
contactAutoCreationPolicy?: (Scalars['Boolean'] | null),
/** Is Sync Enabled */
isSyncEnabled?: (Scalars['Boolean'] | null),
/** Sync Cursor. Used for syncing events from the calendar provider */
syncCursor?: (Scalars['Boolean'] | null),
/** Last sync date */
syncedAt?: (GroupByDateGranularityInput | null),
/** Sync stage started at */
syncStageStartedAt?: (GroupByDateGranularityInput | null),
/** Throttle Failure Count */
throttleFailureCount?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Connected Account */
connectedAccountId?: (Scalars['Boolean'] | null)}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationGenqlSelection{
    /** Event external ID */
    eventExternalId?: boolean | number
    /** Recurring Event ID */
    recurringEventExternalId?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Channel ID */
    calendarChannelId?: boolean | number
    /** Event ID */
    calendarEventId?: boolean | number
    /** Channel ID */
    calendarChannel?: CalendarChannelGenqlSelection
    /** Event ID */
    calendarEvent?: CalendarEventGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationEdgeGenqlSelection{
    node?: CalendarChannelEventAssociationGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for eventExternalId */
    countUniqueValuesEventExternalId?: boolean | number
    /** Number of empty values for eventExternalId */
    countEmptyEventExternalId?: boolean | number
    /** Number of non-empty values for eventExternalId */
    countNotEmptyEventExternalId?: boolean | number
    /** Percentage of empty values for eventExternalId */
    percentageEmptyEventExternalId?: boolean | number
    /** Percentage of non-empty values for eventExternalId */
    percentageNotEmptyEventExternalId?: boolean | number
    /** Number of unique values for recurringEventExternalId */
    countUniqueValuesRecurringEventExternalId?: boolean | number
    /** Number of empty values for recurringEventExternalId */
    countEmptyRecurringEventExternalId?: boolean | number
    /** Number of non-empty values for recurringEventExternalId */
    countNotEmptyRecurringEventExternalId?: boolean | number
    /** Percentage of empty values for recurringEventExternalId */
    percentageEmptyRecurringEventExternalId?: boolean | number
    /** Percentage of non-empty values for recurringEventExternalId */
    percentageNotEmptyRecurringEventExternalId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarChannelEventAssociationEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for eventExternalId */
    countUniqueValuesEventExternalId?: boolean | number
    /** Number of empty values for eventExternalId */
    countEmptyEventExternalId?: boolean | number
    /** Number of non-empty values for eventExternalId */
    countNotEmptyEventExternalId?: boolean | number
    /** Percentage of empty values for eventExternalId */
    percentageEmptyEventExternalId?: boolean | number
    /** Percentage of non-empty values for eventExternalId */
    percentageNotEmptyEventExternalId?: boolean | number
    /** Number of unique values for recurringEventExternalId */
    countUniqueValuesRecurringEventExternalId?: boolean | number
    /** Number of empty values for recurringEventExternalId */
    countEmptyRecurringEventExternalId?: boolean | number
    /** Number of non-empty values for recurringEventExternalId */
    countNotEmptyRecurringEventExternalId?: boolean | number
    /** Percentage of empty values for recurringEventExternalId */
    percentageEmptyRecurringEventExternalId?: boolean | number
    /** Percentage of non-empty values for recurringEventExternalId */
    percentageNotEmptyRecurringEventExternalId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarChannelEventAssociationEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CalendarChannelEventAssociationRelationInput {
/** Connect to a calendarChannelEventAssociation record */
connect?: (CalendarChannelEventAssociationConnectInput | null),
/** Disconnect from a calendarChannelEventAssociation record */
disconnect?: (Scalars['Boolean'] | null)}

export interface CalendarChannelEventAssociationConnectInput {
/** Find a calendarChannelEventAssociation record based on its unique fields: id */
where?: (CalendarChannelEventAssociationWhereUniqueInput | null)}

export interface CalendarChannelEventAssociationWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationCreateInput {
/** Event external ID */
eventExternalId?: (Scalars['String'] | null),
/** Recurring Event ID */
recurringEventExternalId?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Channel ID */
calendarChannelId?: (Scalars['ID'] | null),
/** Channel ID */
calendarChannel?: (CalendarChannelRelationInput | null),
/** Event ID */
calendarEventId?: (Scalars['ID'] | null),
/** Event ID */
calendarEvent?: (CalendarEventRelationInput | null)}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationUpdateInput {
/** Event external ID */
eventExternalId?: (Scalars['String'] | null),
/** Recurring Event ID */
recurringEventExternalId?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Channel ID */
calendarChannelId?: (Scalars['ID'] | null),
/** Channel ID */
calendarChannel?: (CalendarChannelRelationInput | null),
/** Event ID */
calendarEventId?: (Scalars['ID'] | null),
/** Event ID */
calendarEvent?: (CalendarEventRelationInput | null)}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationFilterInput {
/** Event external ID */
eventExternalId?: (StringFilter | null),
/** Recurring Event ID */
recurringEventExternalId?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Channel ID */
calendarChannelId?: (UUIDFilter | null),
/** Event ID */
calendarEventId?: (UUIDFilter | null),and?: ((CalendarChannelEventAssociationFilterInput | null)[] | null),or?: ((CalendarChannelEventAssociationFilterInput | null)[] | null),not?: (CalendarChannelEventAssociationFilterInput | null)}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationOrderByInput {
/** Event external ID */
eventExternalId?: (OrderByDirection | null),
/** Recurring Event ID */
recurringEventExternalId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Channel ID */
calendarChannelId?: (OrderByDirection | null),
/** Event ID */
calendarEventId?: (OrderByDirection | null)}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (CalendarChannelEventAssociationOrderByWithGroupByAggregateInput | null),
/** Event external ID */
eventExternalId?: (OrderByDirection | null),
/** Recurring Event ID */
recurringEventExternalId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Channel ID */
calendarChannelId?: (OrderByDirection | null),
/** Event ID */
calendarEventId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface CalendarChannelEventAssociationOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for eventExternalId */
countUniqueValuesEventExternalId?: (OrderByDirection | null),
/** Number of empty values for eventExternalId */
countEmptyEventExternalId?: (OrderByDirection | null),
/** Number of non-empty values for eventExternalId */
countNotEmptyEventExternalId?: (OrderByDirection | null),
/** Percentage of empty values for eventExternalId */
percentageEmptyEventExternalId?: (OrderByDirection | null),
/** Percentage of non-empty values for eventExternalId */
percentageNotEmptyEventExternalId?: (OrderByDirection | null),
/** Number of unique values for recurringEventExternalId */
countUniqueValuesRecurringEventExternalId?: (OrderByDirection | null),
/** Number of empty values for recurringEventExternalId */
countEmptyRecurringEventExternalId?: (OrderByDirection | null),
/** Number of non-empty values for recurringEventExternalId */
countNotEmptyRecurringEventExternalId?: (OrderByDirection | null),
/** Percentage of empty values for recurringEventExternalId */
percentageEmptyRecurringEventExternalId?: (OrderByDirection | null),
/** Percentage of non-empty values for recurringEventExternalId */
percentageNotEmptyRecurringEventExternalId?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Channel ID */
calendarChannelId?: (OrderByDirection | null),
/** Event ID */
calendarEventId?: (OrderByDirection | null)}


/** Calendar Channel Event Associations */
export interface CalendarChannelEventAssociationGroupByInput {
/** Event external ID */
eventExternalId?: (Scalars['Boolean'] | null),
/** Recurring Event ID */
recurringEventExternalId?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Channel ID */
calendarChannelId?: (Scalars['Boolean'] | null),
/** Event ID */
calendarEventId?: (Scalars['Boolean'] | null)}


/** Calendar event participants */
export interface CalendarEventParticipantGenqlSelection{
    /** Handle */
    handle?: boolean | number
    /** Display Name */
    displayName?: boolean | number
    /** Is Organizer */
    isOrganizer?: boolean | number
    /** Response Status */
    responseStatus?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Event ID */
    calendarEventId?: boolean | number
    /** Person */
    personId?: boolean | number
    /** Workspace Member */
    workspaceMemberId?: boolean | number
    /** Event ID */
    calendarEvent?: CalendarEventGenqlSelection
    /** Person */
    person?: PersonGenqlSelection
    /** Workspace Member */
    workspaceMember?: WorkspaceMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar event participants */
export interface CalendarEventParticipantEdgeGenqlSelection{
    node?: CalendarEventParticipantGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar event participants */
export interface CalendarEventParticipantConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: boolean | number
    /** Number of empty values for displayName */
    countEmptyDisplayName?: boolean | number
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: boolean | number
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: boolean | number
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: boolean | number
    /** Number of unique values for isOrganizer */
    countUniqueValuesIsOrganizer?: boolean | number
    /** Number of empty values for isOrganizer */
    countEmptyIsOrganizer?: boolean | number
    /** Number of non-empty values for isOrganizer */
    countNotEmptyIsOrganizer?: boolean | number
    /** Percentage of empty values for isOrganizer */
    percentageEmptyIsOrganizer?: boolean | number
    /** Percentage of non-empty values for isOrganizer */
    percentageNotEmptyIsOrganizer?: boolean | number
    /** Count of true values in the field isOrganizer */
    countTrueIsOrganizer?: boolean | number
    /** Count of false values in the field isOrganizer */
    countFalseIsOrganizer?: boolean | number
    /** Number of unique values for responseStatus */
    countUniqueValuesResponseStatus?: boolean | number
    /** Number of empty values for responseStatus */
    countEmptyResponseStatus?: boolean | number
    /** Number of non-empty values for responseStatus */
    countNotEmptyResponseStatus?: boolean | number
    /** Percentage of empty values for responseStatus */
    percentageEmptyResponseStatus?: boolean | number
    /** Percentage of non-empty values for responseStatus */
    percentageNotEmptyResponseStatus?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarEventParticipantEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Calendar event participants */
export interface CalendarEventParticipantGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: boolean | number
    /** Number of empty values for displayName */
    countEmptyDisplayName?: boolean | number
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: boolean | number
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: boolean | number
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: boolean | number
    /** Number of unique values for isOrganizer */
    countUniqueValuesIsOrganizer?: boolean | number
    /** Number of empty values for isOrganizer */
    countEmptyIsOrganizer?: boolean | number
    /** Number of non-empty values for isOrganizer */
    countNotEmptyIsOrganizer?: boolean | number
    /** Percentage of empty values for isOrganizer */
    percentageEmptyIsOrganizer?: boolean | number
    /** Percentage of non-empty values for isOrganizer */
    percentageNotEmptyIsOrganizer?: boolean | number
    /** Count of true values in the field isOrganizer */
    countTrueIsOrganizer?: boolean | number
    /** Count of false values in the field isOrganizer */
    countFalseIsOrganizer?: boolean | number
    /** Number of unique values for responseStatus */
    countUniqueValuesResponseStatus?: boolean | number
    /** Number of empty values for responseStatus */
    countEmptyResponseStatus?: boolean | number
    /** Number of non-empty values for responseStatus */
    countNotEmptyResponseStatus?: boolean | number
    /** Percentage of empty values for responseStatus */
    percentageEmptyResponseStatus?: boolean | number
    /** Percentage of non-empty values for responseStatus */
    percentageNotEmptyResponseStatus?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: CalendarEventParticipantEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CalendarEventParticipantRelationInput {
/** Connect to a calendarEventParticipant record */
connect?: (CalendarEventParticipantConnectInput | null),
/** Disconnect from a calendarEventParticipant record */
disconnect?: (Scalars['Boolean'] | null)}

export interface CalendarEventParticipantConnectInput {
/** Find a calendarEventParticipant record based on its unique fields: id */
where?: (CalendarEventParticipantWhereUniqueInput | null)}

export interface CalendarEventParticipantWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Calendar event participants */
export interface CalendarEventParticipantCreateInput {
/** Handle */
handle?: (Scalars['String'] | null),
/** Display Name */
displayName?: (Scalars['String'] | null),
/** Is Organizer */
isOrganizer?: (Scalars['Boolean'] | null),
/** Response Status */
responseStatus?: (CalendarEventParticipantResponseStatusEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Event ID */
calendarEventId?: (Scalars['ID'] | null),
/** Event ID */
calendarEvent?: (CalendarEventRelationInput | null),
/** Person */
personId?: (Scalars['ID'] | null),
/** Person */
person?: (PersonRelationInput | null),
/** Workspace Member */
workspaceMemberId?: (Scalars['ID'] | null),
/** Workspace Member */
workspaceMember?: (WorkspaceMemberRelationInput | null)}


/** Calendar event participants */
export interface CalendarEventParticipantUpdateInput {
/** Handle */
handle?: (Scalars['String'] | null),
/** Display Name */
displayName?: (Scalars['String'] | null),
/** Is Organizer */
isOrganizer?: (Scalars['Boolean'] | null),
/** Response Status */
responseStatus?: (CalendarEventParticipantResponseStatusEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Event ID */
calendarEventId?: (Scalars['ID'] | null),
/** Event ID */
calendarEvent?: (CalendarEventRelationInput | null),
/** Person */
personId?: (Scalars['ID'] | null),
/** Person */
person?: (PersonRelationInput | null),
/** Workspace Member */
workspaceMemberId?: (Scalars['ID'] | null),
/** Workspace Member */
workspaceMember?: (WorkspaceMemberRelationInput | null)}


/** Calendar event participants */
export interface CalendarEventParticipantFilterInput {
/** Handle */
handle?: (StringFilter | null),
/** Display Name */
displayName?: (StringFilter | null),
/** Is Organizer */
isOrganizer?: (BooleanFilter | null),
/** Response Status */
responseStatus?: (CalendarEventParticipantResponseStatusEnumFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Event ID */
calendarEventId?: (UUIDFilter | null),
/** Person */
personId?: (UUIDFilter | null),
/** Workspace Member */
workspaceMemberId?: (UUIDFilter | null),and?: ((CalendarEventParticipantFilterInput | null)[] | null),or?: ((CalendarEventParticipantFilterInput | null)[] | null),not?: (CalendarEventParticipantFilterInput | null)}

export interface CalendarEventParticipantResponseStatusEnumFilter {eq?: (CalendarEventParticipantResponseStatusEnum | null),neq?: (CalendarEventParticipantResponseStatusEnum | null),in?: ((CalendarEventParticipantResponseStatusEnum | null)[] | null),containsAny?: ((CalendarEventParticipantResponseStatusEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** Calendar event participants */
export interface CalendarEventParticipantOrderByInput {
/** Handle */
handle?: (OrderByDirection | null),
/** Display Name */
displayName?: (OrderByDirection | null),
/** Is Organizer */
isOrganizer?: (OrderByDirection | null),
/** Response Status */
responseStatus?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Event ID */
calendarEventId?: (OrderByDirection | null),
/** Person */
personId?: (OrderByDirection | null),
/** Workspace Member */
workspaceMemberId?: (OrderByDirection | null)}


/** Calendar event participants */
export interface CalendarEventParticipantOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (CalendarEventParticipantOrderByWithGroupByAggregateInput | null),
/** Handle */
handle?: (OrderByDirection | null),
/** Display Name */
displayName?: (OrderByDirection | null),
/** Is Organizer */
isOrganizer?: (OrderByDirection | null),
/** Response Status */
responseStatus?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Event ID */
calendarEventId?: (OrderByDirection | null),
/** Person */
personId?: (OrderByDirection | null),
/** Workspace Member */
workspaceMemberId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface CalendarEventParticipantOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for handle */
countUniqueValuesHandle?: (OrderByDirection | null),
/** Number of empty values for handle */
countEmptyHandle?: (OrderByDirection | null),
/** Number of non-empty values for handle */
countNotEmptyHandle?: (OrderByDirection | null),
/** Percentage of empty values for handle */
percentageEmptyHandle?: (OrderByDirection | null),
/** Percentage of non-empty values for handle */
percentageNotEmptyHandle?: (OrderByDirection | null),
/** Number of unique values for displayName */
countUniqueValuesDisplayName?: (OrderByDirection | null),
/** Number of empty values for displayName */
countEmptyDisplayName?: (OrderByDirection | null),
/** Number of non-empty values for displayName */
countNotEmptyDisplayName?: (OrderByDirection | null),
/** Percentage of empty values for displayName */
percentageEmptyDisplayName?: (OrderByDirection | null),
/** Percentage of non-empty values for displayName */
percentageNotEmptyDisplayName?: (OrderByDirection | null),
/** Number of unique values for isOrganizer */
countUniqueValuesIsOrganizer?: (OrderByDirection | null),
/** Number of empty values for isOrganizer */
countEmptyIsOrganizer?: (OrderByDirection | null),
/** Number of non-empty values for isOrganizer */
countNotEmptyIsOrganizer?: (OrderByDirection | null),
/** Percentage of empty values for isOrganizer */
percentageEmptyIsOrganizer?: (OrderByDirection | null),
/** Percentage of non-empty values for isOrganizer */
percentageNotEmptyIsOrganizer?: (OrderByDirection | null),
/** Count of true values in the field isOrganizer */
countTrueIsOrganizer?: (OrderByDirection | null),
/** Count of false values in the field isOrganizer */
countFalseIsOrganizer?: (OrderByDirection | null),
/** Number of unique values for responseStatus */
countUniqueValuesResponseStatus?: (OrderByDirection | null),
/** Number of empty values for responseStatus */
countEmptyResponseStatus?: (OrderByDirection | null),
/** Number of non-empty values for responseStatus */
countNotEmptyResponseStatus?: (OrderByDirection | null),
/** Percentage of empty values for responseStatus */
percentageEmptyResponseStatus?: (OrderByDirection | null),
/** Percentage of non-empty values for responseStatus */
percentageNotEmptyResponseStatus?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Event ID */
calendarEventId?: (OrderByDirection | null),
/** Person */
personId?: (OrderByDirection | null),
/** Workspace Member */
workspaceMemberId?: (OrderByDirection | null)}


/** Calendar event participants */
export interface CalendarEventParticipantGroupByInput {
/** Handle */
handle?: (Scalars['Boolean'] | null),
/** Display Name */
displayName?: (Scalars['Boolean'] | null),
/** Is Organizer */
isOrganizer?: (Scalars['Boolean'] | null),
/** Response Status */
responseStatus?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Event ID */
calendarEventId?: (Scalars['Boolean'] | null),
/** Person */
personId?: (Scalars['Boolean'] | null),
/** Workspace Member */
workspaceMemberId?: (Scalars['Boolean'] | null)}


/** A company */
export interface CompanyGenqlSelection{
    /** The company name */
    name?: boolean | number
    /** The company website URL. We use this url to fetch the company icon */
    domainName?: LinksGenqlSelection
    /** Number of employees in the company */
    employees?: boolean | number
    /** The company Linkedin account */
    linkedinLink?: LinksGenqlSelection
    /** The company Twitter/X account */
    xLink?: LinksGenqlSelection
    /** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
    annualRecurringRevenue?: CurrencyGenqlSelection
    /** Address of the company */
    address?: AddressGenqlSelection
    /** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
    idealCustomerProfile?: boolean | number
    /** Company record position */
    position?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Your team member responsible for managing the company account */
    accountOwnerId?: boolean | number
    /** Company's Tagline */
    tagline?: boolean | number
    /** Company's Intro Video */
    introVideo?: LinksGenqlSelection
    /** Company's Work Policy */
    workPolicy?: boolean | number
    /** Company's Visa Sponsorship Policy */
    visaSponsorship?: boolean | number
    /** People linked to the company. */
    people?: (PersonConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (PersonFilterInput | null), orderBy?: ((PersonOrderByInput | null)[] | null)} })
    /** Your team member responsible for managing the company account */
    accountOwner?: WorkspaceMemberGenqlSelection
    /** Tasks tied to the company */
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    /** Notes tied to the company */
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    /** Opportunities linked to the company. */
    opportunities?: (OpportunityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (OpportunityFilterInput | null), orderBy?: ((OpportunityOrderByInput | null)[] | null)} })
    /** Favorites linked to the company */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Attachments linked to the company */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** Timeline Activities linked to the company */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A company */
export interface CompanyEdgeGenqlSelection{
    node?: CompanyGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A company */
export interface CompanyConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for domainName */
    countUniqueValuesDomainName?: boolean | number
    /** Number of empty values for domainName */
    countEmptyDomainName?: boolean | number
    /** Number of non-empty values for domainName */
    countNotEmptyDomainName?: boolean | number
    /** Percentage of empty values for domainName */
    percentageEmptyDomainName?: boolean | number
    /** Percentage of non-empty values for domainName */
    percentageNotEmptyDomainName?: boolean | number
    /** Number of unique values for employees */
    countUniqueValuesEmployees?: boolean | number
    /** Number of empty values for employees */
    countEmptyEmployees?: boolean | number
    /** Number of non-empty values for employees */
    countNotEmptyEmployees?: boolean | number
    /** Percentage of empty values for employees */
    percentageEmptyEmployees?: boolean | number
    /** Percentage of non-empty values for employees */
    percentageNotEmptyEmployees?: boolean | number
    /** Minimum amount contained in the field employees */
    minEmployees?: boolean | number
    /** Maximum amount contained in the field employees */
    maxEmployees?: boolean | number
    /** Average amount contained in the field employees */
    avgEmployees?: boolean | number
    /** Sum of amounts contained in the field employees */
    sumEmployees?: boolean | number
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: boolean | number
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: boolean | number
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: boolean | number
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: boolean | number
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: boolean | number
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: boolean | number
    /** Number of empty values for xLink */
    countEmptyXLink?: boolean | number
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: boolean | number
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: boolean | number
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: boolean | number
    /** Number of unique values for annualRecurringRevenue */
    countUniqueValuesAnnualRecurringRevenue?: boolean | number
    /** Number of empty values for annualRecurringRevenue */
    countEmptyAnnualRecurringRevenue?: boolean | number
    /** Number of non-empty values for annualRecurringRevenue */
    countNotEmptyAnnualRecurringRevenue?: boolean | number
    /** Percentage of empty values for annualRecurringRevenue */
    percentageEmptyAnnualRecurringRevenue?: boolean | number
    /** Percentage of non-empty values for annualRecurringRevenue */
    percentageNotEmptyAnnualRecurringRevenue?: boolean | number
    /** Minimum amount contained in the field annualRecurringRevenue */
    minAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Maximal amount contained in the field annualRecurringRevenue */
    maxAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Sum of amounts contained in the field annualRecurringRevenue */
    sumAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Average amount contained in the field annualRecurringRevenue */
    avgAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Number of unique values for address */
    countUniqueValuesAddress?: boolean | number
    /** Number of empty values for address */
    countEmptyAddress?: boolean | number
    /** Number of non-empty values for address */
    countNotEmptyAddress?: boolean | number
    /** Percentage of empty values for address */
    percentageEmptyAddress?: boolean | number
    /** Percentage of non-empty values for address */
    percentageNotEmptyAddress?: boolean | number
    /** Number of unique values for idealCustomerProfile */
    countUniqueValuesIdealCustomerProfile?: boolean | number
    /** Number of empty values for idealCustomerProfile */
    countEmptyIdealCustomerProfile?: boolean | number
    /** Number of non-empty values for idealCustomerProfile */
    countNotEmptyIdealCustomerProfile?: boolean | number
    /** Percentage of empty values for idealCustomerProfile */
    percentageEmptyIdealCustomerProfile?: boolean | number
    /** Percentage of non-empty values for idealCustomerProfile */
    percentageNotEmptyIdealCustomerProfile?: boolean | number
    /** Count of true values in the field idealCustomerProfile */
    countTrueIdealCustomerProfile?: boolean | number
    /** Count of false values in the field idealCustomerProfile */
    countFalseIdealCustomerProfile?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for tagline */
    countUniqueValuesTagline?: boolean | number
    /** Number of empty values for tagline */
    countEmptyTagline?: boolean | number
    /** Number of non-empty values for tagline */
    countNotEmptyTagline?: boolean | number
    /** Percentage of empty values for tagline */
    percentageEmptyTagline?: boolean | number
    /** Percentage of non-empty values for tagline */
    percentageNotEmptyTagline?: boolean | number
    /** Number of unique values for introVideo */
    countUniqueValuesIntroVideo?: boolean | number
    /** Number of empty values for introVideo */
    countEmptyIntroVideo?: boolean | number
    /** Number of non-empty values for introVideo */
    countNotEmptyIntroVideo?: boolean | number
    /** Percentage of empty values for introVideo */
    percentageEmptyIntroVideo?: boolean | number
    /** Percentage of non-empty values for introVideo */
    percentageNotEmptyIntroVideo?: boolean | number
    /** Number of unique values for workPolicy */
    countUniqueValuesWorkPolicy?: boolean | number
    /** Number of empty values for workPolicy */
    countEmptyWorkPolicy?: boolean | number
    /** Number of non-empty values for workPolicy */
    countNotEmptyWorkPolicy?: boolean | number
    /** Percentage of empty values for workPolicy */
    percentageEmptyWorkPolicy?: boolean | number
    /** Percentage of non-empty values for workPolicy */
    percentageNotEmptyWorkPolicy?: boolean | number
    /** Number of unique values for visaSponsorship */
    countUniqueValuesVisaSponsorship?: boolean | number
    /** Number of empty values for visaSponsorship */
    countEmptyVisaSponsorship?: boolean | number
    /** Number of non-empty values for visaSponsorship */
    countNotEmptyVisaSponsorship?: boolean | number
    /** Percentage of empty values for visaSponsorship */
    percentageEmptyVisaSponsorship?: boolean | number
    /** Percentage of non-empty values for visaSponsorship */
    percentageNotEmptyVisaSponsorship?: boolean | number
    /** Count of true values in the field visaSponsorship */
    countTrueVisaSponsorship?: boolean | number
    /** Count of false values in the field visaSponsorship */
    countFalseVisaSponsorship?: boolean | number
    edges?: CompanyEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A company */
export interface CompanyGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for domainName */
    countUniqueValuesDomainName?: boolean | number
    /** Number of empty values for domainName */
    countEmptyDomainName?: boolean | number
    /** Number of non-empty values for domainName */
    countNotEmptyDomainName?: boolean | number
    /** Percentage of empty values for domainName */
    percentageEmptyDomainName?: boolean | number
    /** Percentage of non-empty values for domainName */
    percentageNotEmptyDomainName?: boolean | number
    /** Number of unique values for employees */
    countUniqueValuesEmployees?: boolean | number
    /** Number of empty values for employees */
    countEmptyEmployees?: boolean | number
    /** Number of non-empty values for employees */
    countNotEmptyEmployees?: boolean | number
    /** Percentage of empty values for employees */
    percentageEmptyEmployees?: boolean | number
    /** Percentage of non-empty values for employees */
    percentageNotEmptyEmployees?: boolean | number
    /** Minimum amount contained in the field employees */
    minEmployees?: boolean | number
    /** Maximum amount contained in the field employees */
    maxEmployees?: boolean | number
    /** Average amount contained in the field employees */
    avgEmployees?: boolean | number
    /** Sum of amounts contained in the field employees */
    sumEmployees?: boolean | number
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: boolean | number
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: boolean | number
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: boolean | number
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: boolean | number
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: boolean | number
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: boolean | number
    /** Number of empty values for xLink */
    countEmptyXLink?: boolean | number
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: boolean | number
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: boolean | number
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: boolean | number
    /** Number of unique values for annualRecurringRevenue */
    countUniqueValuesAnnualRecurringRevenue?: boolean | number
    /** Number of empty values for annualRecurringRevenue */
    countEmptyAnnualRecurringRevenue?: boolean | number
    /** Number of non-empty values for annualRecurringRevenue */
    countNotEmptyAnnualRecurringRevenue?: boolean | number
    /** Percentage of empty values for annualRecurringRevenue */
    percentageEmptyAnnualRecurringRevenue?: boolean | number
    /** Percentage of non-empty values for annualRecurringRevenue */
    percentageNotEmptyAnnualRecurringRevenue?: boolean | number
    /** Minimum amount contained in the field annualRecurringRevenue */
    minAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Maximal amount contained in the field annualRecurringRevenue */
    maxAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Sum of amounts contained in the field annualRecurringRevenue */
    sumAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Average amount contained in the field annualRecurringRevenue */
    avgAnnualRecurringRevenueAmountMicros?: boolean | number
    /** Number of unique values for address */
    countUniqueValuesAddress?: boolean | number
    /** Number of empty values for address */
    countEmptyAddress?: boolean | number
    /** Number of non-empty values for address */
    countNotEmptyAddress?: boolean | number
    /** Percentage of empty values for address */
    percentageEmptyAddress?: boolean | number
    /** Percentage of non-empty values for address */
    percentageNotEmptyAddress?: boolean | number
    /** Number of unique values for idealCustomerProfile */
    countUniqueValuesIdealCustomerProfile?: boolean | number
    /** Number of empty values for idealCustomerProfile */
    countEmptyIdealCustomerProfile?: boolean | number
    /** Number of non-empty values for idealCustomerProfile */
    countNotEmptyIdealCustomerProfile?: boolean | number
    /** Percentage of empty values for idealCustomerProfile */
    percentageEmptyIdealCustomerProfile?: boolean | number
    /** Percentage of non-empty values for idealCustomerProfile */
    percentageNotEmptyIdealCustomerProfile?: boolean | number
    /** Count of true values in the field idealCustomerProfile */
    countTrueIdealCustomerProfile?: boolean | number
    /** Count of false values in the field idealCustomerProfile */
    countFalseIdealCustomerProfile?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for tagline */
    countUniqueValuesTagline?: boolean | number
    /** Number of empty values for tagline */
    countEmptyTagline?: boolean | number
    /** Number of non-empty values for tagline */
    countNotEmptyTagline?: boolean | number
    /** Percentage of empty values for tagline */
    percentageEmptyTagline?: boolean | number
    /** Percentage of non-empty values for tagline */
    percentageNotEmptyTagline?: boolean | number
    /** Number of unique values for introVideo */
    countUniqueValuesIntroVideo?: boolean | number
    /** Number of empty values for introVideo */
    countEmptyIntroVideo?: boolean | number
    /** Number of non-empty values for introVideo */
    countNotEmptyIntroVideo?: boolean | number
    /** Percentage of empty values for introVideo */
    percentageEmptyIntroVideo?: boolean | number
    /** Percentage of non-empty values for introVideo */
    percentageNotEmptyIntroVideo?: boolean | number
    /** Number of unique values for workPolicy */
    countUniqueValuesWorkPolicy?: boolean | number
    /** Number of empty values for workPolicy */
    countEmptyWorkPolicy?: boolean | number
    /** Number of non-empty values for workPolicy */
    countNotEmptyWorkPolicy?: boolean | number
    /** Percentage of empty values for workPolicy */
    percentageEmptyWorkPolicy?: boolean | number
    /** Percentage of non-empty values for workPolicy */
    percentageNotEmptyWorkPolicy?: boolean | number
    /** Number of unique values for visaSponsorship */
    countUniqueValuesVisaSponsorship?: boolean | number
    /** Number of empty values for visaSponsorship */
    countEmptyVisaSponsorship?: boolean | number
    /** Number of non-empty values for visaSponsorship */
    countNotEmptyVisaSponsorship?: boolean | number
    /** Percentage of empty values for visaSponsorship */
    percentageEmptyVisaSponsorship?: boolean | number
    /** Percentage of non-empty values for visaSponsorship */
    percentageNotEmptyVisaSponsorship?: boolean | number
    /** Count of true values in the field visaSponsorship */
    countTrueVisaSponsorship?: boolean | number
    /** Count of false values in the field visaSponsorship */
    countFalseVisaSponsorship?: boolean | number
    edges?: CompanyEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface CompanyRelationInput {
/** Connect to a company record */
connect?: (CompanyConnectInput | null),
/** Disconnect from a company record */
disconnect?: (Scalars['Boolean'] | null)}

export interface CompanyConnectInput {
/** Find a company record based on its unique fields: id or domainName */
where?: (CompanyWhereUniqueInput | null)}

export interface CompanyWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null),
/** Connect by Domain Name */
domainName?: (CompanyDomainNameWhereInput | null)}

export interface CompanyDomainNameWhereInput {
/** Connect by primaryLinkUrl */
primaryLinkUrl?: (Scalars['String'] | null)}


/** A company */
export interface CompanyCreateInput {
/** The company name */
name?: (Scalars['String'] | null),
/** The company website URL. We use this url to fetch the company icon */
domainName?: (LinksCreateInput | null),
/** Number of employees in the company */
employees?: (Scalars['Float'] | null),
/** The company Linkedin account */
linkedinLink?: (LinksCreateInput | null),
/** The company Twitter/X account */
xLink?: (LinksCreateInput | null),
/** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
annualRecurringRevenue?: (CurrencyCreateInput | null),
/** Address of the company */
address?: (AddressCreateInput | null),
/** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
idealCustomerProfile?: (Scalars['Boolean'] | null),
/** Company record position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Your team member responsible for managing the company account */
accountOwnerId?: (Scalars['ID'] | null),
/** Your team member responsible for managing the company account */
accountOwner?: (WorkspaceMemberRelationInput | null),
/** Company's Tagline */
tagline?: (Scalars['String'] | null),
/** Company's Intro Video */
introVideo?: (LinksCreateInput | null),
/** Company's Work Policy */
workPolicy?: ((CompanyWorkPolicyEnum | null)[] | null),
/** Company's Visa Sponsorship Policy */
visaSponsorship?: (Scalars['Boolean'] | null)}


/** A company */
export interface CompanyUpdateInput {
/** The company name */
name?: (Scalars['String'] | null),
/** The company website URL. We use this url to fetch the company icon */
domainName?: (LinksUpdateInput | null),
/** Number of employees in the company */
employees?: (Scalars['Float'] | null),
/** The company Linkedin account */
linkedinLink?: (LinksUpdateInput | null),
/** The company Twitter/X account */
xLink?: (LinksUpdateInput | null),
/** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
annualRecurringRevenue?: (CurrencyUpdateInput | null),
/** Address of the company */
address?: (AddressUpdateInput | null),
/** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
idealCustomerProfile?: (Scalars['Boolean'] | null),
/** Company record position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Your team member responsible for managing the company account */
accountOwnerId?: (Scalars['ID'] | null),
/** Your team member responsible for managing the company account */
accountOwner?: (WorkspaceMemberRelationInput | null),
/** Company's Tagline */
tagline?: (Scalars['String'] | null),
/** Company's Intro Video */
introVideo?: (LinksUpdateInput | null),
/** Company's Work Policy */
workPolicy?: ((CompanyWorkPolicyEnum | null)[] | null),
/** Company's Visa Sponsorship Policy */
visaSponsorship?: (Scalars['Boolean'] | null)}


/** A company */
export interface CompanyFilterInput {
/** The company name */
name?: (StringFilter | null),
/** The company website URL. We use this url to fetch the company icon */
domainName?: (LinksFilterInput | null),
/** Number of employees in the company */
employees?: (FloatFilter | null),
/** The company Linkedin account */
linkedinLink?: (LinksFilterInput | null),
/** The company Twitter/X account */
xLink?: (LinksFilterInput | null),
/** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
annualRecurringRevenue?: (CurrencyFilterInput | null),
/** Address of the company */
address?: (AddressFilterInput | null),
/** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
idealCustomerProfile?: (BooleanFilter | null),
/** Company record position */
position?: (FloatFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Your team member responsible for managing the company account */
accountOwnerId?: (UUIDFilter | null),
/** Company's Tagline */
tagline?: (StringFilter | null),
/** Company's Intro Video */
introVideo?: (LinksFilterInput | null),
/** Company's Work Policy */
workPolicy?: (CompanyWorkPolicyEnumFilter | null),
/** Company's Visa Sponsorship Policy */
visaSponsorship?: (BooleanFilter | null),and?: ((CompanyFilterInput | null)[] | null),or?: ((CompanyFilterInput | null)[] | null),not?: (CompanyFilterInput | null)}

export interface TSVectorFilter {search?: (Scalars['String'] | null)}

export interface CompanyWorkPolicyEnumFilter {eq?: (CompanyWorkPolicyEnum | null),neq?: (CompanyWorkPolicyEnum | null),in?: ((CompanyWorkPolicyEnum | null)[] | null),containsAny?: ((CompanyWorkPolicyEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A company */
export interface CompanyOrderByInput {
/** The company name */
name?: (OrderByDirection | null),
/** The company website URL. We use this url to fetch the company icon */
domainName?: (LinksOrderByInput | null),
/** Number of employees in the company */
employees?: (OrderByDirection | null),
/** The company Linkedin account */
linkedinLink?: (LinksOrderByInput | null),
/** The company Twitter/X account */
xLink?: (LinksOrderByInput | null),
/** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
annualRecurringRevenue?: (CurrencyOrderByInput | null),
/** Address of the company */
address?: (AddressOrderByInput | null),
/** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
idealCustomerProfile?: (OrderByDirection | null),
/** Company record position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Your team member responsible for managing the company account */
accountOwnerId?: (OrderByDirection | null),
/** Company's Tagline */
tagline?: (OrderByDirection | null),
/** Company's Intro Video */
introVideo?: (LinksOrderByInput | null),
/** Company's Work Policy */
workPolicy?: (OrderByDirection | null),
/** Company's Visa Sponsorship Policy */
visaSponsorship?: (OrderByDirection | null)}


/** A company */
export interface CompanyOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (CompanyOrderByWithGroupByAggregateInput | null),
/** The company name */
name?: (OrderByDirection | null),
/** The company website URL. We use this url to fetch the company icon */
domainName?: (LinksOrderByInput | null),
/** Number of employees in the company */
employees?: (OrderByDirection | null),
/** The company Linkedin account */
linkedinLink?: (LinksOrderByInput | null),
/** The company Twitter/X account */
xLink?: (LinksOrderByInput | null),
/** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
annualRecurringRevenue?: (CurrencyOrderByInput | null),
/** Address of the company */
address?: (AddressOrderByInput | null),
/** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
idealCustomerProfile?: (OrderByDirection | null),
/** Company record position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Your team member responsible for managing the company account */
accountOwnerId?: (OrderByDirection | null),
/** Company's Tagline */
tagline?: (OrderByDirection | null),
/** Company's Intro Video */
introVideo?: (LinksOrderByInput | null),
/** Company's Work Policy */
workPolicy?: (OrderByDirection | null),
/** Company's Visa Sponsorship Policy */
visaSponsorship?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface CompanyOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for domainName */
countUniqueValuesDomainName?: (OrderByDirection | null),
/** Number of empty values for domainName */
countEmptyDomainName?: (OrderByDirection | null),
/** Number of non-empty values for domainName */
countNotEmptyDomainName?: (OrderByDirection | null),
/** Percentage of empty values for domainName */
percentageEmptyDomainName?: (OrderByDirection | null),
/** Percentage of non-empty values for domainName */
percentageNotEmptyDomainName?: (OrderByDirection | null),
/** Number of unique values for employees */
countUniqueValuesEmployees?: (OrderByDirection | null),
/** Number of empty values for employees */
countEmptyEmployees?: (OrderByDirection | null),
/** Number of non-empty values for employees */
countNotEmptyEmployees?: (OrderByDirection | null),
/** Percentage of empty values for employees */
percentageEmptyEmployees?: (OrderByDirection | null),
/** Percentage of non-empty values for employees */
percentageNotEmptyEmployees?: (OrderByDirection | null),
/** Minimum amount contained in the field employees */
minEmployees?: (OrderByDirection | null),
/** Maximum amount contained in the field employees */
maxEmployees?: (OrderByDirection | null),
/** Average amount contained in the field employees */
avgEmployees?: (OrderByDirection | null),
/** Sum of amounts contained in the field employees */
sumEmployees?: (OrderByDirection | null),
/** Number of unique values for linkedinLink */
countUniqueValuesLinkedinLink?: (OrderByDirection | null),
/** Number of empty values for linkedinLink */
countEmptyLinkedinLink?: (OrderByDirection | null),
/** Number of non-empty values for linkedinLink */
countNotEmptyLinkedinLink?: (OrderByDirection | null),
/** Percentage of empty values for linkedinLink */
percentageEmptyLinkedinLink?: (OrderByDirection | null),
/** Percentage of non-empty values for linkedinLink */
percentageNotEmptyLinkedinLink?: (OrderByDirection | null),
/** Number of unique values for xLink */
countUniqueValuesXLink?: (OrderByDirection | null),
/** Number of empty values for xLink */
countEmptyXLink?: (OrderByDirection | null),
/** Number of non-empty values for xLink */
countNotEmptyXLink?: (OrderByDirection | null),
/** Percentage of empty values for xLink */
percentageEmptyXLink?: (OrderByDirection | null),
/** Percentage of non-empty values for xLink */
percentageNotEmptyXLink?: (OrderByDirection | null),
/** Number of unique values for annualRecurringRevenue */
countUniqueValuesAnnualRecurringRevenue?: (OrderByDirection | null),
/** Number of empty values for annualRecurringRevenue */
countEmptyAnnualRecurringRevenue?: (OrderByDirection | null),
/** Number of non-empty values for annualRecurringRevenue */
countNotEmptyAnnualRecurringRevenue?: (OrderByDirection | null),
/** Percentage of empty values for annualRecurringRevenue */
percentageEmptyAnnualRecurringRevenue?: (OrderByDirection | null),
/** Percentage of non-empty values for annualRecurringRevenue */
percentageNotEmptyAnnualRecurringRevenue?: (OrderByDirection | null),
/** Minimum amount contained in the field annualRecurringRevenue */
minAnnualRecurringRevenueAmountMicros?: (OrderByDirection | null),
/** Maximal amount contained in the field annualRecurringRevenue */
maxAnnualRecurringRevenueAmountMicros?: (OrderByDirection | null),
/** Sum of amounts contained in the field annualRecurringRevenue */
sumAnnualRecurringRevenueAmountMicros?: (OrderByDirection | null),
/** Average amount contained in the field annualRecurringRevenue */
avgAnnualRecurringRevenueAmountMicros?: (OrderByDirection | null),
/** Number of unique values for address */
countUniqueValuesAddress?: (OrderByDirection | null),
/** Number of empty values for address */
countEmptyAddress?: (OrderByDirection | null),
/** Number of non-empty values for address */
countNotEmptyAddress?: (OrderByDirection | null),
/** Percentage of empty values for address */
percentageEmptyAddress?: (OrderByDirection | null),
/** Percentage of non-empty values for address */
percentageNotEmptyAddress?: (OrderByDirection | null),
/** Number of unique values for idealCustomerProfile */
countUniqueValuesIdealCustomerProfile?: (OrderByDirection | null),
/** Number of empty values for idealCustomerProfile */
countEmptyIdealCustomerProfile?: (OrderByDirection | null),
/** Number of non-empty values for idealCustomerProfile */
countNotEmptyIdealCustomerProfile?: (OrderByDirection | null),
/** Percentage of empty values for idealCustomerProfile */
percentageEmptyIdealCustomerProfile?: (OrderByDirection | null),
/** Percentage of non-empty values for idealCustomerProfile */
percentageNotEmptyIdealCustomerProfile?: (OrderByDirection | null),
/** Count of true values in the field idealCustomerProfile */
countTrueIdealCustomerProfile?: (OrderByDirection | null),
/** Count of false values in the field idealCustomerProfile */
countFalseIdealCustomerProfile?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Your team member responsible for managing the company account */
accountOwnerId?: (OrderByDirection | null),
/** Number of unique values for tagline */
countUniqueValuesTagline?: (OrderByDirection | null),
/** Number of empty values for tagline */
countEmptyTagline?: (OrderByDirection | null),
/** Number of non-empty values for tagline */
countNotEmptyTagline?: (OrderByDirection | null),
/** Percentage of empty values for tagline */
percentageEmptyTagline?: (OrderByDirection | null),
/** Percentage of non-empty values for tagline */
percentageNotEmptyTagline?: (OrderByDirection | null),
/** Number of unique values for introVideo */
countUniqueValuesIntroVideo?: (OrderByDirection | null),
/** Number of empty values for introVideo */
countEmptyIntroVideo?: (OrderByDirection | null),
/** Number of non-empty values for introVideo */
countNotEmptyIntroVideo?: (OrderByDirection | null),
/** Percentage of empty values for introVideo */
percentageEmptyIntroVideo?: (OrderByDirection | null),
/** Percentage of non-empty values for introVideo */
percentageNotEmptyIntroVideo?: (OrderByDirection | null),
/** Number of unique values for workPolicy */
countUniqueValuesWorkPolicy?: (OrderByDirection | null),
/** Number of empty values for workPolicy */
countEmptyWorkPolicy?: (OrderByDirection | null),
/** Number of non-empty values for workPolicy */
countNotEmptyWorkPolicy?: (OrderByDirection | null),
/** Percentage of empty values for workPolicy */
percentageEmptyWorkPolicy?: (OrderByDirection | null),
/** Percentage of non-empty values for workPolicy */
percentageNotEmptyWorkPolicy?: (OrderByDirection | null),
/** Number of unique values for visaSponsorship */
countUniqueValuesVisaSponsorship?: (OrderByDirection | null),
/** Number of empty values for visaSponsorship */
countEmptyVisaSponsorship?: (OrderByDirection | null),
/** Number of non-empty values for visaSponsorship */
countNotEmptyVisaSponsorship?: (OrderByDirection | null),
/** Percentage of empty values for visaSponsorship */
percentageEmptyVisaSponsorship?: (OrderByDirection | null),
/** Percentage of non-empty values for visaSponsorship */
percentageNotEmptyVisaSponsorship?: (OrderByDirection | null),
/** Count of true values in the field visaSponsorship */
countTrueVisaSponsorship?: (OrderByDirection | null),
/** Count of false values in the field visaSponsorship */
countFalseVisaSponsorship?: (OrderByDirection | null)}


/** A company */
export interface CompanyGroupByInput {
/** The company name */
name?: (Scalars['Boolean'] | null),
/** The company website URL. We use this url to fetch the company icon */
domainName?: (LinksGroupByInput | null),
/** Number of employees in the company */
employees?: (Scalars['Boolean'] | null),
/** The company Linkedin account */
linkedinLink?: (LinksGroupByInput | null),
/** The company Twitter/X account */
xLink?: (LinksGroupByInput | null),
/** Annual Recurring Revenue: The actual or estimated annual revenue of the company */
annualRecurringRevenue?: (CurrencyGroupByInput | null),
/** Address of the company */
address?: (AddressGroupByInput | null),
/** Ideal Customer Profile:  Indicates whether the company is the most suitable and valuable customer for you */
idealCustomerProfile?: (Scalars['Boolean'] | null),
/** Company record position */
position?: (Scalars['Boolean'] | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Your team member responsible for managing the company account */
accountOwnerId?: (Scalars['Boolean'] | null),
/** Company's Tagline */
tagline?: (Scalars['Boolean'] | null),
/** Company's Intro Video */
introVideo?: (LinksGroupByInput | null),
/** Company's Work Policy */
workPolicy?: (Scalars['Boolean'] | null),
/** Company's Visa Sponsorship Policy */
visaSponsorship?: (Scalars['Boolean'] | null)}


/** A connected account */
export interface ConnectedAccountGenqlSelection{
    /** The account handle (email, username, phone number, etc.) */
    handle?: boolean | number
    /** The account provider */
    provider?: boolean | number
    /** Messaging provider access token */
    accessToken?: boolean | number
    /** Messaging provider refresh token */
    refreshToken?: boolean | number
    /** Last sync history ID */
    lastSyncHistoryId?: boolean | number
    /** Auth failed at */
    authFailedAt?: boolean | number
    /** Handle Aliases */
    handleAliases?: boolean | number
    /** Scopes */
    scopes?: boolean | number
    /** JSON object containing custom connection parameters */
    connectionParameters?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Account Owner */
    accountOwnerId?: boolean | number
    /** Account Owner */
    accountOwner?: WorkspaceMemberGenqlSelection
    /** Message Channels */
    messageChannels?: (MessageChannelConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageChannelFilterInput | null), orderBy?: ((MessageChannelOrderByInput | null)[] | null)} })
    /** Calendar Channels */
    calendarChannels?: (CalendarChannelConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarChannelFilterInput | null), orderBy?: ((CalendarChannelOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connected account */
export interface ConnectedAccountEdgeGenqlSelection{
    node?: ConnectedAccountGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connected account */
export interface ConnectedAccountConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for provider */
    countUniqueValuesProvider?: boolean | number
    /** Number of empty values for provider */
    countEmptyProvider?: boolean | number
    /** Number of non-empty values for provider */
    countNotEmptyProvider?: boolean | number
    /** Percentage of empty values for provider */
    percentageEmptyProvider?: boolean | number
    /** Percentage of non-empty values for provider */
    percentageNotEmptyProvider?: boolean | number
    /** Number of unique values for accessToken */
    countUniqueValuesAccessToken?: boolean | number
    /** Number of empty values for accessToken */
    countEmptyAccessToken?: boolean | number
    /** Number of non-empty values for accessToken */
    countNotEmptyAccessToken?: boolean | number
    /** Percentage of empty values for accessToken */
    percentageEmptyAccessToken?: boolean | number
    /** Percentage of non-empty values for accessToken */
    percentageNotEmptyAccessToken?: boolean | number
    /** Number of unique values for refreshToken */
    countUniqueValuesRefreshToken?: boolean | number
    /** Number of empty values for refreshToken */
    countEmptyRefreshToken?: boolean | number
    /** Number of non-empty values for refreshToken */
    countNotEmptyRefreshToken?: boolean | number
    /** Percentage of empty values for refreshToken */
    percentageEmptyRefreshToken?: boolean | number
    /** Percentage of non-empty values for refreshToken */
    percentageNotEmptyRefreshToken?: boolean | number
    /** Number of unique values for lastSyncHistoryId */
    countUniqueValuesLastSyncHistoryId?: boolean | number
    /** Number of empty values for lastSyncHistoryId */
    countEmptyLastSyncHistoryId?: boolean | number
    /** Number of non-empty values for lastSyncHistoryId */
    countNotEmptyLastSyncHistoryId?: boolean | number
    /** Percentage of empty values for lastSyncHistoryId */
    percentageEmptyLastSyncHistoryId?: boolean | number
    /** Percentage of non-empty values for lastSyncHistoryId */
    percentageNotEmptyLastSyncHistoryId?: boolean | number
    /** Number of unique values for authFailedAt */
    countUniqueValuesAuthFailedAt?: boolean | number
    /** Number of empty values for authFailedAt */
    countEmptyAuthFailedAt?: boolean | number
    /** Number of non-empty values for authFailedAt */
    countNotEmptyAuthFailedAt?: boolean | number
    /** Percentage of empty values for authFailedAt */
    percentageEmptyAuthFailedAt?: boolean | number
    /** Percentage of non-empty values for authFailedAt */
    percentageNotEmptyAuthFailedAt?: boolean | number
    /** Earliest date contained in the field authFailedAt */
    minAuthFailedAt?: boolean | number
    /** Latest date contained in the field authFailedAt */
    maxAuthFailedAt?: boolean | number
    /** Number of unique values for handleAliases */
    countUniqueValuesHandleAliases?: boolean | number
    /** Number of empty values for handleAliases */
    countEmptyHandleAliases?: boolean | number
    /** Number of non-empty values for handleAliases */
    countNotEmptyHandleAliases?: boolean | number
    /** Percentage of empty values for handleAliases */
    percentageEmptyHandleAliases?: boolean | number
    /** Percentage of non-empty values for handleAliases */
    percentageNotEmptyHandleAliases?: boolean | number
    /** Number of unique values for scopes */
    countUniqueValuesScopes?: boolean | number
    /** Number of empty values for scopes */
    countEmptyScopes?: boolean | number
    /** Number of non-empty values for scopes */
    countNotEmptyScopes?: boolean | number
    /** Percentage of empty values for scopes */
    percentageEmptyScopes?: boolean | number
    /** Percentage of non-empty values for scopes */
    percentageNotEmptyScopes?: boolean | number
    /** Number of unique values for connectionParameters */
    countUniqueValuesConnectionParameters?: boolean | number
    /** Number of empty values for connectionParameters */
    countEmptyConnectionParameters?: boolean | number
    /** Number of non-empty values for connectionParameters */
    countNotEmptyConnectionParameters?: boolean | number
    /** Percentage of empty values for connectionParameters */
    percentageEmptyConnectionParameters?: boolean | number
    /** Percentage of non-empty values for connectionParameters */
    percentageNotEmptyConnectionParameters?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ConnectedAccountEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A connected account */
export interface ConnectedAccountGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for provider */
    countUniqueValuesProvider?: boolean | number
    /** Number of empty values for provider */
    countEmptyProvider?: boolean | number
    /** Number of non-empty values for provider */
    countNotEmptyProvider?: boolean | number
    /** Percentage of empty values for provider */
    percentageEmptyProvider?: boolean | number
    /** Percentage of non-empty values for provider */
    percentageNotEmptyProvider?: boolean | number
    /** Number of unique values for accessToken */
    countUniqueValuesAccessToken?: boolean | number
    /** Number of empty values for accessToken */
    countEmptyAccessToken?: boolean | number
    /** Number of non-empty values for accessToken */
    countNotEmptyAccessToken?: boolean | number
    /** Percentage of empty values for accessToken */
    percentageEmptyAccessToken?: boolean | number
    /** Percentage of non-empty values for accessToken */
    percentageNotEmptyAccessToken?: boolean | number
    /** Number of unique values for refreshToken */
    countUniqueValuesRefreshToken?: boolean | number
    /** Number of empty values for refreshToken */
    countEmptyRefreshToken?: boolean | number
    /** Number of non-empty values for refreshToken */
    countNotEmptyRefreshToken?: boolean | number
    /** Percentage of empty values for refreshToken */
    percentageEmptyRefreshToken?: boolean | number
    /** Percentage of non-empty values for refreshToken */
    percentageNotEmptyRefreshToken?: boolean | number
    /** Number of unique values for lastSyncHistoryId */
    countUniqueValuesLastSyncHistoryId?: boolean | number
    /** Number of empty values for lastSyncHistoryId */
    countEmptyLastSyncHistoryId?: boolean | number
    /** Number of non-empty values for lastSyncHistoryId */
    countNotEmptyLastSyncHistoryId?: boolean | number
    /** Percentage of empty values for lastSyncHistoryId */
    percentageEmptyLastSyncHistoryId?: boolean | number
    /** Percentage of non-empty values for lastSyncHistoryId */
    percentageNotEmptyLastSyncHistoryId?: boolean | number
    /** Number of unique values for authFailedAt */
    countUniqueValuesAuthFailedAt?: boolean | number
    /** Number of empty values for authFailedAt */
    countEmptyAuthFailedAt?: boolean | number
    /** Number of non-empty values for authFailedAt */
    countNotEmptyAuthFailedAt?: boolean | number
    /** Percentage of empty values for authFailedAt */
    percentageEmptyAuthFailedAt?: boolean | number
    /** Percentage of non-empty values for authFailedAt */
    percentageNotEmptyAuthFailedAt?: boolean | number
    /** Earliest date contained in the field authFailedAt */
    minAuthFailedAt?: boolean | number
    /** Latest date contained in the field authFailedAt */
    maxAuthFailedAt?: boolean | number
    /** Number of unique values for handleAliases */
    countUniqueValuesHandleAliases?: boolean | number
    /** Number of empty values for handleAliases */
    countEmptyHandleAliases?: boolean | number
    /** Number of non-empty values for handleAliases */
    countNotEmptyHandleAliases?: boolean | number
    /** Percentage of empty values for handleAliases */
    percentageEmptyHandleAliases?: boolean | number
    /** Percentage of non-empty values for handleAliases */
    percentageNotEmptyHandleAliases?: boolean | number
    /** Number of unique values for scopes */
    countUniqueValuesScopes?: boolean | number
    /** Number of empty values for scopes */
    countEmptyScopes?: boolean | number
    /** Number of non-empty values for scopes */
    countNotEmptyScopes?: boolean | number
    /** Percentage of empty values for scopes */
    percentageEmptyScopes?: boolean | number
    /** Percentage of non-empty values for scopes */
    percentageNotEmptyScopes?: boolean | number
    /** Number of unique values for connectionParameters */
    countUniqueValuesConnectionParameters?: boolean | number
    /** Number of empty values for connectionParameters */
    countEmptyConnectionParameters?: boolean | number
    /** Number of non-empty values for connectionParameters */
    countNotEmptyConnectionParameters?: boolean | number
    /** Percentage of empty values for connectionParameters */
    percentageEmptyConnectionParameters?: boolean | number
    /** Percentage of non-empty values for connectionParameters */
    percentageNotEmptyConnectionParameters?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ConnectedAccountEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ConnectedAccountRelationInput {
/** Connect to a connectedAccount record */
connect?: (ConnectedAccountConnectInput | null),
/** Disconnect from a connectedAccount record */
disconnect?: (Scalars['Boolean'] | null)}

export interface ConnectedAccountConnectInput {
/** Find a connectedAccount record based on its unique fields: id */
where?: (ConnectedAccountWhereUniqueInput | null)}

export interface ConnectedAccountWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A connected account */
export interface ConnectedAccountCreateInput {
/** The account handle (email, username, phone number, etc.) */
handle?: (Scalars['String'] | null),
/** The account provider */
provider?: (Scalars['String'] | null),
/** Messaging provider access token */
accessToken?: (Scalars['String'] | null),
/** Messaging provider refresh token */
refreshToken?: (Scalars['String'] | null),
/** Last sync history ID */
lastSyncHistoryId?: (Scalars['String'] | null),
/** Auth failed at */
authFailedAt?: (Scalars['DateTime'] | null),
/** Handle Aliases */
handleAliases?: (Scalars['String'] | null),
/** Scopes */
scopes?: ((Scalars['String'] | null)[] | null),
/** JSON object containing custom connection parameters */
connectionParameters?: (Scalars['JSON'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Account Owner */
accountOwnerId?: (Scalars['ID'] | null),
/** Account Owner */
accountOwner?: (WorkspaceMemberRelationInput | null)}


/** A connected account */
export interface ConnectedAccountUpdateInput {
/** The account handle (email, username, phone number, etc.) */
handle?: (Scalars['String'] | null),
/** The account provider */
provider?: (Scalars['String'] | null),
/** Messaging provider access token */
accessToken?: (Scalars['String'] | null),
/** Messaging provider refresh token */
refreshToken?: (Scalars['String'] | null),
/** Last sync history ID */
lastSyncHistoryId?: (Scalars['String'] | null),
/** Auth failed at */
authFailedAt?: (Scalars['DateTime'] | null),
/** Handle Aliases */
handleAliases?: (Scalars['String'] | null),
/** Scopes */
scopes?: ((Scalars['String'] | null)[] | null),
/** JSON object containing custom connection parameters */
connectionParameters?: (Scalars['JSON'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Account Owner */
accountOwnerId?: (Scalars['ID'] | null),
/** Account Owner */
accountOwner?: (WorkspaceMemberRelationInput | null)}


/** A connected account */
export interface ConnectedAccountFilterInput {
/** The account handle (email, username, phone number, etc.) */
handle?: (StringFilter | null),
/** The account provider */
provider?: (StringFilter | null),
/** Messaging provider access token */
accessToken?: (StringFilter | null),
/** Messaging provider refresh token */
refreshToken?: (StringFilter | null),
/** Last sync history ID */
lastSyncHistoryId?: (StringFilter | null),
/** Auth failed at */
authFailedAt?: (DateFilter | null),
/** Handle Aliases */
handleAliases?: (StringFilter | null),
/** Scopes */
scopes?: (ArrayFilter | null),
/** JSON object containing custom connection parameters */
connectionParameters?: (RawJsonFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Account Owner */
accountOwnerId?: (UUIDFilter | null),and?: ((ConnectedAccountFilterInput | null)[] | null),or?: ((ConnectedAccountFilterInput | null)[] | null),not?: (ConnectedAccountFilterInput | null)}

export interface ArrayFilter {containsIlike?: (Scalars['String'] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A connected account */
export interface ConnectedAccountOrderByInput {
/** The account handle (email, username, phone number, etc.) */
handle?: (OrderByDirection | null),
/** The account provider */
provider?: (OrderByDirection | null),
/** Messaging provider access token */
accessToken?: (OrderByDirection | null),
/** Messaging provider refresh token */
refreshToken?: (OrderByDirection | null),
/** Last sync history ID */
lastSyncHistoryId?: (OrderByDirection | null),
/** Auth failed at */
authFailedAt?: (OrderByDirection | null),
/** Handle Aliases */
handleAliases?: (OrderByDirection | null),
/** Scopes */
scopes?: (OrderByDirection | null),
/** JSON object containing custom connection parameters */
connectionParameters?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Account Owner */
accountOwnerId?: (OrderByDirection | null)}


/** A connected account */
export interface ConnectedAccountOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (ConnectedAccountOrderByWithGroupByAggregateInput | null),
/** The account handle (email, username, phone number, etc.) */
handle?: (OrderByDirection | null),
/** The account provider */
provider?: (OrderByDirection | null),
/** Messaging provider access token */
accessToken?: (OrderByDirection | null),
/** Messaging provider refresh token */
refreshToken?: (OrderByDirection | null),
/** Last sync history ID */
lastSyncHistoryId?: (OrderByDirection | null),
/** Auth failed at */
authFailedAt?: (OrderByDateGranularityInput | null),
/** Handle Aliases */
handleAliases?: (OrderByDirection | null),
/** Scopes */
scopes?: (OrderByDirection | null),
/** JSON object containing custom connection parameters */
connectionParameters?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Account Owner */
accountOwnerId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface ConnectedAccountOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for handle */
countUniqueValuesHandle?: (OrderByDirection | null),
/** Number of empty values for handle */
countEmptyHandle?: (OrderByDirection | null),
/** Number of non-empty values for handle */
countNotEmptyHandle?: (OrderByDirection | null),
/** Percentage of empty values for handle */
percentageEmptyHandle?: (OrderByDirection | null),
/** Percentage of non-empty values for handle */
percentageNotEmptyHandle?: (OrderByDirection | null),
/** Number of unique values for provider */
countUniqueValuesProvider?: (OrderByDirection | null),
/** Number of empty values for provider */
countEmptyProvider?: (OrderByDirection | null),
/** Number of non-empty values for provider */
countNotEmptyProvider?: (OrderByDirection | null),
/** Percentage of empty values for provider */
percentageEmptyProvider?: (OrderByDirection | null),
/** Percentage of non-empty values for provider */
percentageNotEmptyProvider?: (OrderByDirection | null),
/** Number of unique values for accessToken */
countUniqueValuesAccessToken?: (OrderByDirection | null),
/** Number of empty values for accessToken */
countEmptyAccessToken?: (OrderByDirection | null),
/** Number of non-empty values for accessToken */
countNotEmptyAccessToken?: (OrderByDirection | null),
/** Percentage of empty values for accessToken */
percentageEmptyAccessToken?: (OrderByDirection | null),
/** Percentage of non-empty values for accessToken */
percentageNotEmptyAccessToken?: (OrderByDirection | null),
/** Number of unique values for refreshToken */
countUniqueValuesRefreshToken?: (OrderByDirection | null),
/** Number of empty values for refreshToken */
countEmptyRefreshToken?: (OrderByDirection | null),
/** Number of non-empty values for refreshToken */
countNotEmptyRefreshToken?: (OrderByDirection | null),
/** Percentage of empty values for refreshToken */
percentageEmptyRefreshToken?: (OrderByDirection | null),
/** Percentage of non-empty values for refreshToken */
percentageNotEmptyRefreshToken?: (OrderByDirection | null),
/** Number of unique values for lastSyncHistoryId */
countUniqueValuesLastSyncHistoryId?: (OrderByDirection | null),
/** Number of empty values for lastSyncHistoryId */
countEmptyLastSyncHistoryId?: (OrderByDirection | null),
/** Number of non-empty values for lastSyncHistoryId */
countNotEmptyLastSyncHistoryId?: (OrderByDirection | null),
/** Percentage of empty values for lastSyncHistoryId */
percentageEmptyLastSyncHistoryId?: (OrderByDirection | null),
/** Percentage of non-empty values for lastSyncHistoryId */
percentageNotEmptyLastSyncHistoryId?: (OrderByDirection | null),
/** Number of unique values for authFailedAt */
countUniqueValuesAuthFailedAt?: (OrderByDirection | null),
/** Number of empty values for authFailedAt */
countEmptyAuthFailedAt?: (OrderByDirection | null),
/** Number of non-empty values for authFailedAt */
countNotEmptyAuthFailedAt?: (OrderByDirection | null),
/** Percentage of empty values for authFailedAt */
percentageEmptyAuthFailedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for authFailedAt */
percentageNotEmptyAuthFailedAt?: (OrderByDirection | null),
/** Earliest date contained in the field authFailedAt */
minAuthFailedAt?: (OrderByDirection | null),
/** Latest date contained in the field authFailedAt */
maxAuthFailedAt?: (OrderByDirection | null),
/** Number of unique values for handleAliases */
countUniqueValuesHandleAliases?: (OrderByDirection | null),
/** Number of empty values for handleAliases */
countEmptyHandleAliases?: (OrderByDirection | null),
/** Number of non-empty values for handleAliases */
countNotEmptyHandleAliases?: (OrderByDirection | null),
/** Percentage of empty values for handleAliases */
percentageEmptyHandleAliases?: (OrderByDirection | null),
/** Percentage of non-empty values for handleAliases */
percentageNotEmptyHandleAliases?: (OrderByDirection | null),
/** Number of unique values for scopes */
countUniqueValuesScopes?: (OrderByDirection | null),
/** Number of empty values for scopes */
countEmptyScopes?: (OrderByDirection | null),
/** Number of non-empty values for scopes */
countNotEmptyScopes?: (OrderByDirection | null),
/** Percentage of empty values for scopes */
percentageEmptyScopes?: (OrderByDirection | null),
/** Percentage of non-empty values for scopes */
percentageNotEmptyScopes?: (OrderByDirection | null),
/** Number of unique values for connectionParameters */
countUniqueValuesConnectionParameters?: (OrderByDirection | null),
/** Number of empty values for connectionParameters */
countEmptyConnectionParameters?: (OrderByDirection | null),
/** Number of non-empty values for connectionParameters */
countNotEmptyConnectionParameters?: (OrderByDirection | null),
/** Percentage of empty values for connectionParameters */
percentageEmptyConnectionParameters?: (OrderByDirection | null),
/** Percentage of non-empty values for connectionParameters */
percentageNotEmptyConnectionParameters?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Account Owner */
accountOwnerId?: (OrderByDirection | null)}


/** A connected account */
export interface ConnectedAccountGroupByInput {
/** The account handle (email, username, phone number, etc.) */
handle?: (Scalars['Boolean'] | null),
/** The account provider */
provider?: (Scalars['Boolean'] | null),
/** Messaging provider access token */
accessToken?: (Scalars['Boolean'] | null),
/** Messaging provider refresh token */
refreshToken?: (Scalars['Boolean'] | null),
/** Last sync history ID */
lastSyncHistoryId?: (Scalars['Boolean'] | null),
/** Auth failed at */
authFailedAt?: (GroupByDateGranularityInput | null),
/** Handle Aliases */
handleAliases?: (Scalars['Boolean'] | null),
/** Scopes */
scopes?: (Scalars['Boolean'] | null),
/** JSON object containing custom connection parameters */
connectionParameters?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Account Owner */
accountOwnerId?: (Scalars['Boolean'] | null)}


/** A dashboard */
export interface DashboardGenqlSelection{
    /** Dashboard title */
    title?: boolean | number
    /** Dashboard page layout */
    pageLayoutId?: boolean | number
    /** Dashboard record Position */
    position?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Timeline activities linked to the dashboard */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    /** Favorites linked to the dashboard */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Attachments linked to the dashboard */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A dashboard */
export interface DashboardEdgeGenqlSelection{
    node?: DashboardGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A dashboard */
export interface DashboardConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for pageLayoutId */
    countUniqueValuesPageLayoutId?: boolean | number
    /** Number of empty values for pageLayoutId */
    countEmptyPageLayoutId?: boolean | number
    /** Number of non-empty values for pageLayoutId */
    countNotEmptyPageLayoutId?: boolean | number
    /** Percentage of empty values for pageLayoutId */
    percentageEmptyPageLayoutId?: boolean | number
    /** Percentage of non-empty values for pageLayoutId */
    percentageNotEmptyPageLayoutId?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: DashboardEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A dashboard */
export interface DashboardGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for pageLayoutId */
    countUniqueValuesPageLayoutId?: boolean | number
    /** Number of empty values for pageLayoutId */
    countEmptyPageLayoutId?: boolean | number
    /** Number of non-empty values for pageLayoutId */
    countNotEmptyPageLayoutId?: boolean | number
    /** Percentage of empty values for pageLayoutId */
    percentageEmptyPageLayoutId?: boolean | number
    /** Percentage of non-empty values for pageLayoutId */
    percentageNotEmptyPageLayoutId?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: DashboardEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface DashboardRelationInput {
/** Connect to a dashboard record */
connect?: (DashboardConnectInput | null),
/** Disconnect from a dashboard record */
disconnect?: (Scalars['Boolean'] | null)}

export interface DashboardConnectInput {
/** Find a dashboard record based on its unique fields: id */
where?: (DashboardWhereUniqueInput | null)}

export interface DashboardWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A dashboard */
export interface DashboardCreateInput {
/** Dashboard title */
title?: (Scalars['String'] | null),
/** Dashboard page layout */
pageLayoutId?: (Scalars['UUID'] | null),
/** Dashboard record Position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A dashboard */
export interface DashboardUpdateInput {
/** Dashboard title */
title?: (Scalars['String'] | null),
/** Dashboard page layout */
pageLayoutId?: (Scalars['UUID'] | null),
/** Dashboard record Position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A dashboard */
export interface DashboardFilterInput {
/** Dashboard title */
title?: (StringFilter | null),
/** Dashboard page layout */
pageLayoutId?: (UUIDFilter | null),
/** Dashboard record Position */
position?: (FloatFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((DashboardFilterInput | null)[] | null),or?: ((DashboardFilterInput | null)[] | null),not?: (DashboardFilterInput | null)}


/** A dashboard */
export interface DashboardOrderByInput {
/** Dashboard title */
title?: (OrderByDirection | null),
/** Dashboard page layout */
pageLayoutId?: (OrderByDirection | null),
/** Dashboard record Position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** A dashboard */
export interface DashboardOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (DashboardOrderByWithGroupByAggregateInput | null),
/** Dashboard title */
title?: (OrderByDirection | null),
/** Dashboard page layout */
pageLayoutId?: (OrderByDirection | null),
/** Dashboard record Position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface DashboardOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for title */
countUniqueValuesTitle?: (OrderByDirection | null),
/** Number of empty values for title */
countEmptyTitle?: (OrderByDirection | null),
/** Number of non-empty values for title */
countNotEmptyTitle?: (OrderByDirection | null),
/** Percentage of empty values for title */
percentageEmptyTitle?: (OrderByDirection | null),
/** Percentage of non-empty values for title */
percentageNotEmptyTitle?: (OrderByDirection | null),
/** Number of unique values for pageLayoutId */
countUniqueValuesPageLayoutId?: (OrderByDirection | null),
/** Number of empty values for pageLayoutId */
countEmptyPageLayoutId?: (OrderByDirection | null),
/** Number of non-empty values for pageLayoutId */
countNotEmptyPageLayoutId?: (OrderByDirection | null),
/** Percentage of empty values for pageLayoutId */
percentageEmptyPageLayoutId?: (OrderByDirection | null),
/** Percentage of non-empty values for pageLayoutId */
percentageNotEmptyPageLayoutId?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** A dashboard */
export interface DashboardGroupByInput {
/** Dashboard title */
title?: (Scalars['Boolean'] | null),
/** Dashboard page layout */
pageLayoutId?: (Scalars['Boolean'] | null),
/** Dashboard record Position */
position?: (Scalars['Boolean'] | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** A favorite that can be accessed from the left menu */
export interface FavoriteGenqlSelection{
    /** Favorite position */
    position?: boolean | number
    /** ViewId */
    viewId?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Favorite workspace member */
    forWorkspaceMemberId?: boolean | number
    /** Favorite person */
    personId?: boolean | number
    /** Favorite company */
    companyId?: boolean | number
    /** The folder this favorite belongs to */
    favoriteFolderId?: boolean | number
    /** Favorite opportunity */
    opportunityId?: boolean | number
    /** Favorite workflow */
    workflowId?: boolean | number
    /** Favorite workflow version */
    workflowVersionId?: boolean | number
    /** Favorite workflow run */
    workflowRunId?: boolean | number
    /** Favorite task */
    taskId?: boolean | number
    /** Favorite note */
    noteId?: boolean | number
    /** Favorite dashboard */
    dashboardId?: boolean | number
    /** Favorites Rocket */
    rocketId?: boolean | number
    /** Favorites Pet */
    petId?: boolean | number
    /** Favorites Survey result */
    surveyResultId?: boolean | number
    /** Favorite workspace member */
    forWorkspaceMember?: WorkspaceMemberGenqlSelection
    /** Favorite person */
    person?: PersonGenqlSelection
    /** Favorite company */
    company?: CompanyGenqlSelection
    /** The folder this favorite belongs to */
    favoriteFolder?: FavoriteFolderGenqlSelection
    /** Favorite opportunity */
    opportunity?: OpportunityGenqlSelection
    /** Favorite workflow */
    workflow?: WorkflowGenqlSelection
    /** Favorite workflow version */
    workflowVersion?: WorkflowVersionGenqlSelection
    /** Favorite workflow run */
    workflowRun?: WorkflowRunGenqlSelection
    /** Favorite task */
    task?: TaskGenqlSelection
    /** Favorite note */
    note?: NoteGenqlSelection
    /** Favorite dashboard */
    dashboard?: DashboardGenqlSelection
    /** Favorites Rocket */
    rocket?: RocketGenqlSelection
    /** Favorites Pet */
    pet?: PetGenqlSelection
    /** Favorites Survey result */
    surveyResult?: SurveyResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A favorite that can be accessed from the left menu */
export interface FavoriteEdgeGenqlSelection{
    node?: FavoriteGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A favorite that can be accessed from the left menu */
export interface FavoriteConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for viewId */
    countUniqueValuesViewId?: boolean | number
    /** Number of empty values for viewId */
    countEmptyViewId?: boolean | number
    /** Number of non-empty values for viewId */
    countNotEmptyViewId?: boolean | number
    /** Percentage of empty values for viewId */
    percentageEmptyViewId?: boolean | number
    /** Percentage of non-empty values for viewId */
    percentageNotEmptyViewId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: FavoriteEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A favorite that can be accessed from the left menu */
export interface FavoriteGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for viewId */
    countUniqueValuesViewId?: boolean | number
    /** Number of empty values for viewId */
    countEmptyViewId?: boolean | number
    /** Number of non-empty values for viewId */
    countNotEmptyViewId?: boolean | number
    /** Percentage of empty values for viewId */
    percentageEmptyViewId?: boolean | number
    /** Percentage of non-empty values for viewId */
    percentageNotEmptyViewId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: FavoriteEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FavoriteRelationInput {
/** Connect to a favorite record */
connect?: (FavoriteConnectInput | null),
/** Disconnect from a favorite record */
disconnect?: (Scalars['Boolean'] | null)}

export interface FavoriteConnectInput {
/** Find a favorite record based on its unique fields: id */
where?: (FavoriteWhereUniqueInput | null)}

export interface FavoriteWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A favorite that can be accessed from the left menu */
export interface FavoriteCreateInput {
/** Favorite position */
position?: (Scalars['Float'] | null),
/** ViewId */
viewId?: (Scalars['UUID'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Favorite workspace member */
forWorkspaceMemberId?: (Scalars['ID'] | null),
/** Favorite workspace member */
forWorkspaceMember?: (WorkspaceMemberRelationInput | null),
/** Favorite person */
personId?: (Scalars['ID'] | null),
/** Favorite person */
person?: (PersonRelationInput | null),
/** Favorite company */
companyId?: (Scalars['ID'] | null),
/** Favorite company */
company?: (CompanyRelationInput | null),
/** The folder this favorite belongs to */
favoriteFolderId?: (Scalars['ID'] | null),
/** The folder this favorite belongs to */
favoriteFolder?: (FavoriteFolderRelationInput | null),
/** Favorite opportunity */
opportunityId?: (Scalars['ID'] | null),
/** Favorite opportunity */
opportunity?: (OpportunityRelationInput | null),
/** Favorite workflow */
workflowId?: (Scalars['ID'] | null),
/** Favorite workflow */
workflow?: (WorkflowRelationInput | null),
/** Favorite workflow version */
workflowVersionId?: (Scalars['ID'] | null),
/** Favorite workflow version */
workflowVersion?: (WorkflowVersionRelationInput | null),
/** Favorite workflow run */
workflowRunId?: (Scalars['ID'] | null),
/** Favorite workflow run */
workflowRun?: (WorkflowRunRelationInput | null),
/** Favorite task */
taskId?: (Scalars['ID'] | null),
/** Favorite task */
task?: (TaskRelationInput | null),
/** Favorite note */
noteId?: (Scalars['ID'] | null),
/** Favorite note */
note?: (NoteRelationInput | null),
/** Favorite dashboard */
dashboardId?: (Scalars['ID'] | null),
/** Favorite dashboard */
dashboard?: (DashboardRelationInput | null),
/** Favorites Rocket */
rocketId?: (Scalars['ID'] | null),
/** Favorites Rocket */
rocket?: (RocketRelationInput | null),
/** Favorites Pet */
petId?: (Scalars['ID'] | null),
/** Favorites Pet */
pet?: (PetRelationInput | null),
/** Favorites Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** Favorites Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** A favorite that can be accessed from the left menu */
export interface FavoriteUpdateInput {
/** Favorite position */
position?: (Scalars['Float'] | null),
/** ViewId */
viewId?: (Scalars['UUID'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Favorite workspace member */
forWorkspaceMemberId?: (Scalars['ID'] | null),
/** Favorite workspace member */
forWorkspaceMember?: (WorkspaceMemberRelationInput | null),
/** Favorite person */
personId?: (Scalars['ID'] | null),
/** Favorite person */
person?: (PersonRelationInput | null),
/** Favorite company */
companyId?: (Scalars['ID'] | null),
/** Favorite company */
company?: (CompanyRelationInput | null),
/** The folder this favorite belongs to */
favoriteFolderId?: (Scalars['ID'] | null),
/** The folder this favorite belongs to */
favoriteFolder?: (FavoriteFolderRelationInput | null),
/** Favorite opportunity */
opportunityId?: (Scalars['ID'] | null),
/** Favorite opportunity */
opportunity?: (OpportunityRelationInput | null),
/** Favorite workflow */
workflowId?: (Scalars['ID'] | null),
/** Favorite workflow */
workflow?: (WorkflowRelationInput | null),
/** Favorite workflow version */
workflowVersionId?: (Scalars['ID'] | null),
/** Favorite workflow version */
workflowVersion?: (WorkflowVersionRelationInput | null),
/** Favorite workflow run */
workflowRunId?: (Scalars['ID'] | null),
/** Favorite workflow run */
workflowRun?: (WorkflowRunRelationInput | null),
/** Favorite task */
taskId?: (Scalars['ID'] | null),
/** Favorite task */
task?: (TaskRelationInput | null),
/** Favorite note */
noteId?: (Scalars['ID'] | null),
/** Favorite note */
note?: (NoteRelationInput | null),
/** Favorite dashboard */
dashboardId?: (Scalars['ID'] | null),
/** Favorite dashboard */
dashboard?: (DashboardRelationInput | null),
/** Favorites Rocket */
rocketId?: (Scalars['ID'] | null),
/** Favorites Rocket */
rocket?: (RocketRelationInput | null),
/** Favorites Pet */
petId?: (Scalars['ID'] | null),
/** Favorites Pet */
pet?: (PetRelationInput | null),
/** Favorites Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** Favorites Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** A favorite that can be accessed from the left menu */
export interface FavoriteFilterInput {
/** Favorite position */
position?: (FloatFilter | null),
/** ViewId */
viewId?: (UUIDFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Favorite workspace member */
forWorkspaceMemberId?: (UUIDFilter | null),
/** Favorite person */
personId?: (UUIDFilter | null),
/** Favorite company */
companyId?: (UUIDFilter | null),
/** The folder this favorite belongs to */
favoriteFolderId?: (UUIDFilter | null),
/** Favorite opportunity */
opportunityId?: (UUIDFilter | null),
/** Favorite workflow */
workflowId?: (UUIDFilter | null),
/** Favorite workflow version */
workflowVersionId?: (UUIDFilter | null),
/** Favorite workflow run */
workflowRunId?: (UUIDFilter | null),
/** Favorite task */
taskId?: (UUIDFilter | null),
/** Favorite note */
noteId?: (UUIDFilter | null),
/** Favorite dashboard */
dashboardId?: (UUIDFilter | null),
/** Favorites Rocket */
rocketId?: (UUIDFilter | null),
/** Favorites Pet */
petId?: (UUIDFilter | null),
/** Favorites Survey result */
surveyResultId?: (UUIDFilter | null),and?: ((FavoriteFilterInput | null)[] | null),or?: ((FavoriteFilterInput | null)[] | null),not?: (FavoriteFilterInput | null)}


/** A favorite that can be accessed from the left menu */
export interface FavoriteOrderByInput {
/** Favorite position */
position?: (OrderByDirection | null),
/** ViewId */
viewId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Favorite workspace member */
forWorkspaceMemberId?: (OrderByDirection | null),
/** Favorite person */
personId?: (OrderByDirection | null),
/** Favorite company */
companyId?: (OrderByDirection | null),
/** The folder this favorite belongs to */
favoriteFolderId?: (OrderByDirection | null),
/** Favorite opportunity */
opportunityId?: (OrderByDirection | null),
/** Favorite workflow */
workflowId?: (OrderByDirection | null),
/** Favorite workflow version */
workflowVersionId?: (OrderByDirection | null),
/** Favorite workflow run */
workflowRunId?: (OrderByDirection | null),
/** Favorite task */
taskId?: (OrderByDirection | null),
/** Favorite note */
noteId?: (OrderByDirection | null),
/** Favorite dashboard */
dashboardId?: (OrderByDirection | null),
/** Favorites Rocket */
rocketId?: (OrderByDirection | null),
/** Favorites Pet */
petId?: (OrderByDirection | null),
/** Favorites Survey result */
surveyResultId?: (OrderByDirection | null)}


/** A favorite that can be accessed from the left menu */
export interface FavoriteOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (FavoriteOrderByWithGroupByAggregateInput | null),
/** Favorite position */
position?: (OrderByDirection | null),
/** ViewId */
viewId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Favorite workspace member */
forWorkspaceMemberId?: (OrderByDirection | null),
/** Favorite person */
personId?: (OrderByDirection | null),
/** Favorite company */
companyId?: (OrderByDirection | null),
/** The folder this favorite belongs to */
favoriteFolderId?: (OrderByDirection | null),
/** Favorite opportunity */
opportunityId?: (OrderByDirection | null),
/** Favorite workflow */
workflowId?: (OrderByDirection | null),
/** Favorite workflow version */
workflowVersionId?: (OrderByDirection | null),
/** Favorite workflow run */
workflowRunId?: (OrderByDirection | null),
/** Favorite task */
taskId?: (OrderByDirection | null),
/** Favorite note */
noteId?: (OrderByDirection | null),
/** Favorite dashboard */
dashboardId?: (OrderByDirection | null),
/** Favorites Rocket */
rocketId?: (OrderByDirection | null),
/** Favorites Pet */
petId?: (OrderByDirection | null),
/** Favorites Survey result */
surveyResultId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface FavoriteOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Minimum amount contained in the field position */
minPosition?: (OrderByDirection | null),
/** Maximum amount contained in the field position */
maxPosition?: (OrderByDirection | null),
/** Average amount contained in the field position */
avgPosition?: (OrderByDirection | null),
/** Sum of amounts contained in the field position */
sumPosition?: (OrderByDirection | null),
/** Number of unique values for viewId */
countUniqueValuesViewId?: (OrderByDirection | null),
/** Number of empty values for viewId */
countEmptyViewId?: (OrderByDirection | null),
/** Number of non-empty values for viewId */
countNotEmptyViewId?: (OrderByDirection | null),
/** Percentage of empty values for viewId */
percentageEmptyViewId?: (OrderByDirection | null),
/** Percentage of non-empty values for viewId */
percentageNotEmptyViewId?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Favorite workspace member */
forWorkspaceMemberId?: (OrderByDirection | null),
/** Favorite person */
personId?: (OrderByDirection | null),
/** Favorite company */
companyId?: (OrderByDirection | null),
/** The folder this favorite belongs to */
favoriteFolderId?: (OrderByDirection | null),
/** Favorite opportunity */
opportunityId?: (OrderByDirection | null),
/** Favorite workflow */
workflowId?: (OrderByDirection | null),
/** Favorite workflow version */
workflowVersionId?: (OrderByDirection | null),
/** Favorite workflow run */
workflowRunId?: (OrderByDirection | null),
/** Favorite task */
taskId?: (OrderByDirection | null),
/** Favorite note */
noteId?: (OrderByDirection | null),
/** Favorite dashboard */
dashboardId?: (OrderByDirection | null),
/** Favorites Rocket */
rocketId?: (OrderByDirection | null),
/** Favorites Pet */
petId?: (OrderByDirection | null),
/** Favorites Survey result */
surveyResultId?: (OrderByDirection | null)}


/** A favorite that can be accessed from the left menu */
export interface FavoriteGroupByInput {
/** Favorite position */
position?: (Scalars['Boolean'] | null),
/** ViewId */
viewId?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Favorite workspace member */
forWorkspaceMemberId?: (Scalars['Boolean'] | null),
/** Favorite person */
personId?: (Scalars['Boolean'] | null),
/** Favorite company */
companyId?: (Scalars['Boolean'] | null),
/** The folder this favorite belongs to */
favoriteFolderId?: (Scalars['Boolean'] | null),
/** Favorite opportunity */
opportunityId?: (Scalars['Boolean'] | null),
/** Favorite workflow */
workflowId?: (Scalars['Boolean'] | null),
/** Favorite workflow version */
workflowVersionId?: (Scalars['Boolean'] | null),
/** Favorite workflow run */
workflowRunId?: (Scalars['Boolean'] | null),
/** Favorite task */
taskId?: (Scalars['Boolean'] | null),
/** Favorite note */
noteId?: (Scalars['Boolean'] | null),
/** Favorite dashboard */
dashboardId?: (Scalars['Boolean'] | null),
/** Favorites Rocket */
rocketId?: (Scalars['Boolean'] | null),
/** Favorites Pet */
petId?: (Scalars['Boolean'] | null),
/** Favorites Survey result */
surveyResultId?: (Scalars['Boolean'] | null)}


/** A Folder of favorites */
export interface FavoriteFolderGenqlSelection{
    /** Favorite folder position */
    position?: boolean | number
    /** Name of the favorite folder */
    name?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Favorites in this folder */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Folder of favorites */
export interface FavoriteFolderEdgeGenqlSelection{
    node?: FavoriteFolderGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Folder of favorites */
export interface FavoriteFolderConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: FavoriteFolderEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A Folder of favorites */
export interface FavoriteFolderGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: FavoriteFolderEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface FavoriteFolderRelationInput {
/** Connect to a favoriteFolder record */
connect?: (FavoriteFolderConnectInput | null),
/** Disconnect from a favoriteFolder record */
disconnect?: (Scalars['Boolean'] | null)}

export interface FavoriteFolderConnectInput {
/** Find a favoriteFolder record based on its unique fields: id */
where?: (FavoriteFolderWhereUniqueInput | null)}

export interface FavoriteFolderWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A Folder of favorites */
export interface FavoriteFolderCreateInput {
/** Favorite folder position */
position?: (Scalars['Float'] | null),
/** Name of the favorite folder */
name?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A Folder of favorites */
export interface FavoriteFolderUpdateInput {
/** Favorite folder position */
position?: (Scalars['Float'] | null),
/** Name of the favorite folder */
name?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A Folder of favorites */
export interface FavoriteFolderFilterInput {
/** Favorite folder position */
position?: (FloatFilter | null),
/** Name of the favorite folder */
name?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((FavoriteFolderFilterInput | null)[] | null),or?: ((FavoriteFolderFilterInput | null)[] | null),not?: (FavoriteFolderFilterInput | null)}


/** A Folder of favorites */
export interface FavoriteFolderOrderByInput {
/** Favorite folder position */
position?: (OrderByDirection | null),
/** Name of the favorite folder */
name?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** A Folder of favorites */
export interface FavoriteFolderOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (FavoriteFolderOrderByWithGroupByAggregateInput | null),
/** Favorite folder position */
position?: (OrderByDirection | null),
/** Name of the favorite folder */
name?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface FavoriteFolderOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Minimum amount contained in the field position */
minPosition?: (OrderByDirection | null),
/** Maximum amount contained in the field position */
maxPosition?: (OrderByDirection | null),
/** Average amount contained in the field position */
avgPosition?: (OrderByDirection | null),
/** Sum of amounts contained in the field position */
sumPosition?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** A Folder of favorites */
export interface FavoriteFolderGroupByInput {
/** Favorite folder position */
position?: (Scalars['Boolean'] | null),
/** Name of the favorite folder */
name?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityGenqlSelection{
    /** Creation date */
    happensAt?: boolean | number
    /** Event name */
    name?: boolean | number
    /** Json value for event details */
    properties?: boolean | number
    /** Cached record name */
    linkedRecordCachedName?: boolean | number
    /** Linked Record id */
    linkedRecordId?: boolean | number
    /** Linked Object Metadata Id */
    linkedObjectMetadataId?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Event workspace member */
    workspaceMemberId?: boolean | number
    /** Event person */
    personId?: boolean | number
    /** Event company */
    companyId?: boolean | number
    /** Event opportunity */
    opportunityId?: boolean | number
    /** Event note */
    noteId?: boolean | number
    /** Event task */
    taskId?: boolean | number
    /** Event workflow */
    workflowId?: boolean | number
    /** Event workflow version */
    workflowVersionId?: boolean | number
    /** Event workflow run */
    workflowRunId?: boolean | number
    /** Event dashboard */
    dashboardId?: boolean | number
    /** TimelineActivities Rocket */
    rocketId?: boolean | number
    /** TimelineActivities Pet */
    petId?: boolean | number
    /** TimelineActivities Survey result */
    surveyResultId?: boolean | number
    /** Event workspace member */
    workspaceMember?: WorkspaceMemberGenqlSelection
    /** Event person */
    person?: PersonGenqlSelection
    /** Event company */
    company?: CompanyGenqlSelection
    /** Event opportunity */
    opportunity?: OpportunityGenqlSelection
    /** Event note */
    note?: NoteGenqlSelection
    /** Event task */
    task?: TaskGenqlSelection
    /** Event workflow */
    workflow?: WorkflowGenqlSelection
    /** Event workflow version */
    workflowVersion?: WorkflowVersionGenqlSelection
    /** Event workflow run */
    workflowRun?: WorkflowRunGenqlSelection
    /** Event dashboard */
    dashboard?: DashboardGenqlSelection
    /** TimelineActivities Rocket */
    rocket?: RocketGenqlSelection
    /** TimelineActivities Pet */
    pet?: PetGenqlSelection
    /** TimelineActivities Survey result */
    surveyResult?: SurveyResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityEdgeGenqlSelection{
    node?: TimelineActivityGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for happensAt */
    countUniqueValuesHappensAt?: boolean | number
    /** Number of empty values for happensAt */
    countEmptyHappensAt?: boolean | number
    /** Number of non-empty values for happensAt */
    countNotEmptyHappensAt?: boolean | number
    /** Percentage of empty values for happensAt */
    percentageEmptyHappensAt?: boolean | number
    /** Percentage of non-empty values for happensAt */
    percentageNotEmptyHappensAt?: boolean | number
    /** Earliest date contained in the field happensAt */
    minHappensAt?: boolean | number
    /** Latest date contained in the field happensAt */
    maxHappensAt?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for properties */
    countUniqueValuesProperties?: boolean | number
    /** Number of empty values for properties */
    countEmptyProperties?: boolean | number
    /** Number of non-empty values for properties */
    countNotEmptyProperties?: boolean | number
    /** Percentage of empty values for properties */
    percentageEmptyProperties?: boolean | number
    /** Percentage of non-empty values for properties */
    percentageNotEmptyProperties?: boolean | number
    /** Number of unique values for linkedRecordCachedName */
    countUniqueValuesLinkedRecordCachedName?: boolean | number
    /** Number of empty values for linkedRecordCachedName */
    countEmptyLinkedRecordCachedName?: boolean | number
    /** Number of non-empty values for linkedRecordCachedName */
    countNotEmptyLinkedRecordCachedName?: boolean | number
    /** Percentage of empty values for linkedRecordCachedName */
    percentageEmptyLinkedRecordCachedName?: boolean | number
    /** Percentage of non-empty values for linkedRecordCachedName */
    percentageNotEmptyLinkedRecordCachedName?: boolean | number
    /** Number of unique values for linkedRecordId */
    countUniqueValuesLinkedRecordId?: boolean | number
    /** Number of empty values for linkedRecordId */
    countEmptyLinkedRecordId?: boolean | number
    /** Number of non-empty values for linkedRecordId */
    countNotEmptyLinkedRecordId?: boolean | number
    /** Percentage of empty values for linkedRecordId */
    percentageEmptyLinkedRecordId?: boolean | number
    /** Percentage of non-empty values for linkedRecordId */
    percentageNotEmptyLinkedRecordId?: boolean | number
    /** Number of unique values for linkedObjectMetadataId */
    countUniqueValuesLinkedObjectMetadataId?: boolean | number
    /** Number of empty values for linkedObjectMetadataId */
    countEmptyLinkedObjectMetadataId?: boolean | number
    /** Number of non-empty values for linkedObjectMetadataId */
    countNotEmptyLinkedObjectMetadataId?: boolean | number
    /** Percentage of empty values for linkedObjectMetadataId */
    percentageEmptyLinkedObjectMetadataId?: boolean | number
    /** Percentage of non-empty values for linkedObjectMetadataId */
    percentageNotEmptyLinkedObjectMetadataId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: TimelineActivityEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for happensAt */
    countUniqueValuesHappensAt?: boolean | number
    /** Number of empty values for happensAt */
    countEmptyHappensAt?: boolean | number
    /** Number of non-empty values for happensAt */
    countNotEmptyHappensAt?: boolean | number
    /** Percentage of empty values for happensAt */
    percentageEmptyHappensAt?: boolean | number
    /** Percentage of non-empty values for happensAt */
    percentageNotEmptyHappensAt?: boolean | number
    /** Earliest date contained in the field happensAt */
    minHappensAt?: boolean | number
    /** Latest date contained in the field happensAt */
    maxHappensAt?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for properties */
    countUniqueValuesProperties?: boolean | number
    /** Number of empty values for properties */
    countEmptyProperties?: boolean | number
    /** Number of non-empty values for properties */
    countNotEmptyProperties?: boolean | number
    /** Percentage of empty values for properties */
    percentageEmptyProperties?: boolean | number
    /** Percentage of non-empty values for properties */
    percentageNotEmptyProperties?: boolean | number
    /** Number of unique values for linkedRecordCachedName */
    countUniqueValuesLinkedRecordCachedName?: boolean | number
    /** Number of empty values for linkedRecordCachedName */
    countEmptyLinkedRecordCachedName?: boolean | number
    /** Number of non-empty values for linkedRecordCachedName */
    countNotEmptyLinkedRecordCachedName?: boolean | number
    /** Percentage of empty values for linkedRecordCachedName */
    percentageEmptyLinkedRecordCachedName?: boolean | number
    /** Percentage of non-empty values for linkedRecordCachedName */
    percentageNotEmptyLinkedRecordCachedName?: boolean | number
    /** Number of unique values for linkedRecordId */
    countUniqueValuesLinkedRecordId?: boolean | number
    /** Number of empty values for linkedRecordId */
    countEmptyLinkedRecordId?: boolean | number
    /** Number of non-empty values for linkedRecordId */
    countNotEmptyLinkedRecordId?: boolean | number
    /** Percentage of empty values for linkedRecordId */
    percentageEmptyLinkedRecordId?: boolean | number
    /** Percentage of non-empty values for linkedRecordId */
    percentageNotEmptyLinkedRecordId?: boolean | number
    /** Number of unique values for linkedObjectMetadataId */
    countUniqueValuesLinkedObjectMetadataId?: boolean | number
    /** Number of empty values for linkedObjectMetadataId */
    countEmptyLinkedObjectMetadataId?: boolean | number
    /** Number of non-empty values for linkedObjectMetadataId */
    countNotEmptyLinkedObjectMetadataId?: boolean | number
    /** Percentage of empty values for linkedObjectMetadataId */
    percentageEmptyLinkedObjectMetadataId?: boolean | number
    /** Percentage of non-empty values for linkedObjectMetadataId */
    percentageNotEmptyLinkedObjectMetadataId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: TimelineActivityEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TimelineActivityRelationInput {
/** Connect to a timelineActivity record */
connect?: (TimelineActivityConnectInput | null),
/** Disconnect from a timelineActivity record */
disconnect?: (Scalars['Boolean'] | null)}

export interface TimelineActivityConnectInput {
/** Find a timelineActivity record based on its unique fields: id */
where?: (TimelineActivityWhereUniqueInput | null)}

export interface TimelineActivityWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityCreateInput {
/** Creation date */
happensAt?: (Scalars['DateTime'] | null),
/** Event name */
name?: (Scalars['String'] | null),
/** Json value for event details */
properties?: (Scalars['JSON'] | null),
/** Cached record name */
linkedRecordCachedName?: (Scalars['String'] | null),
/** Linked Record id */
linkedRecordId?: (Scalars['UUID'] | null),
/** Linked Object Metadata Id */
linkedObjectMetadataId?: (Scalars['UUID'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Event workspace member */
workspaceMemberId?: (Scalars['ID'] | null),
/** Event workspace member */
workspaceMember?: (WorkspaceMemberRelationInput | null),
/** Event person */
personId?: (Scalars['ID'] | null),
/** Event person */
person?: (PersonRelationInput | null),
/** Event company */
companyId?: (Scalars['ID'] | null),
/** Event company */
company?: (CompanyRelationInput | null),
/** Event opportunity */
opportunityId?: (Scalars['ID'] | null),
/** Event opportunity */
opportunity?: (OpportunityRelationInput | null),
/** Event note */
noteId?: (Scalars['ID'] | null),
/** Event note */
note?: (NoteRelationInput | null),
/** Event task */
taskId?: (Scalars['ID'] | null),
/** Event task */
task?: (TaskRelationInput | null),
/** Event workflow */
workflowId?: (Scalars['ID'] | null),
/** Event workflow */
workflow?: (WorkflowRelationInput | null),
/** Event workflow version */
workflowVersionId?: (Scalars['ID'] | null),
/** Event workflow version */
workflowVersion?: (WorkflowVersionRelationInput | null),
/** Event workflow run */
workflowRunId?: (Scalars['ID'] | null),
/** Event workflow run */
workflowRun?: (WorkflowRunRelationInput | null),
/** Event dashboard */
dashboardId?: (Scalars['ID'] | null),
/** Event dashboard */
dashboard?: (DashboardRelationInput | null),
/** TimelineActivities Rocket */
rocketId?: (Scalars['ID'] | null),
/** TimelineActivities Rocket */
rocket?: (RocketRelationInput | null),
/** TimelineActivities Pet */
petId?: (Scalars['ID'] | null),
/** TimelineActivities Pet */
pet?: (PetRelationInput | null),
/** TimelineActivities Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** TimelineActivities Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityUpdateInput {
/** Creation date */
happensAt?: (Scalars['DateTime'] | null),
/** Event name */
name?: (Scalars['String'] | null),
/** Json value for event details */
properties?: (Scalars['JSON'] | null),
/** Cached record name */
linkedRecordCachedName?: (Scalars['String'] | null),
/** Linked Record id */
linkedRecordId?: (Scalars['UUID'] | null),
/** Linked Object Metadata Id */
linkedObjectMetadataId?: (Scalars['UUID'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Event workspace member */
workspaceMemberId?: (Scalars['ID'] | null),
/** Event workspace member */
workspaceMember?: (WorkspaceMemberRelationInput | null),
/** Event person */
personId?: (Scalars['ID'] | null),
/** Event person */
person?: (PersonRelationInput | null),
/** Event company */
companyId?: (Scalars['ID'] | null),
/** Event company */
company?: (CompanyRelationInput | null),
/** Event opportunity */
opportunityId?: (Scalars['ID'] | null),
/** Event opportunity */
opportunity?: (OpportunityRelationInput | null),
/** Event note */
noteId?: (Scalars['ID'] | null),
/** Event note */
note?: (NoteRelationInput | null),
/** Event task */
taskId?: (Scalars['ID'] | null),
/** Event task */
task?: (TaskRelationInput | null),
/** Event workflow */
workflowId?: (Scalars['ID'] | null),
/** Event workflow */
workflow?: (WorkflowRelationInput | null),
/** Event workflow version */
workflowVersionId?: (Scalars['ID'] | null),
/** Event workflow version */
workflowVersion?: (WorkflowVersionRelationInput | null),
/** Event workflow run */
workflowRunId?: (Scalars['ID'] | null),
/** Event workflow run */
workflowRun?: (WorkflowRunRelationInput | null),
/** Event dashboard */
dashboardId?: (Scalars['ID'] | null),
/** Event dashboard */
dashboard?: (DashboardRelationInput | null),
/** TimelineActivities Rocket */
rocketId?: (Scalars['ID'] | null),
/** TimelineActivities Rocket */
rocket?: (RocketRelationInput | null),
/** TimelineActivities Pet */
petId?: (Scalars['ID'] | null),
/** TimelineActivities Pet */
pet?: (PetRelationInput | null),
/** TimelineActivities Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** TimelineActivities Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityFilterInput {
/** Creation date */
happensAt?: (DateFilter | null),
/** Event name */
name?: (StringFilter | null),
/** Json value for event details */
properties?: (RawJsonFilter | null),
/** Cached record name */
linkedRecordCachedName?: (StringFilter | null),
/** Linked Record id */
linkedRecordId?: (UUIDFilter | null),
/** Linked Object Metadata Id */
linkedObjectMetadataId?: (UUIDFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Event workspace member */
workspaceMemberId?: (UUIDFilter | null),
/** Event person */
personId?: (UUIDFilter | null),
/** Event company */
companyId?: (UUIDFilter | null),
/** Event opportunity */
opportunityId?: (UUIDFilter | null),
/** Event note */
noteId?: (UUIDFilter | null),
/** Event task */
taskId?: (UUIDFilter | null),
/** Event workflow */
workflowId?: (UUIDFilter | null),
/** Event workflow version */
workflowVersionId?: (UUIDFilter | null),
/** Event workflow run */
workflowRunId?: (UUIDFilter | null),
/** Event dashboard */
dashboardId?: (UUIDFilter | null),
/** TimelineActivities Rocket */
rocketId?: (UUIDFilter | null),
/** TimelineActivities Pet */
petId?: (UUIDFilter | null),
/** TimelineActivities Survey result */
surveyResultId?: (UUIDFilter | null),and?: ((TimelineActivityFilterInput | null)[] | null),or?: ((TimelineActivityFilterInput | null)[] | null),not?: (TimelineActivityFilterInput | null)}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityOrderByInput {
/** Creation date */
happensAt?: (OrderByDirection | null),
/** Event name */
name?: (OrderByDirection | null),
/** Json value for event details */
properties?: (OrderByDirection | null),
/** Cached record name */
linkedRecordCachedName?: (OrderByDirection | null),
/** Linked Record id */
linkedRecordId?: (OrderByDirection | null),
/** Linked Object Metadata Id */
linkedObjectMetadataId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Event workspace member */
workspaceMemberId?: (OrderByDirection | null),
/** Event person */
personId?: (OrderByDirection | null),
/** Event company */
companyId?: (OrderByDirection | null),
/** Event opportunity */
opportunityId?: (OrderByDirection | null),
/** Event note */
noteId?: (OrderByDirection | null),
/** Event task */
taskId?: (OrderByDirection | null),
/** Event workflow */
workflowId?: (OrderByDirection | null),
/** Event workflow version */
workflowVersionId?: (OrderByDirection | null),
/** Event workflow run */
workflowRunId?: (OrderByDirection | null),
/** Event dashboard */
dashboardId?: (OrderByDirection | null),
/** TimelineActivities Rocket */
rocketId?: (OrderByDirection | null),
/** TimelineActivities Pet */
petId?: (OrderByDirection | null),
/** TimelineActivities Survey result */
surveyResultId?: (OrderByDirection | null)}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (TimelineActivityOrderByWithGroupByAggregateInput | null),
/** Creation date */
happensAt?: (OrderByDateGranularityInput | null),
/** Event name */
name?: (OrderByDirection | null),
/** Json value for event details */
properties?: (OrderByDirection | null),
/** Cached record name */
linkedRecordCachedName?: (OrderByDirection | null),
/** Linked Record id */
linkedRecordId?: (OrderByDirection | null),
/** Linked Object Metadata Id */
linkedObjectMetadataId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Event workspace member */
workspaceMemberId?: (OrderByDirection | null),
/** Event person */
personId?: (OrderByDirection | null),
/** Event company */
companyId?: (OrderByDirection | null),
/** Event opportunity */
opportunityId?: (OrderByDirection | null),
/** Event note */
noteId?: (OrderByDirection | null),
/** Event task */
taskId?: (OrderByDirection | null),
/** Event workflow */
workflowId?: (OrderByDirection | null),
/** Event workflow version */
workflowVersionId?: (OrderByDirection | null),
/** Event workflow run */
workflowRunId?: (OrderByDirection | null),
/** Event dashboard */
dashboardId?: (OrderByDirection | null),
/** TimelineActivities Rocket */
rocketId?: (OrderByDirection | null),
/** TimelineActivities Pet */
petId?: (OrderByDirection | null),
/** TimelineActivities Survey result */
surveyResultId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface TimelineActivityOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for happensAt */
countUniqueValuesHappensAt?: (OrderByDirection | null),
/** Number of empty values for happensAt */
countEmptyHappensAt?: (OrderByDirection | null),
/** Number of non-empty values for happensAt */
countNotEmptyHappensAt?: (OrderByDirection | null),
/** Percentage of empty values for happensAt */
percentageEmptyHappensAt?: (OrderByDirection | null),
/** Percentage of non-empty values for happensAt */
percentageNotEmptyHappensAt?: (OrderByDirection | null),
/** Earliest date contained in the field happensAt */
minHappensAt?: (OrderByDirection | null),
/** Latest date contained in the field happensAt */
maxHappensAt?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for properties */
countUniqueValuesProperties?: (OrderByDirection | null),
/** Number of empty values for properties */
countEmptyProperties?: (OrderByDirection | null),
/** Number of non-empty values for properties */
countNotEmptyProperties?: (OrderByDirection | null),
/** Percentage of empty values for properties */
percentageEmptyProperties?: (OrderByDirection | null),
/** Percentage of non-empty values for properties */
percentageNotEmptyProperties?: (OrderByDirection | null),
/** Number of unique values for linkedRecordCachedName */
countUniqueValuesLinkedRecordCachedName?: (OrderByDirection | null),
/** Number of empty values for linkedRecordCachedName */
countEmptyLinkedRecordCachedName?: (OrderByDirection | null),
/** Number of non-empty values for linkedRecordCachedName */
countNotEmptyLinkedRecordCachedName?: (OrderByDirection | null),
/** Percentage of empty values for linkedRecordCachedName */
percentageEmptyLinkedRecordCachedName?: (OrderByDirection | null),
/** Percentage of non-empty values for linkedRecordCachedName */
percentageNotEmptyLinkedRecordCachedName?: (OrderByDirection | null),
/** Number of unique values for linkedRecordId */
countUniqueValuesLinkedRecordId?: (OrderByDirection | null),
/** Number of empty values for linkedRecordId */
countEmptyLinkedRecordId?: (OrderByDirection | null),
/** Number of non-empty values for linkedRecordId */
countNotEmptyLinkedRecordId?: (OrderByDirection | null),
/** Percentage of empty values for linkedRecordId */
percentageEmptyLinkedRecordId?: (OrderByDirection | null),
/** Percentage of non-empty values for linkedRecordId */
percentageNotEmptyLinkedRecordId?: (OrderByDirection | null),
/** Number of unique values for linkedObjectMetadataId */
countUniqueValuesLinkedObjectMetadataId?: (OrderByDirection | null),
/** Number of empty values for linkedObjectMetadataId */
countEmptyLinkedObjectMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for linkedObjectMetadataId */
countNotEmptyLinkedObjectMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for linkedObjectMetadataId */
percentageEmptyLinkedObjectMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for linkedObjectMetadataId */
percentageNotEmptyLinkedObjectMetadataId?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Event workspace member */
workspaceMemberId?: (OrderByDirection | null),
/** Event person */
personId?: (OrderByDirection | null),
/** Event company */
companyId?: (OrderByDirection | null),
/** Event opportunity */
opportunityId?: (OrderByDirection | null),
/** Event note */
noteId?: (OrderByDirection | null),
/** Event task */
taskId?: (OrderByDirection | null),
/** Event workflow */
workflowId?: (OrderByDirection | null),
/** Event workflow version */
workflowVersionId?: (OrderByDirection | null),
/** Event workflow run */
workflowRunId?: (OrderByDirection | null),
/** Event dashboard */
dashboardId?: (OrderByDirection | null),
/** TimelineActivities Rocket */
rocketId?: (OrderByDirection | null),
/** TimelineActivities Pet */
petId?: (OrderByDirection | null),
/** TimelineActivities Survey result */
surveyResultId?: (OrderByDirection | null)}


/** Aggregated / filtered event to be displayed on the timeline */
export interface TimelineActivityGroupByInput {
/** Creation date */
happensAt?: (GroupByDateGranularityInput | null),
/** Event name */
name?: (Scalars['Boolean'] | null),
/** Json value for event details */
properties?: (Scalars['Boolean'] | null),
/** Cached record name */
linkedRecordCachedName?: (Scalars['Boolean'] | null),
/** Linked Record id */
linkedRecordId?: (Scalars['Boolean'] | null),
/** Linked Object Metadata Id */
linkedObjectMetadataId?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Event workspace member */
workspaceMemberId?: (Scalars['Boolean'] | null),
/** Event person */
personId?: (Scalars['Boolean'] | null),
/** Event company */
companyId?: (Scalars['Boolean'] | null),
/** Event opportunity */
opportunityId?: (Scalars['Boolean'] | null),
/** Event note */
noteId?: (Scalars['Boolean'] | null),
/** Event task */
taskId?: (Scalars['Boolean'] | null),
/** Event workflow */
workflowId?: (Scalars['Boolean'] | null),
/** Event workflow version */
workflowVersionId?: (Scalars['Boolean'] | null),
/** Event workflow run */
workflowRunId?: (Scalars['Boolean'] | null),
/** Event dashboard */
dashboardId?: (Scalars['Boolean'] | null),
/** TimelineActivities Rocket */
rocketId?: (Scalars['Boolean'] | null),
/** TimelineActivities Pet */
petId?: (Scalars['Boolean'] | null),
/** TimelineActivities Survey result */
surveyResultId?: (Scalars['Boolean'] | null)}


/** (System) View Fields */
export interface ViewFieldGenqlSelection{
    /** View Field target field */
    fieldMetadataId?: boolean | number
    /** View Field visibility */
    isVisible?: boolean | number
    /** View Field size */
    size?: boolean | number
    /** View Field position */
    position?: boolean | number
    /** Optional aggregate operation */
    aggregateOperation?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** View Field related view */
    viewId?: boolean | number
    /** View Field related view */
    view?: ViewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Fields */
export interface ViewFieldEdgeGenqlSelection{
    node?: ViewFieldGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Fields */
export interface ViewFieldConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: boolean | number
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: boolean | number
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: boolean | number
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: boolean | number
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: boolean | number
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: boolean | number
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: boolean | number
    /** Number of unique values for size */
    countUniqueValuesSize?: boolean | number
    /** Number of empty values for size */
    countEmptySize?: boolean | number
    /** Number of non-empty values for size */
    countNotEmptySize?: boolean | number
    /** Percentage of empty values for size */
    percentageEmptySize?: boolean | number
    /** Percentage of non-empty values for size */
    percentageNotEmptySize?: boolean | number
    /** Minimum amount contained in the field size */
    minSize?: boolean | number
    /** Maximum amount contained in the field size */
    maxSize?: boolean | number
    /** Average amount contained in the field size */
    avgSize?: boolean | number
    /** Sum of amounts contained in the field size */
    sumSize?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for aggregateOperation */
    countUniqueValuesAggregateOperation?: boolean | number
    /** Number of empty values for aggregateOperation */
    countEmptyAggregateOperation?: boolean | number
    /** Number of non-empty values for aggregateOperation */
    countNotEmptyAggregateOperation?: boolean | number
    /** Percentage of empty values for aggregateOperation */
    percentageEmptyAggregateOperation?: boolean | number
    /** Percentage of non-empty values for aggregateOperation */
    percentageNotEmptyAggregateOperation?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewFieldEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Fields */
export interface ViewFieldGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: boolean | number
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: boolean | number
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: boolean | number
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: boolean | number
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: boolean | number
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: boolean | number
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: boolean | number
    /** Number of unique values for size */
    countUniqueValuesSize?: boolean | number
    /** Number of empty values for size */
    countEmptySize?: boolean | number
    /** Number of non-empty values for size */
    countNotEmptySize?: boolean | number
    /** Percentage of empty values for size */
    percentageEmptySize?: boolean | number
    /** Percentage of non-empty values for size */
    percentageNotEmptySize?: boolean | number
    /** Minimum amount contained in the field size */
    minSize?: boolean | number
    /** Maximum amount contained in the field size */
    maxSize?: boolean | number
    /** Average amount contained in the field size */
    avgSize?: boolean | number
    /** Sum of amounts contained in the field size */
    sumSize?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for aggregateOperation */
    countUniqueValuesAggregateOperation?: boolean | number
    /** Number of empty values for aggregateOperation */
    countEmptyAggregateOperation?: boolean | number
    /** Number of non-empty values for aggregateOperation */
    countNotEmptyAggregateOperation?: boolean | number
    /** Percentage of empty values for aggregateOperation */
    percentageEmptyAggregateOperation?: boolean | number
    /** Percentage of non-empty values for aggregateOperation */
    percentageNotEmptyAggregateOperation?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewFieldEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ViewFieldRelationInput {
/** Connect to a viewField record */
connect?: (ViewFieldConnectInput | null),
/** Disconnect from a viewField record */
disconnect?: (Scalars['Boolean'] | null)}

export interface ViewFieldConnectInput {
/** Find a viewField record based on its unique fields: id or fieldMetadataId and view */
where?: (ViewFieldWhereUniqueInput | null)}

export interface ViewFieldWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null),
/** Connect by Field Metadata Id */
fieldMetadataId?: (Scalars['UUID'] | null),
/** Connect by View */
view?: (Scalars['ID'] | null)}


/** (System) View Fields */
export interface ViewFieldCreateInput {
/** View Field target field */
fieldMetadataId: Scalars['UUID'],
/** View Field visibility */
isVisible?: (Scalars['Boolean'] | null),
/** View Field size */
size?: (Scalars['Float'] | null),
/** View Field position */
position?: (Scalars['Float'] | null),
/** Optional aggregate operation */
aggregateOperation?: (ViewFieldAggregateOperationEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Field related view */
viewId?: (Scalars['ID'] | null),
/** View Field related view */
view?: (ViewRelationInput | null)}


/** (System) View Fields */
export interface ViewFieldUpdateInput {
/** View Field target field */
fieldMetadataId?: (Scalars['UUID'] | null),
/** View Field visibility */
isVisible?: (Scalars['Boolean'] | null),
/** View Field size */
size?: (Scalars['Float'] | null),
/** View Field position */
position?: (Scalars['Float'] | null),
/** Optional aggregate operation */
aggregateOperation?: (ViewFieldAggregateOperationEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Field related view */
viewId?: (Scalars['ID'] | null),
/** View Field related view */
view?: (ViewRelationInput | null)}


/** (System) View Fields */
export interface ViewFieldFilterInput {
/** View Field target field */
fieldMetadataId?: (UUIDFilter | null),
/** View Field visibility */
isVisible?: (BooleanFilter | null),
/** View Field size */
size?: (FloatFilter | null),
/** View Field position */
position?: (FloatFilter | null),
/** Optional aggregate operation */
aggregateOperation?: (ViewFieldAggregateOperationEnumFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** View Field related view */
viewId?: (UUIDFilter | null),and?: ((ViewFieldFilterInput | null)[] | null),or?: ((ViewFieldFilterInput | null)[] | null),not?: (ViewFieldFilterInput | null)}

export interface ViewFieldAggregateOperationEnumFilter {eq?: (ViewFieldAggregateOperationEnum | null),neq?: (ViewFieldAggregateOperationEnum | null),in?: ((ViewFieldAggregateOperationEnum | null)[] | null),containsAny?: ((ViewFieldAggregateOperationEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** (System) View Fields */
export interface ViewFieldOrderByInput {
/** View Field target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Field visibility */
isVisible?: (OrderByDirection | null),
/** View Field size */
size?: (OrderByDirection | null),
/** View Field position */
position?: (OrderByDirection | null),
/** Optional aggregate operation */
aggregateOperation?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** View Field related view */
viewId?: (OrderByDirection | null)}


/** (System) View Fields */
export interface ViewFieldOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (ViewFieldOrderByWithGroupByAggregateInput | null),
/** View Field target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Field visibility */
isVisible?: (OrderByDirection | null),
/** View Field size */
size?: (OrderByDirection | null),
/** View Field position */
position?: (OrderByDirection | null),
/** Optional aggregate operation */
aggregateOperation?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** View Field related view */
viewId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface ViewFieldOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for fieldMetadataId */
countUniqueValuesFieldMetadataId?: (OrderByDirection | null),
/** Number of empty values for fieldMetadataId */
countEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for fieldMetadataId */
countNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for fieldMetadataId */
percentageEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for fieldMetadataId */
percentageNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of unique values for isVisible */
countUniqueValuesIsVisible?: (OrderByDirection | null),
/** Number of empty values for isVisible */
countEmptyIsVisible?: (OrderByDirection | null),
/** Number of non-empty values for isVisible */
countNotEmptyIsVisible?: (OrderByDirection | null),
/** Percentage of empty values for isVisible */
percentageEmptyIsVisible?: (OrderByDirection | null),
/** Percentage of non-empty values for isVisible */
percentageNotEmptyIsVisible?: (OrderByDirection | null),
/** Count of true values in the field isVisible */
countTrueIsVisible?: (OrderByDirection | null),
/** Count of false values in the field isVisible */
countFalseIsVisible?: (OrderByDirection | null),
/** Number of unique values for size */
countUniqueValuesSize?: (OrderByDirection | null),
/** Number of empty values for size */
countEmptySize?: (OrderByDirection | null),
/** Number of non-empty values for size */
countNotEmptySize?: (OrderByDirection | null),
/** Percentage of empty values for size */
percentageEmptySize?: (OrderByDirection | null),
/** Percentage of non-empty values for size */
percentageNotEmptySize?: (OrderByDirection | null),
/** Minimum amount contained in the field size */
minSize?: (OrderByDirection | null),
/** Maximum amount contained in the field size */
maxSize?: (OrderByDirection | null),
/** Average amount contained in the field size */
avgSize?: (OrderByDirection | null),
/** Sum of amounts contained in the field size */
sumSize?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Minimum amount contained in the field position */
minPosition?: (OrderByDirection | null),
/** Maximum amount contained in the field position */
maxPosition?: (OrderByDirection | null),
/** Average amount contained in the field position */
avgPosition?: (OrderByDirection | null),
/** Sum of amounts contained in the field position */
sumPosition?: (OrderByDirection | null),
/** Number of unique values for aggregateOperation */
countUniqueValuesAggregateOperation?: (OrderByDirection | null),
/** Number of empty values for aggregateOperation */
countEmptyAggregateOperation?: (OrderByDirection | null),
/** Number of non-empty values for aggregateOperation */
countNotEmptyAggregateOperation?: (OrderByDirection | null),
/** Percentage of empty values for aggregateOperation */
percentageEmptyAggregateOperation?: (OrderByDirection | null),
/** Percentage of non-empty values for aggregateOperation */
percentageNotEmptyAggregateOperation?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** View Field related view */
viewId?: (OrderByDirection | null)}


/** (System) View Fields */
export interface ViewFieldGroupByInput {
/** View Field target field */
fieldMetadataId?: (Scalars['Boolean'] | null),
/** View Field visibility */
isVisible?: (Scalars['Boolean'] | null),
/** View Field size */
size?: (Scalars['Boolean'] | null),
/** View Field position */
position?: (Scalars['Boolean'] | null),
/** Optional aggregate operation */
aggregateOperation?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** View Field related view */
viewId?: (Scalars['Boolean'] | null)}


/** (System) View Filter Groups */
export interface ViewFilterGroupGenqlSelection{
    /** Position in the parent view filter group */
    positionInViewFilterGroup?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Parent View Filter Group */
    parentViewFilterGroupId?: boolean | number
    /** Logical operator for the filter group */
    logicalOperator?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** View */
    viewId?: boolean | number
    /** View */
    view?: ViewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Filter Groups */
export interface ViewFilterGroupEdgeGenqlSelection{
    node?: ViewFilterGroupGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Filter Groups */
export interface ViewFilterGroupConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: boolean | number
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: boolean | number
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: boolean | number
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: boolean | number
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: boolean | number
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for parentViewFilterGroupId */
    countUniqueValuesParentViewFilterGroupId?: boolean | number
    /** Number of empty values for parentViewFilterGroupId */
    countEmptyParentViewFilterGroupId?: boolean | number
    /** Number of non-empty values for parentViewFilterGroupId */
    countNotEmptyParentViewFilterGroupId?: boolean | number
    /** Percentage of empty values for parentViewFilterGroupId */
    percentageEmptyParentViewFilterGroupId?: boolean | number
    /** Percentage of non-empty values for parentViewFilterGroupId */
    percentageNotEmptyParentViewFilterGroupId?: boolean | number
    /** Number of unique values for logicalOperator */
    countUniqueValuesLogicalOperator?: boolean | number
    /** Number of empty values for logicalOperator */
    countEmptyLogicalOperator?: boolean | number
    /** Number of non-empty values for logicalOperator */
    countNotEmptyLogicalOperator?: boolean | number
    /** Percentage of empty values for logicalOperator */
    percentageEmptyLogicalOperator?: boolean | number
    /** Percentage of non-empty values for logicalOperator */
    percentageNotEmptyLogicalOperator?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewFilterGroupEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Filter Groups */
export interface ViewFilterGroupGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: boolean | number
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: boolean | number
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: boolean | number
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: boolean | number
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: boolean | number
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for parentViewFilterGroupId */
    countUniqueValuesParentViewFilterGroupId?: boolean | number
    /** Number of empty values for parentViewFilterGroupId */
    countEmptyParentViewFilterGroupId?: boolean | number
    /** Number of non-empty values for parentViewFilterGroupId */
    countNotEmptyParentViewFilterGroupId?: boolean | number
    /** Percentage of empty values for parentViewFilterGroupId */
    percentageEmptyParentViewFilterGroupId?: boolean | number
    /** Percentage of non-empty values for parentViewFilterGroupId */
    percentageNotEmptyParentViewFilterGroupId?: boolean | number
    /** Number of unique values for logicalOperator */
    countUniqueValuesLogicalOperator?: boolean | number
    /** Number of empty values for logicalOperator */
    countEmptyLogicalOperator?: boolean | number
    /** Number of non-empty values for logicalOperator */
    countNotEmptyLogicalOperator?: boolean | number
    /** Percentage of empty values for logicalOperator */
    percentageEmptyLogicalOperator?: boolean | number
    /** Percentage of non-empty values for logicalOperator */
    percentageNotEmptyLogicalOperator?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewFilterGroupEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ViewFilterGroupRelationInput {
/** Connect to a viewFilterGroup record */
connect?: (ViewFilterGroupConnectInput | null),
/** Disconnect from a viewFilterGroup record */
disconnect?: (Scalars['Boolean'] | null)}

export interface ViewFilterGroupConnectInput {
/** Find a viewFilterGroup record based on its unique fields: id */
where?: (ViewFilterGroupWhereUniqueInput | null)}

export interface ViewFilterGroupWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** (System) View Filter Groups */
export interface ViewFilterGroupCreateInput {
/** Position in the parent view filter group */
positionInViewFilterGroup?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Parent View Filter Group */
parentViewFilterGroupId?: (Scalars['UUID'] | null),
/** Logical operator for the filter group */
logicalOperator?: (ViewFilterGroupLogicalOperatorEnum | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View */
viewId?: (Scalars['ID'] | null),
/** View */
view?: (ViewRelationInput | null)}


/** (System) View Filter Groups */
export interface ViewFilterGroupUpdateInput {
/** Position in the parent view filter group */
positionInViewFilterGroup?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Parent View Filter Group */
parentViewFilterGroupId?: (Scalars['UUID'] | null),
/** Logical operator for the filter group */
logicalOperator?: (ViewFilterGroupLogicalOperatorEnum | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View */
viewId?: (Scalars['ID'] | null),
/** View */
view?: (ViewRelationInput | null)}


/** (System) View Filter Groups */
export interface ViewFilterGroupFilterInput {
/** Position in the parent view filter group */
positionInViewFilterGroup?: (FloatFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Parent View Filter Group */
parentViewFilterGroupId?: (UUIDFilter | null),
/** Logical operator for the filter group */
logicalOperator?: (ViewFilterGroupLogicalOperatorEnumFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** View */
viewId?: (UUIDFilter | null),and?: ((ViewFilterGroupFilterInput | null)[] | null),or?: ((ViewFilterGroupFilterInput | null)[] | null),not?: (ViewFilterGroupFilterInput | null)}

export interface ViewFilterGroupLogicalOperatorEnumFilter {eq?: (ViewFilterGroupLogicalOperatorEnum | null),neq?: (ViewFilterGroupLogicalOperatorEnum | null),in?: ((ViewFilterGroupLogicalOperatorEnum | null)[] | null),containsAny?: ((ViewFilterGroupLogicalOperatorEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** (System) View Filter Groups */
export interface ViewFilterGroupOrderByInput {
/** Position in the parent view filter group */
positionInViewFilterGroup?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Parent View Filter Group */
parentViewFilterGroupId?: (OrderByDirection | null),
/** Logical operator for the filter group */
logicalOperator?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** View */
viewId?: (OrderByDirection | null)}


/** (System) View Filter Groups */
export interface ViewFilterGroupOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (ViewFilterGroupOrderByWithGroupByAggregateInput | null),
/** Position in the parent view filter group */
positionInViewFilterGroup?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Parent View Filter Group */
parentViewFilterGroupId?: (OrderByDirection | null),
/** Logical operator for the filter group */
logicalOperator?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** View */
viewId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface ViewFilterGroupOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for positionInViewFilterGroup */
countUniqueValuesPositionInViewFilterGroup?: (OrderByDirection | null),
/** Number of empty values for positionInViewFilterGroup */
countEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Number of non-empty values for positionInViewFilterGroup */
countNotEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Percentage of empty values for positionInViewFilterGroup */
percentageEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Percentage of non-empty values for positionInViewFilterGroup */
percentageNotEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Minimum amount contained in the field positionInViewFilterGroup */
minPositionInViewFilterGroup?: (OrderByDirection | null),
/** Maximum amount contained in the field positionInViewFilterGroup */
maxPositionInViewFilterGroup?: (OrderByDirection | null),
/** Average amount contained in the field positionInViewFilterGroup */
avgPositionInViewFilterGroup?: (OrderByDirection | null),
/** Sum of amounts contained in the field positionInViewFilterGroup */
sumPositionInViewFilterGroup?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for parentViewFilterGroupId */
countUniqueValuesParentViewFilterGroupId?: (OrderByDirection | null),
/** Number of empty values for parentViewFilterGroupId */
countEmptyParentViewFilterGroupId?: (OrderByDirection | null),
/** Number of non-empty values for parentViewFilterGroupId */
countNotEmptyParentViewFilterGroupId?: (OrderByDirection | null),
/** Percentage of empty values for parentViewFilterGroupId */
percentageEmptyParentViewFilterGroupId?: (OrderByDirection | null),
/** Percentage of non-empty values for parentViewFilterGroupId */
percentageNotEmptyParentViewFilterGroupId?: (OrderByDirection | null),
/** Number of unique values for logicalOperator */
countUniqueValuesLogicalOperator?: (OrderByDirection | null),
/** Number of empty values for logicalOperator */
countEmptyLogicalOperator?: (OrderByDirection | null),
/** Number of non-empty values for logicalOperator */
countNotEmptyLogicalOperator?: (OrderByDirection | null),
/** Percentage of empty values for logicalOperator */
percentageEmptyLogicalOperator?: (OrderByDirection | null),
/** Percentage of non-empty values for logicalOperator */
percentageNotEmptyLogicalOperator?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** View */
viewId?: (OrderByDirection | null)}


/** (System) View Filter Groups */
export interface ViewFilterGroupGroupByInput {
/** Position in the parent view filter group */
positionInViewFilterGroup?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Parent View Filter Group */
parentViewFilterGroupId?: (Scalars['Boolean'] | null),
/** Logical operator for the filter group */
logicalOperator?: (Scalars['Boolean'] | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** View */
viewId?: (Scalars['Boolean'] | null)}


/** (System) View Groups */
export interface ViewGroupGenqlSelection{
    /** View Group target field */
    fieldMetadataId?: boolean | number
    /** View Group visibility */
    isVisible?: boolean | number
    /** Group by this field value */
    fieldValue?: boolean | number
    /** View Field position */
    position?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** View Group related view */
    viewId?: boolean | number
    /** View Group related view */
    view?: ViewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Groups */
export interface ViewGroupEdgeGenqlSelection{
    node?: ViewGroupGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Groups */
export interface ViewGroupConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: boolean | number
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: boolean | number
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: boolean | number
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: boolean | number
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: boolean | number
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: boolean | number
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: boolean | number
    /** Number of unique values for fieldValue */
    countUniqueValuesFieldValue?: boolean | number
    /** Number of empty values for fieldValue */
    countEmptyFieldValue?: boolean | number
    /** Number of non-empty values for fieldValue */
    countNotEmptyFieldValue?: boolean | number
    /** Percentage of empty values for fieldValue */
    percentageEmptyFieldValue?: boolean | number
    /** Percentage of non-empty values for fieldValue */
    percentageNotEmptyFieldValue?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewGroupEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Groups */
export interface ViewGroupGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for isVisible */
    countUniqueValuesIsVisible?: boolean | number
    /** Number of empty values for isVisible */
    countEmptyIsVisible?: boolean | number
    /** Number of non-empty values for isVisible */
    countNotEmptyIsVisible?: boolean | number
    /** Percentage of empty values for isVisible */
    percentageEmptyIsVisible?: boolean | number
    /** Percentage of non-empty values for isVisible */
    percentageNotEmptyIsVisible?: boolean | number
    /** Count of true values in the field isVisible */
    countTrueIsVisible?: boolean | number
    /** Count of false values in the field isVisible */
    countFalseIsVisible?: boolean | number
    /** Number of unique values for fieldValue */
    countUniqueValuesFieldValue?: boolean | number
    /** Number of empty values for fieldValue */
    countEmptyFieldValue?: boolean | number
    /** Number of non-empty values for fieldValue */
    countNotEmptyFieldValue?: boolean | number
    /** Percentage of empty values for fieldValue */
    percentageEmptyFieldValue?: boolean | number
    /** Percentage of non-empty values for fieldValue */
    percentageNotEmptyFieldValue?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Minimum amount contained in the field position */
    minPosition?: boolean | number
    /** Maximum amount contained in the field position */
    maxPosition?: boolean | number
    /** Average amount contained in the field position */
    avgPosition?: boolean | number
    /** Sum of amounts contained in the field position */
    sumPosition?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewGroupEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ViewGroupRelationInput {
/** Connect to a viewGroup record */
connect?: (ViewGroupConnectInput | null),
/** Disconnect from a viewGroup record */
disconnect?: (Scalars['Boolean'] | null)}

export interface ViewGroupConnectInput {
/** Find a viewGroup record based on its unique fields: id */
where?: (ViewGroupWhereUniqueInput | null)}

export interface ViewGroupWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** (System) View Groups */
export interface ViewGroupCreateInput {
/** View Group target field */
fieldMetadataId: Scalars['UUID'],
/** View Group visibility */
isVisible?: (Scalars['Boolean'] | null),
/** Group by this field value */
fieldValue?: (Scalars['String'] | null),
/** View Field position */
position?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Group related view */
viewId?: (Scalars['ID'] | null),
/** View Group related view */
view?: (ViewRelationInput | null)}


/** (System) View Groups */
export interface ViewGroupUpdateInput {
/** View Group target field */
fieldMetadataId?: (Scalars['UUID'] | null),
/** View Group visibility */
isVisible?: (Scalars['Boolean'] | null),
/** Group by this field value */
fieldValue?: (Scalars['String'] | null),
/** View Field position */
position?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Group related view */
viewId?: (Scalars['ID'] | null),
/** View Group related view */
view?: (ViewRelationInput | null)}


/** (System) View Groups */
export interface ViewGroupFilterInput {
/** View Group target field */
fieldMetadataId?: (UUIDFilter | null),
/** View Group visibility */
isVisible?: (BooleanFilter | null),
/** Group by this field value */
fieldValue?: (StringFilter | null),
/** View Field position */
position?: (FloatFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** View Group related view */
viewId?: (UUIDFilter | null),and?: ((ViewGroupFilterInput | null)[] | null),or?: ((ViewGroupFilterInput | null)[] | null),not?: (ViewGroupFilterInput | null)}


/** (System) View Groups */
export interface ViewGroupOrderByInput {
/** View Group target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Group visibility */
isVisible?: (OrderByDirection | null),
/** Group by this field value */
fieldValue?: (OrderByDirection | null),
/** View Field position */
position?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** View Group related view */
viewId?: (OrderByDirection | null)}


/** (System) View Groups */
export interface ViewGroupOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (ViewGroupOrderByWithGroupByAggregateInput | null),
/** View Group target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Group visibility */
isVisible?: (OrderByDirection | null),
/** Group by this field value */
fieldValue?: (OrderByDirection | null),
/** View Field position */
position?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** View Group related view */
viewId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface ViewGroupOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for fieldMetadataId */
countUniqueValuesFieldMetadataId?: (OrderByDirection | null),
/** Number of empty values for fieldMetadataId */
countEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for fieldMetadataId */
countNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for fieldMetadataId */
percentageEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for fieldMetadataId */
percentageNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of unique values for isVisible */
countUniqueValuesIsVisible?: (OrderByDirection | null),
/** Number of empty values for isVisible */
countEmptyIsVisible?: (OrderByDirection | null),
/** Number of non-empty values for isVisible */
countNotEmptyIsVisible?: (OrderByDirection | null),
/** Percentage of empty values for isVisible */
percentageEmptyIsVisible?: (OrderByDirection | null),
/** Percentage of non-empty values for isVisible */
percentageNotEmptyIsVisible?: (OrderByDirection | null),
/** Count of true values in the field isVisible */
countTrueIsVisible?: (OrderByDirection | null),
/** Count of false values in the field isVisible */
countFalseIsVisible?: (OrderByDirection | null),
/** Number of unique values for fieldValue */
countUniqueValuesFieldValue?: (OrderByDirection | null),
/** Number of empty values for fieldValue */
countEmptyFieldValue?: (OrderByDirection | null),
/** Number of non-empty values for fieldValue */
countNotEmptyFieldValue?: (OrderByDirection | null),
/** Percentage of empty values for fieldValue */
percentageEmptyFieldValue?: (OrderByDirection | null),
/** Percentage of non-empty values for fieldValue */
percentageNotEmptyFieldValue?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Minimum amount contained in the field position */
minPosition?: (OrderByDirection | null),
/** Maximum amount contained in the field position */
maxPosition?: (OrderByDirection | null),
/** Average amount contained in the field position */
avgPosition?: (OrderByDirection | null),
/** Sum of amounts contained in the field position */
sumPosition?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** View Group related view */
viewId?: (OrderByDirection | null)}


/** (System) View Groups */
export interface ViewGroupGroupByInput {
/** View Group target field */
fieldMetadataId?: (Scalars['Boolean'] | null),
/** View Group visibility */
isVisible?: (Scalars['Boolean'] | null),
/** Group by this field value */
fieldValue?: (Scalars['Boolean'] | null),
/** View Field position */
position?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** View Group related view */
viewId?: (Scalars['Boolean'] | null)}


/** (System) View Filters */
export interface ViewFilterGenqlSelection{
    /** View Filter target field */
    fieldMetadataId?: boolean | number
    /** View Filter operand */
    operand?: boolean | number
    /** View Filter value */
    value?: boolean | number
    /** View Filter Display Value */
    displayValue?: boolean | number
    /** View Filter Group */
    viewFilterGroupId?: boolean | number
    /** Position in the view filter group */
    positionInViewFilterGroup?: boolean | number
    /** Sub field name */
    subFieldName?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** View Filter related view */
    viewId?: boolean | number
    /** View Filter related view */
    view?: ViewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Filters */
export interface ViewFilterEdgeGenqlSelection{
    node?: ViewFilterGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Filters */
export interface ViewFilterConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for operand */
    countUniqueValuesOperand?: boolean | number
    /** Number of empty values for operand */
    countEmptyOperand?: boolean | number
    /** Number of non-empty values for operand */
    countNotEmptyOperand?: boolean | number
    /** Percentage of empty values for operand */
    percentageEmptyOperand?: boolean | number
    /** Percentage of non-empty values for operand */
    percentageNotEmptyOperand?: boolean | number
    /** Number of unique values for value */
    countUniqueValuesValue?: boolean | number
    /** Number of empty values for value */
    countEmptyValue?: boolean | number
    /** Number of non-empty values for value */
    countNotEmptyValue?: boolean | number
    /** Percentage of empty values for value */
    percentageEmptyValue?: boolean | number
    /** Percentage of non-empty values for value */
    percentageNotEmptyValue?: boolean | number
    /** Number of unique values for displayValue */
    countUniqueValuesDisplayValue?: boolean | number
    /** Number of empty values for displayValue */
    countEmptyDisplayValue?: boolean | number
    /** Number of non-empty values for displayValue */
    countNotEmptyDisplayValue?: boolean | number
    /** Percentage of empty values for displayValue */
    percentageEmptyDisplayValue?: boolean | number
    /** Percentage of non-empty values for displayValue */
    percentageNotEmptyDisplayValue?: boolean | number
    /** Number of unique values for viewFilterGroupId */
    countUniqueValuesViewFilterGroupId?: boolean | number
    /** Number of empty values for viewFilterGroupId */
    countEmptyViewFilterGroupId?: boolean | number
    /** Number of non-empty values for viewFilterGroupId */
    countNotEmptyViewFilterGroupId?: boolean | number
    /** Percentage of empty values for viewFilterGroupId */
    percentageEmptyViewFilterGroupId?: boolean | number
    /** Percentage of non-empty values for viewFilterGroupId */
    percentageNotEmptyViewFilterGroupId?: boolean | number
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: boolean | number
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: boolean | number
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: boolean | number
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: boolean | number
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: boolean | number
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: boolean | number
    /** Number of unique values for subFieldName */
    countUniqueValuesSubFieldName?: boolean | number
    /** Number of empty values for subFieldName */
    countEmptySubFieldName?: boolean | number
    /** Number of non-empty values for subFieldName */
    countNotEmptySubFieldName?: boolean | number
    /** Percentage of empty values for subFieldName */
    percentageEmptySubFieldName?: boolean | number
    /** Percentage of non-empty values for subFieldName */
    percentageNotEmptySubFieldName?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewFilterEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Filters */
export interface ViewFilterGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for operand */
    countUniqueValuesOperand?: boolean | number
    /** Number of empty values for operand */
    countEmptyOperand?: boolean | number
    /** Number of non-empty values for operand */
    countNotEmptyOperand?: boolean | number
    /** Percentage of empty values for operand */
    percentageEmptyOperand?: boolean | number
    /** Percentage of non-empty values for operand */
    percentageNotEmptyOperand?: boolean | number
    /** Number of unique values for value */
    countUniqueValuesValue?: boolean | number
    /** Number of empty values for value */
    countEmptyValue?: boolean | number
    /** Number of non-empty values for value */
    countNotEmptyValue?: boolean | number
    /** Percentage of empty values for value */
    percentageEmptyValue?: boolean | number
    /** Percentage of non-empty values for value */
    percentageNotEmptyValue?: boolean | number
    /** Number of unique values for displayValue */
    countUniqueValuesDisplayValue?: boolean | number
    /** Number of empty values for displayValue */
    countEmptyDisplayValue?: boolean | number
    /** Number of non-empty values for displayValue */
    countNotEmptyDisplayValue?: boolean | number
    /** Percentage of empty values for displayValue */
    percentageEmptyDisplayValue?: boolean | number
    /** Percentage of non-empty values for displayValue */
    percentageNotEmptyDisplayValue?: boolean | number
    /** Number of unique values for viewFilterGroupId */
    countUniqueValuesViewFilterGroupId?: boolean | number
    /** Number of empty values for viewFilterGroupId */
    countEmptyViewFilterGroupId?: boolean | number
    /** Number of non-empty values for viewFilterGroupId */
    countNotEmptyViewFilterGroupId?: boolean | number
    /** Percentage of empty values for viewFilterGroupId */
    percentageEmptyViewFilterGroupId?: boolean | number
    /** Percentage of non-empty values for viewFilterGroupId */
    percentageNotEmptyViewFilterGroupId?: boolean | number
    /** Number of unique values for positionInViewFilterGroup */
    countUniqueValuesPositionInViewFilterGroup?: boolean | number
    /** Number of empty values for positionInViewFilterGroup */
    countEmptyPositionInViewFilterGroup?: boolean | number
    /** Number of non-empty values for positionInViewFilterGroup */
    countNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of empty values for positionInViewFilterGroup */
    percentageEmptyPositionInViewFilterGroup?: boolean | number
    /** Percentage of non-empty values for positionInViewFilterGroup */
    percentageNotEmptyPositionInViewFilterGroup?: boolean | number
    /** Minimum amount contained in the field positionInViewFilterGroup */
    minPositionInViewFilterGroup?: boolean | number
    /** Maximum amount contained in the field positionInViewFilterGroup */
    maxPositionInViewFilterGroup?: boolean | number
    /** Average amount contained in the field positionInViewFilterGroup */
    avgPositionInViewFilterGroup?: boolean | number
    /** Sum of amounts contained in the field positionInViewFilterGroup */
    sumPositionInViewFilterGroup?: boolean | number
    /** Number of unique values for subFieldName */
    countUniqueValuesSubFieldName?: boolean | number
    /** Number of empty values for subFieldName */
    countEmptySubFieldName?: boolean | number
    /** Number of non-empty values for subFieldName */
    countNotEmptySubFieldName?: boolean | number
    /** Percentage of empty values for subFieldName */
    percentageEmptySubFieldName?: boolean | number
    /** Percentage of non-empty values for subFieldName */
    percentageNotEmptySubFieldName?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewFilterEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ViewFilterRelationInput {
/** Connect to a viewFilter record */
connect?: (ViewFilterConnectInput | null),
/** Disconnect from a viewFilter record */
disconnect?: (Scalars['Boolean'] | null)}

export interface ViewFilterConnectInput {
/** Find a viewFilter record based on its unique fields: id */
where?: (ViewFilterWhereUniqueInput | null)}

export interface ViewFilterWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** (System) View Filters */
export interface ViewFilterCreateInput {
/** View Filter target field */
fieldMetadataId: Scalars['UUID'],
/** View Filter operand */
operand?: (Scalars['String'] | null),
/** View Filter value */
value?: (Scalars['String'] | null),
/** View Filter Display Value */
displayValue?: (Scalars['String'] | null),
/** View Filter Group */
viewFilterGroupId?: (Scalars['UUID'] | null),
/** Position in the view filter group */
positionInViewFilterGroup?: (Scalars['Float'] | null),
/** Sub field name */
subFieldName?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Filter related view */
viewId?: (Scalars['ID'] | null),
/** View Filter related view */
view?: (ViewRelationInput | null)}


/** (System) View Filters */
export interface ViewFilterUpdateInput {
/** View Filter target field */
fieldMetadataId?: (Scalars['UUID'] | null),
/** View Filter operand */
operand?: (Scalars['String'] | null),
/** View Filter value */
value?: (Scalars['String'] | null),
/** View Filter Display Value */
displayValue?: (Scalars['String'] | null),
/** View Filter Group */
viewFilterGroupId?: (Scalars['UUID'] | null),
/** Position in the view filter group */
positionInViewFilterGroup?: (Scalars['Float'] | null),
/** Sub field name */
subFieldName?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Filter related view */
viewId?: (Scalars['ID'] | null),
/** View Filter related view */
view?: (ViewRelationInput | null)}


/** (System) View Filters */
export interface ViewFilterFilterInput {
/** View Filter target field */
fieldMetadataId?: (UUIDFilter | null),
/** View Filter operand */
operand?: (StringFilter | null),
/** View Filter value */
value?: (StringFilter | null),
/** View Filter Display Value */
displayValue?: (StringFilter | null),
/** View Filter Group */
viewFilterGroupId?: (UUIDFilter | null),
/** Position in the view filter group */
positionInViewFilterGroup?: (FloatFilter | null),
/** Sub field name */
subFieldName?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** View Filter related view */
viewId?: (UUIDFilter | null),and?: ((ViewFilterFilterInput | null)[] | null),or?: ((ViewFilterFilterInput | null)[] | null),not?: (ViewFilterFilterInput | null)}


/** (System) View Filters */
export interface ViewFilterOrderByInput {
/** View Filter target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Filter operand */
operand?: (OrderByDirection | null),
/** View Filter value */
value?: (OrderByDirection | null),
/** View Filter Display Value */
displayValue?: (OrderByDirection | null),
/** View Filter Group */
viewFilterGroupId?: (OrderByDirection | null),
/** Position in the view filter group */
positionInViewFilterGroup?: (OrderByDirection | null),
/** Sub field name */
subFieldName?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** View Filter related view */
viewId?: (OrderByDirection | null)}


/** (System) View Filters */
export interface ViewFilterOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (ViewFilterOrderByWithGroupByAggregateInput | null),
/** View Filter target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Filter operand */
operand?: (OrderByDirection | null),
/** View Filter value */
value?: (OrderByDirection | null),
/** View Filter Display Value */
displayValue?: (OrderByDirection | null),
/** View Filter Group */
viewFilterGroupId?: (OrderByDirection | null),
/** Position in the view filter group */
positionInViewFilterGroup?: (OrderByDirection | null),
/** Sub field name */
subFieldName?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** View Filter related view */
viewId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface ViewFilterOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for fieldMetadataId */
countUniqueValuesFieldMetadataId?: (OrderByDirection | null),
/** Number of empty values for fieldMetadataId */
countEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for fieldMetadataId */
countNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for fieldMetadataId */
percentageEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for fieldMetadataId */
percentageNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of unique values for operand */
countUniqueValuesOperand?: (OrderByDirection | null),
/** Number of empty values for operand */
countEmptyOperand?: (OrderByDirection | null),
/** Number of non-empty values for operand */
countNotEmptyOperand?: (OrderByDirection | null),
/** Percentage of empty values for operand */
percentageEmptyOperand?: (OrderByDirection | null),
/** Percentage of non-empty values for operand */
percentageNotEmptyOperand?: (OrderByDirection | null),
/** Number of unique values for value */
countUniqueValuesValue?: (OrderByDirection | null),
/** Number of empty values for value */
countEmptyValue?: (OrderByDirection | null),
/** Number of non-empty values for value */
countNotEmptyValue?: (OrderByDirection | null),
/** Percentage of empty values for value */
percentageEmptyValue?: (OrderByDirection | null),
/** Percentage of non-empty values for value */
percentageNotEmptyValue?: (OrderByDirection | null),
/** Number of unique values for displayValue */
countUniqueValuesDisplayValue?: (OrderByDirection | null),
/** Number of empty values for displayValue */
countEmptyDisplayValue?: (OrderByDirection | null),
/** Number of non-empty values for displayValue */
countNotEmptyDisplayValue?: (OrderByDirection | null),
/** Percentage of empty values for displayValue */
percentageEmptyDisplayValue?: (OrderByDirection | null),
/** Percentage of non-empty values for displayValue */
percentageNotEmptyDisplayValue?: (OrderByDirection | null),
/** Number of unique values for viewFilterGroupId */
countUniqueValuesViewFilterGroupId?: (OrderByDirection | null),
/** Number of empty values for viewFilterGroupId */
countEmptyViewFilterGroupId?: (OrderByDirection | null),
/** Number of non-empty values for viewFilterGroupId */
countNotEmptyViewFilterGroupId?: (OrderByDirection | null),
/** Percentage of empty values for viewFilterGroupId */
percentageEmptyViewFilterGroupId?: (OrderByDirection | null),
/** Percentage of non-empty values for viewFilterGroupId */
percentageNotEmptyViewFilterGroupId?: (OrderByDirection | null),
/** Number of unique values for positionInViewFilterGroup */
countUniqueValuesPositionInViewFilterGroup?: (OrderByDirection | null),
/** Number of empty values for positionInViewFilterGroup */
countEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Number of non-empty values for positionInViewFilterGroup */
countNotEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Percentage of empty values for positionInViewFilterGroup */
percentageEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Percentage of non-empty values for positionInViewFilterGroup */
percentageNotEmptyPositionInViewFilterGroup?: (OrderByDirection | null),
/** Minimum amount contained in the field positionInViewFilterGroup */
minPositionInViewFilterGroup?: (OrderByDirection | null),
/** Maximum amount contained in the field positionInViewFilterGroup */
maxPositionInViewFilterGroup?: (OrderByDirection | null),
/** Average amount contained in the field positionInViewFilterGroup */
avgPositionInViewFilterGroup?: (OrderByDirection | null),
/** Sum of amounts contained in the field positionInViewFilterGroup */
sumPositionInViewFilterGroup?: (OrderByDirection | null),
/** Number of unique values for subFieldName */
countUniqueValuesSubFieldName?: (OrderByDirection | null),
/** Number of empty values for subFieldName */
countEmptySubFieldName?: (OrderByDirection | null),
/** Number of non-empty values for subFieldName */
countNotEmptySubFieldName?: (OrderByDirection | null),
/** Percentage of empty values for subFieldName */
percentageEmptySubFieldName?: (OrderByDirection | null),
/** Percentage of non-empty values for subFieldName */
percentageNotEmptySubFieldName?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** View Filter related view */
viewId?: (OrderByDirection | null)}


/** (System) View Filters */
export interface ViewFilterGroupByInput {
/** View Filter target field */
fieldMetadataId?: (Scalars['Boolean'] | null),
/** View Filter operand */
operand?: (Scalars['Boolean'] | null),
/** View Filter value */
value?: (Scalars['Boolean'] | null),
/** View Filter Display Value */
displayValue?: (Scalars['Boolean'] | null),
/** View Filter Group */
viewFilterGroupId?: (Scalars['Boolean'] | null),
/** Position in the view filter group */
positionInViewFilterGroup?: (Scalars['Boolean'] | null),
/** Sub field name */
subFieldName?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** View Filter related view */
viewId?: (Scalars['Boolean'] | null)}


/** (System) View Sorts */
export interface ViewSortGenqlSelection{
    /** View Sort target field */
    fieldMetadataId?: boolean | number
    /** View Sort direction */
    direction?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** View Sort related view */
    viewId?: boolean | number
    /** View Sort related view */
    view?: ViewGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Sorts */
export interface ViewSortEdgeGenqlSelection{
    node?: ViewSortGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Sorts */
export interface ViewSortConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for direction */
    countUniqueValuesDirection?: boolean | number
    /** Number of empty values for direction */
    countEmptyDirection?: boolean | number
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: boolean | number
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: boolean | number
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewSortEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) View Sorts */
export interface ViewSortGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for fieldMetadataId */
    countUniqueValuesFieldMetadataId?: boolean | number
    /** Number of empty values for fieldMetadataId */
    countEmptyFieldMetadataId?: boolean | number
    /** Number of non-empty values for fieldMetadataId */
    countNotEmptyFieldMetadataId?: boolean | number
    /** Percentage of empty values for fieldMetadataId */
    percentageEmptyFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for fieldMetadataId */
    percentageNotEmptyFieldMetadataId?: boolean | number
    /** Number of unique values for direction */
    countUniqueValuesDirection?: boolean | number
    /** Number of empty values for direction */
    countEmptyDirection?: boolean | number
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: boolean | number
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: boolean | number
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewSortEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ViewSortRelationInput {
/** Connect to a viewSort record */
connect?: (ViewSortConnectInput | null),
/** Disconnect from a viewSort record */
disconnect?: (Scalars['Boolean'] | null)}

export interface ViewSortConnectInput {
/** Find a viewSort record based on its unique fields: id or fieldMetadataId and view */
where?: (ViewSortWhereUniqueInput | null)}

export interface ViewSortWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null),
/** Connect by Field Metadata Id */
fieldMetadataId?: (Scalars['UUID'] | null),
/** Connect by View */
view?: (Scalars['ID'] | null)}


/** (System) View Sorts */
export interface ViewSortCreateInput {
/** View Sort target field */
fieldMetadataId: Scalars['UUID'],
/** View Sort direction */
direction?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Sort related view */
viewId?: (Scalars['ID'] | null),
/** View Sort related view */
view?: (ViewRelationInput | null)}


/** (System) View Sorts */
export interface ViewSortUpdateInput {
/** View Sort target field */
fieldMetadataId?: (Scalars['UUID'] | null),
/** View Sort direction */
direction?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** View Sort related view */
viewId?: (Scalars['ID'] | null),
/** View Sort related view */
view?: (ViewRelationInput | null)}


/** (System) View Sorts */
export interface ViewSortFilterInput {
/** View Sort target field */
fieldMetadataId?: (UUIDFilter | null),
/** View Sort direction */
direction?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** View Sort related view */
viewId?: (UUIDFilter | null),and?: ((ViewSortFilterInput | null)[] | null),or?: ((ViewSortFilterInput | null)[] | null),not?: (ViewSortFilterInput | null)}


/** (System) View Sorts */
export interface ViewSortOrderByInput {
/** View Sort target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Sort direction */
direction?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** View Sort related view */
viewId?: (OrderByDirection | null)}


/** (System) View Sorts */
export interface ViewSortOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (ViewSortOrderByWithGroupByAggregateInput | null),
/** View Sort target field */
fieldMetadataId?: (OrderByDirection | null),
/** View Sort direction */
direction?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** View Sort related view */
viewId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface ViewSortOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for fieldMetadataId */
countUniqueValuesFieldMetadataId?: (OrderByDirection | null),
/** Number of empty values for fieldMetadataId */
countEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for fieldMetadataId */
countNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for fieldMetadataId */
percentageEmptyFieldMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for fieldMetadataId */
percentageNotEmptyFieldMetadataId?: (OrderByDirection | null),
/** Number of unique values for direction */
countUniqueValuesDirection?: (OrderByDirection | null),
/** Number of empty values for direction */
countEmptyDirection?: (OrderByDirection | null),
/** Number of non-empty values for direction */
countNotEmptyDirection?: (OrderByDirection | null),
/** Percentage of empty values for direction */
percentageEmptyDirection?: (OrderByDirection | null),
/** Percentage of non-empty values for direction */
percentageNotEmptyDirection?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** View Sort related view */
viewId?: (OrderByDirection | null)}


/** (System) View Sorts */
export interface ViewSortGroupByInput {
/** View Sort target field */
fieldMetadataId?: (Scalars['Boolean'] | null),
/** View Sort direction */
direction?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** View Sort related view */
viewId?: (Scalars['Boolean'] | null)}


/** (System) Views */
export interface ViewGenqlSelection{
    /** View name */
    name?: boolean | number
    /** View target object */
    objectMetadataId?: boolean | number
    /** View type */
    type?: boolean | number
    /** View key */
    key?: boolean | number
    /** View icon */
    icon?: boolean | number
    /** View Kanban column field */
    kanbanFieldMetadataId?: boolean | number
    /** View position */
    position?: boolean | number
    /** Describes if the view is in compact mode */
    isCompact?: boolean | number
    /** Display the records in a side panel or in a record page */
    openRecordIn?: boolean | number
    /** Optional aggregate operation */
    kanbanAggregateOperation?: boolean | number
    /** Field metadata used for aggregate operation */
    kanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Any field filter value */
    anyFieldFilterValue?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** View Fields */
    viewFields?: (ViewFieldConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewFieldFilterInput | null), orderBy?: ((ViewFieldOrderByInput | null)[] | null)} })
    /** View Groups */
    viewGroups?: (ViewGroupConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewGroupFilterInput | null), orderBy?: ((ViewGroupOrderByInput | null)[] | null)} })
    /** View Filters */
    viewFilters?: (ViewFilterConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewFilterFilterInput | null), orderBy?: ((ViewFilterOrderByInput | null)[] | null)} })
    /** View Filter Groups */
    viewFilterGroups?: (ViewFilterGroupConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewFilterGroupFilterInput | null), orderBy?: ((ViewFilterGroupOrderByInput | null)[] | null)} })
    /** View Sorts */
    viewSorts?: (ViewSortConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (ViewSortFilterInput | null), orderBy?: ((ViewSortOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) Views */
export interface ViewEdgeGenqlSelection{
    node?: ViewGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) Views */
export interface ViewConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for objectMetadataId */
    countUniqueValuesObjectMetadataId?: boolean | number
    /** Number of empty values for objectMetadataId */
    countEmptyObjectMetadataId?: boolean | number
    /** Number of non-empty values for objectMetadataId */
    countNotEmptyObjectMetadataId?: boolean | number
    /** Percentage of empty values for objectMetadataId */
    percentageEmptyObjectMetadataId?: boolean | number
    /** Percentage of non-empty values for objectMetadataId */
    percentageNotEmptyObjectMetadataId?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for key */
    countUniqueValuesKey?: boolean | number
    /** Number of empty values for key */
    countEmptyKey?: boolean | number
    /** Number of non-empty values for key */
    countNotEmptyKey?: boolean | number
    /** Percentage of empty values for key */
    percentageEmptyKey?: boolean | number
    /** Percentage of non-empty values for key */
    percentageNotEmptyKey?: boolean | number
    /** Number of unique values for icon */
    countUniqueValuesIcon?: boolean | number
    /** Number of empty values for icon */
    countEmptyIcon?: boolean | number
    /** Number of non-empty values for icon */
    countNotEmptyIcon?: boolean | number
    /** Percentage of empty values for icon */
    percentageEmptyIcon?: boolean | number
    /** Percentage of non-empty values for icon */
    percentageNotEmptyIcon?: boolean | number
    /** Number of unique values for kanbanFieldMetadataId */
    countUniqueValuesKanbanFieldMetadataId?: boolean | number
    /** Number of empty values for kanbanFieldMetadataId */
    countEmptyKanbanFieldMetadataId?: boolean | number
    /** Number of non-empty values for kanbanFieldMetadataId */
    countNotEmptyKanbanFieldMetadataId?: boolean | number
    /** Percentage of empty values for kanbanFieldMetadataId */
    percentageEmptyKanbanFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for kanbanFieldMetadataId */
    percentageNotEmptyKanbanFieldMetadataId?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for isCompact */
    countUniqueValuesIsCompact?: boolean | number
    /** Number of empty values for isCompact */
    countEmptyIsCompact?: boolean | number
    /** Number of non-empty values for isCompact */
    countNotEmptyIsCompact?: boolean | number
    /** Percentage of empty values for isCompact */
    percentageEmptyIsCompact?: boolean | number
    /** Percentage of non-empty values for isCompact */
    percentageNotEmptyIsCompact?: boolean | number
    /** Count of true values in the field isCompact */
    countTrueIsCompact?: boolean | number
    /** Count of false values in the field isCompact */
    countFalseIsCompact?: boolean | number
    /** Number of unique values for openRecordIn */
    countUniqueValuesOpenRecordIn?: boolean | number
    /** Number of empty values for openRecordIn */
    countEmptyOpenRecordIn?: boolean | number
    /** Number of non-empty values for openRecordIn */
    countNotEmptyOpenRecordIn?: boolean | number
    /** Percentage of empty values for openRecordIn */
    percentageEmptyOpenRecordIn?: boolean | number
    /** Percentage of non-empty values for openRecordIn */
    percentageNotEmptyOpenRecordIn?: boolean | number
    /** Number of unique values for kanbanAggregateOperation */
    countUniqueValuesKanbanAggregateOperation?: boolean | number
    /** Number of empty values for kanbanAggregateOperation */
    countEmptyKanbanAggregateOperation?: boolean | number
    /** Number of non-empty values for kanbanAggregateOperation */
    countNotEmptyKanbanAggregateOperation?: boolean | number
    /** Percentage of empty values for kanbanAggregateOperation */
    percentageEmptyKanbanAggregateOperation?: boolean | number
    /** Percentage of non-empty values for kanbanAggregateOperation */
    percentageNotEmptyKanbanAggregateOperation?: boolean | number
    /** Number of unique values for kanbanAggregateOperationFieldMetadataId */
    countUniqueValuesKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Number of empty values for kanbanAggregateOperationFieldMetadataId */
    countEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Number of non-empty values for kanbanAggregateOperationFieldMetadataId */
    countNotEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Percentage of empty values for kanbanAggregateOperationFieldMetadataId */
    percentageEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for kanbanAggregateOperationFieldMetadataId */
    percentageNotEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Number of unique values for anyFieldFilterValue */
    countUniqueValuesAnyFieldFilterValue?: boolean | number
    /** Number of empty values for anyFieldFilterValue */
    countEmptyAnyFieldFilterValue?: boolean | number
    /** Number of non-empty values for anyFieldFilterValue */
    countNotEmptyAnyFieldFilterValue?: boolean | number
    /** Percentage of empty values for anyFieldFilterValue */
    percentageEmptyAnyFieldFilterValue?: boolean | number
    /** Percentage of non-empty values for anyFieldFilterValue */
    percentageNotEmptyAnyFieldFilterValue?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** (System) Views */
export interface ViewGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for objectMetadataId */
    countUniqueValuesObjectMetadataId?: boolean | number
    /** Number of empty values for objectMetadataId */
    countEmptyObjectMetadataId?: boolean | number
    /** Number of non-empty values for objectMetadataId */
    countNotEmptyObjectMetadataId?: boolean | number
    /** Percentage of empty values for objectMetadataId */
    percentageEmptyObjectMetadataId?: boolean | number
    /** Percentage of non-empty values for objectMetadataId */
    percentageNotEmptyObjectMetadataId?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for key */
    countUniqueValuesKey?: boolean | number
    /** Number of empty values for key */
    countEmptyKey?: boolean | number
    /** Number of non-empty values for key */
    countNotEmptyKey?: boolean | number
    /** Percentage of empty values for key */
    percentageEmptyKey?: boolean | number
    /** Percentage of non-empty values for key */
    percentageNotEmptyKey?: boolean | number
    /** Number of unique values for icon */
    countUniqueValuesIcon?: boolean | number
    /** Number of empty values for icon */
    countEmptyIcon?: boolean | number
    /** Number of non-empty values for icon */
    countNotEmptyIcon?: boolean | number
    /** Percentage of empty values for icon */
    percentageEmptyIcon?: boolean | number
    /** Percentage of non-empty values for icon */
    percentageNotEmptyIcon?: boolean | number
    /** Number of unique values for kanbanFieldMetadataId */
    countUniqueValuesKanbanFieldMetadataId?: boolean | number
    /** Number of empty values for kanbanFieldMetadataId */
    countEmptyKanbanFieldMetadataId?: boolean | number
    /** Number of non-empty values for kanbanFieldMetadataId */
    countNotEmptyKanbanFieldMetadataId?: boolean | number
    /** Percentage of empty values for kanbanFieldMetadataId */
    percentageEmptyKanbanFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for kanbanFieldMetadataId */
    percentageNotEmptyKanbanFieldMetadataId?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for isCompact */
    countUniqueValuesIsCompact?: boolean | number
    /** Number of empty values for isCompact */
    countEmptyIsCompact?: boolean | number
    /** Number of non-empty values for isCompact */
    countNotEmptyIsCompact?: boolean | number
    /** Percentage of empty values for isCompact */
    percentageEmptyIsCompact?: boolean | number
    /** Percentage of non-empty values for isCompact */
    percentageNotEmptyIsCompact?: boolean | number
    /** Count of true values in the field isCompact */
    countTrueIsCompact?: boolean | number
    /** Count of false values in the field isCompact */
    countFalseIsCompact?: boolean | number
    /** Number of unique values for openRecordIn */
    countUniqueValuesOpenRecordIn?: boolean | number
    /** Number of empty values for openRecordIn */
    countEmptyOpenRecordIn?: boolean | number
    /** Number of non-empty values for openRecordIn */
    countNotEmptyOpenRecordIn?: boolean | number
    /** Percentage of empty values for openRecordIn */
    percentageEmptyOpenRecordIn?: boolean | number
    /** Percentage of non-empty values for openRecordIn */
    percentageNotEmptyOpenRecordIn?: boolean | number
    /** Number of unique values for kanbanAggregateOperation */
    countUniqueValuesKanbanAggregateOperation?: boolean | number
    /** Number of empty values for kanbanAggregateOperation */
    countEmptyKanbanAggregateOperation?: boolean | number
    /** Number of non-empty values for kanbanAggregateOperation */
    countNotEmptyKanbanAggregateOperation?: boolean | number
    /** Percentage of empty values for kanbanAggregateOperation */
    percentageEmptyKanbanAggregateOperation?: boolean | number
    /** Percentage of non-empty values for kanbanAggregateOperation */
    percentageNotEmptyKanbanAggregateOperation?: boolean | number
    /** Number of unique values for kanbanAggregateOperationFieldMetadataId */
    countUniqueValuesKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Number of empty values for kanbanAggregateOperationFieldMetadataId */
    countEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Number of non-empty values for kanbanAggregateOperationFieldMetadataId */
    countNotEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Percentage of empty values for kanbanAggregateOperationFieldMetadataId */
    percentageEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Percentage of non-empty values for kanbanAggregateOperationFieldMetadataId */
    percentageNotEmptyKanbanAggregateOperationFieldMetadataId?: boolean | number
    /** Number of unique values for anyFieldFilterValue */
    countUniqueValuesAnyFieldFilterValue?: boolean | number
    /** Number of empty values for anyFieldFilterValue */
    countEmptyAnyFieldFilterValue?: boolean | number
    /** Number of non-empty values for anyFieldFilterValue */
    countNotEmptyAnyFieldFilterValue?: boolean | number
    /** Percentage of empty values for anyFieldFilterValue */
    percentageEmptyAnyFieldFilterValue?: boolean | number
    /** Percentage of non-empty values for anyFieldFilterValue */
    percentageNotEmptyAnyFieldFilterValue?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: ViewEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface ViewRelationInput {
/** Connect to a view record */
connect?: (ViewConnectInput | null),
/** Disconnect from a view record */
disconnect?: (Scalars['Boolean'] | null)}

export interface ViewConnectInput {
/** Find a view record based on its unique fields: id */
where?: (ViewWhereUniqueInput | null)}

export interface ViewWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** (System) Views */
export interface ViewCreateInput {
/** View name */
name?: (Scalars['String'] | null),
/** View target object */
objectMetadataId: Scalars['UUID'],
/** View type */
type?: (Scalars['String'] | null),
/** View key */
key?: (ViewKeyEnum | null),
/** View icon */
icon?: (Scalars['String'] | null),
/** View Kanban column field */
kanbanFieldMetadataId?: (Scalars['String'] | null),
/** View position */
position?: (Scalars['Position'] | null),
/** Describes if the view is in compact mode */
isCompact?: (Scalars['Boolean'] | null),
/** Display the records in a side panel or in a record page */
openRecordIn?: (ViewOpenRecordInEnum | null),
/** Optional aggregate operation */
kanbanAggregateOperation?: (ViewKanbanAggregateOperationEnum | null),
/** Field metadata used for aggregate operation */
kanbanAggregateOperationFieldMetadataId?: (Scalars['UUID'] | null),
/** Any field filter value */
anyFieldFilterValue?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** (System) Views */
export interface ViewUpdateInput {
/** View name */
name?: (Scalars['String'] | null),
/** View target object */
objectMetadataId?: (Scalars['UUID'] | null),
/** View type */
type?: (Scalars['String'] | null),
/** View key */
key?: (ViewKeyEnum | null),
/** View icon */
icon?: (Scalars['String'] | null),
/** View Kanban column field */
kanbanFieldMetadataId?: (Scalars['String'] | null),
/** View position */
position?: (Scalars['Position'] | null),
/** Describes if the view is in compact mode */
isCompact?: (Scalars['Boolean'] | null),
/** Display the records in a side panel or in a record page */
openRecordIn?: (ViewOpenRecordInEnum | null),
/** Optional aggregate operation */
kanbanAggregateOperation?: (ViewKanbanAggregateOperationEnum | null),
/** Field metadata used for aggregate operation */
kanbanAggregateOperationFieldMetadataId?: (Scalars['UUID'] | null),
/** Any field filter value */
anyFieldFilterValue?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** (System) Views */
export interface ViewFilterInput {
/** View name */
name?: (StringFilter | null),
/** View target object */
objectMetadataId?: (UUIDFilter | null),
/** View type */
type?: (StringFilter | null),
/** View key */
key?: (ViewKeyEnumFilter | null),
/** View icon */
icon?: (StringFilter | null),
/** View Kanban column field */
kanbanFieldMetadataId?: (StringFilter | null),
/** View position */
position?: (FloatFilter | null),
/** Describes if the view is in compact mode */
isCompact?: (BooleanFilter | null),
/** Display the records in a side panel or in a record page */
openRecordIn?: (ViewOpenRecordInEnumFilter | null),
/** Optional aggregate operation */
kanbanAggregateOperation?: (ViewKanbanAggregateOperationEnumFilter | null),
/** Field metadata used for aggregate operation */
kanbanAggregateOperationFieldMetadataId?: (UUIDFilter | null),
/** Any field filter value */
anyFieldFilterValue?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((ViewFilterInput | null)[] | null),or?: ((ViewFilterInput | null)[] | null),not?: (ViewFilterInput | null)}

export interface ViewKeyEnumFilter {eq?: (ViewKeyEnum | null),neq?: (ViewKeyEnum | null),in?: ((ViewKeyEnum | null)[] | null),containsAny?: ((ViewKeyEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface ViewOpenRecordInEnumFilter {eq?: (ViewOpenRecordInEnum | null),neq?: (ViewOpenRecordInEnum | null),in?: ((ViewOpenRecordInEnum | null)[] | null),containsAny?: ((ViewOpenRecordInEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface ViewKanbanAggregateOperationEnumFilter {eq?: (ViewKanbanAggregateOperationEnum | null),neq?: (ViewKanbanAggregateOperationEnum | null),in?: ((ViewKanbanAggregateOperationEnum | null)[] | null),containsAny?: ((ViewKanbanAggregateOperationEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** (System) Views */
export interface ViewOrderByInput {
/** View name */
name?: (OrderByDirection | null),
/** View target object */
objectMetadataId?: (OrderByDirection | null),
/** View type */
type?: (OrderByDirection | null),
/** View key */
key?: (OrderByDirection | null),
/** View icon */
icon?: (OrderByDirection | null),
/** View Kanban column field */
kanbanFieldMetadataId?: (OrderByDirection | null),
/** View position */
position?: (OrderByDirection | null),
/** Describes if the view is in compact mode */
isCompact?: (OrderByDirection | null),
/** Display the records in a side panel or in a record page */
openRecordIn?: (OrderByDirection | null),
/** Optional aggregate operation */
kanbanAggregateOperation?: (OrderByDirection | null),
/** Field metadata used for aggregate operation */
kanbanAggregateOperationFieldMetadataId?: (OrderByDirection | null),
/** Any field filter value */
anyFieldFilterValue?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** (System) Views */
export interface ViewOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (ViewOrderByWithGroupByAggregateInput | null),
/** View name */
name?: (OrderByDirection | null),
/** View target object */
objectMetadataId?: (OrderByDirection | null),
/** View type */
type?: (OrderByDirection | null),
/** View key */
key?: (OrderByDirection | null),
/** View icon */
icon?: (OrderByDirection | null),
/** View Kanban column field */
kanbanFieldMetadataId?: (OrderByDirection | null),
/** View position */
position?: (OrderByDirection | null),
/** Describes if the view is in compact mode */
isCompact?: (OrderByDirection | null),
/** Display the records in a side panel or in a record page */
openRecordIn?: (OrderByDirection | null),
/** Optional aggregate operation */
kanbanAggregateOperation?: (OrderByDirection | null),
/** Field metadata used for aggregate operation */
kanbanAggregateOperationFieldMetadataId?: (OrderByDirection | null),
/** Any field filter value */
anyFieldFilterValue?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface ViewOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for objectMetadataId */
countUniqueValuesObjectMetadataId?: (OrderByDirection | null),
/** Number of empty values for objectMetadataId */
countEmptyObjectMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for objectMetadataId */
countNotEmptyObjectMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for objectMetadataId */
percentageEmptyObjectMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for objectMetadataId */
percentageNotEmptyObjectMetadataId?: (OrderByDirection | null),
/** Number of unique values for type */
countUniqueValuesType?: (OrderByDirection | null),
/** Number of empty values for type */
countEmptyType?: (OrderByDirection | null),
/** Number of non-empty values for type */
countNotEmptyType?: (OrderByDirection | null),
/** Percentage of empty values for type */
percentageEmptyType?: (OrderByDirection | null),
/** Percentage of non-empty values for type */
percentageNotEmptyType?: (OrderByDirection | null),
/** Number of unique values for key */
countUniqueValuesKey?: (OrderByDirection | null),
/** Number of empty values for key */
countEmptyKey?: (OrderByDirection | null),
/** Number of non-empty values for key */
countNotEmptyKey?: (OrderByDirection | null),
/** Percentage of empty values for key */
percentageEmptyKey?: (OrderByDirection | null),
/** Percentage of non-empty values for key */
percentageNotEmptyKey?: (OrderByDirection | null),
/** Number of unique values for icon */
countUniqueValuesIcon?: (OrderByDirection | null),
/** Number of empty values for icon */
countEmptyIcon?: (OrderByDirection | null),
/** Number of non-empty values for icon */
countNotEmptyIcon?: (OrderByDirection | null),
/** Percentage of empty values for icon */
percentageEmptyIcon?: (OrderByDirection | null),
/** Percentage of non-empty values for icon */
percentageNotEmptyIcon?: (OrderByDirection | null),
/** Number of unique values for kanbanFieldMetadataId */
countUniqueValuesKanbanFieldMetadataId?: (OrderByDirection | null),
/** Number of empty values for kanbanFieldMetadataId */
countEmptyKanbanFieldMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for kanbanFieldMetadataId */
countNotEmptyKanbanFieldMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for kanbanFieldMetadataId */
percentageEmptyKanbanFieldMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for kanbanFieldMetadataId */
percentageNotEmptyKanbanFieldMetadataId?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for isCompact */
countUniqueValuesIsCompact?: (OrderByDirection | null),
/** Number of empty values for isCompact */
countEmptyIsCompact?: (OrderByDirection | null),
/** Number of non-empty values for isCompact */
countNotEmptyIsCompact?: (OrderByDirection | null),
/** Percentage of empty values for isCompact */
percentageEmptyIsCompact?: (OrderByDirection | null),
/** Percentage of non-empty values for isCompact */
percentageNotEmptyIsCompact?: (OrderByDirection | null),
/** Count of true values in the field isCompact */
countTrueIsCompact?: (OrderByDirection | null),
/** Count of false values in the field isCompact */
countFalseIsCompact?: (OrderByDirection | null),
/** Number of unique values for openRecordIn */
countUniqueValuesOpenRecordIn?: (OrderByDirection | null),
/** Number of empty values for openRecordIn */
countEmptyOpenRecordIn?: (OrderByDirection | null),
/** Number of non-empty values for openRecordIn */
countNotEmptyOpenRecordIn?: (OrderByDirection | null),
/** Percentage of empty values for openRecordIn */
percentageEmptyOpenRecordIn?: (OrderByDirection | null),
/** Percentage of non-empty values for openRecordIn */
percentageNotEmptyOpenRecordIn?: (OrderByDirection | null),
/** Number of unique values for kanbanAggregateOperation */
countUniqueValuesKanbanAggregateOperation?: (OrderByDirection | null),
/** Number of empty values for kanbanAggregateOperation */
countEmptyKanbanAggregateOperation?: (OrderByDirection | null),
/** Number of non-empty values for kanbanAggregateOperation */
countNotEmptyKanbanAggregateOperation?: (OrderByDirection | null),
/** Percentage of empty values for kanbanAggregateOperation */
percentageEmptyKanbanAggregateOperation?: (OrderByDirection | null),
/** Percentage of non-empty values for kanbanAggregateOperation */
percentageNotEmptyKanbanAggregateOperation?: (OrderByDirection | null),
/** Number of unique values for kanbanAggregateOperationFieldMetadataId */
countUniqueValuesKanbanAggregateOperationFieldMetadataId?: (OrderByDirection | null),
/** Number of empty values for kanbanAggregateOperationFieldMetadataId */
countEmptyKanbanAggregateOperationFieldMetadataId?: (OrderByDirection | null),
/** Number of non-empty values for kanbanAggregateOperationFieldMetadataId */
countNotEmptyKanbanAggregateOperationFieldMetadataId?: (OrderByDirection | null),
/** Percentage of empty values for kanbanAggregateOperationFieldMetadataId */
percentageEmptyKanbanAggregateOperationFieldMetadataId?: (OrderByDirection | null),
/** Percentage of non-empty values for kanbanAggregateOperationFieldMetadataId */
percentageNotEmptyKanbanAggregateOperationFieldMetadataId?: (OrderByDirection | null),
/** Number of unique values for anyFieldFilterValue */
countUniqueValuesAnyFieldFilterValue?: (OrderByDirection | null),
/** Number of empty values for anyFieldFilterValue */
countEmptyAnyFieldFilterValue?: (OrderByDirection | null),
/** Number of non-empty values for anyFieldFilterValue */
countNotEmptyAnyFieldFilterValue?: (OrderByDirection | null),
/** Percentage of empty values for anyFieldFilterValue */
percentageEmptyAnyFieldFilterValue?: (OrderByDirection | null),
/** Percentage of non-empty values for anyFieldFilterValue */
percentageNotEmptyAnyFieldFilterValue?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** (System) Views */
export interface ViewGroupByInput {
/** View name */
name?: (Scalars['Boolean'] | null),
/** View target object */
objectMetadataId?: (Scalars['Boolean'] | null),
/** View type */
type?: (Scalars['Boolean'] | null),
/** View key */
key?: (Scalars['Boolean'] | null),
/** View icon */
icon?: (Scalars['Boolean'] | null),
/** View Kanban column field */
kanbanFieldMetadataId?: (Scalars['Boolean'] | null),
/** View position */
position?: (Scalars['Boolean'] | null),
/** Describes if the view is in compact mode */
isCompact?: (Scalars['Boolean'] | null),
/** Display the records in a side panel or in a record page */
openRecordIn?: (Scalars['Boolean'] | null),
/** Optional aggregate operation */
kanbanAggregateOperation?: (Scalars['Boolean'] | null),
/** Field metadata used for aggregate operation */
kanbanAggregateOperationFieldMetadataId?: (Scalars['Boolean'] | null),
/** Any field filter value */
anyFieldFilterValue?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** A workflow */
export interface WorkflowGenqlSelection{
    /** The workflow name */
    name?: boolean | number
    /** The workflow last published version id */
    lastPublishedVersionId?: boolean | number
    /** The current statuses of the workflow versions */
    statuses?: boolean | number
    /** Workflow record position */
    position?: boolean | number
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Workflow versions linked to the workflow. */
    versions?: (WorkflowVersionConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowVersionFilterInput | null), orderBy?: ((WorkflowVersionOrderByInput | null)[] | null)} })
    /** Workflow runs linked to the workflow. */
    runs?: (WorkflowRunConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowRunFilterInput | null), orderBy?: ((WorkflowRunOrderByInput | null)[] | null)} })
    /** Workflow automated triggers linked to the workflow. */
    automatedTriggers?: (WorkflowAutomatedTriggerConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowAutomatedTriggerFilterInput | null), orderBy?: ((WorkflowAutomatedTriggerOrderByInput | null)[] | null)} })
    /** Favorites linked to the workflow */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Timeline activities linked to the workflow */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    /** Attachments linked to the workflow */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow */
export interface WorkflowEdgeGenqlSelection{
    node?: WorkflowGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow */
export interface WorkflowConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for lastPublishedVersionId */
    countUniqueValuesLastPublishedVersionId?: boolean | number
    /** Number of empty values for lastPublishedVersionId */
    countEmptyLastPublishedVersionId?: boolean | number
    /** Number of non-empty values for lastPublishedVersionId */
    countNotEmptyLastPublishedVersionId?: boolean | number
    /** Percentage of empty values for lastPublishedVersionId */
    percentageEmptyLastPublishedVersionId?: boolean | number
    /** Percentage of non-empty values for lastPublishedVersionId */
    percentageNotEmptyLastPublishedVersionId?: boolean | number
    /** Number of unique values for statuses */
    countUniqueValuesStatuses?: boolean | number
    /** Number of empty values for statuses */
    countEmptyStatuses?: boolean | number
    /** Number of non-empty values for statuses */
    countNotEmptyStatuses?: boolean | number
    /** Percentage of empty values for statuses */
    percentageEmptyStatuses?: boolean | number
    /** Percentage of non-empty values for statuses */
    percentageNotEmptyStatuses?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow */
export interface WorkflowGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for lastPublishedVersionId */
    countUniqueValuesLastPublishedVersionId?: boolean | number
    /** Number of empty values for lastPublishedVersionId */
    countEmptyLastPublishedVersionId?: boolean | number
    /** Number of non-empty values for lastPublishedVersionId */
    countNotEmptyLastPublishedVersionId?: boolean | number
    /** Percentage of empty values for lastPublishedVersionId */
    percentageEmptyLastPublishedVersionId?: boolean | number
    /** Percentage of non-empty values for lastPublishedVersionId */
    percentageNotEmptyLastPublishedVersionId?: boolean | number
    /** Number of unique values for statuses */
    countUniqueValuesStatuses?: boolean | number
    /** Number of empty values for statuses */
    countEmptyStatuses?: boolean | number
    /** Number of non-empty values for statuses */
    countNotEmptyStatuses?: boolean | number
    /** Percentage of empty values for statuses */
    percentageEmptyStatuses?: boolean | number
    /** Percentage of non-empty values for statuses */
    percentageNotEmptyStatuses?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowRelationInput {
/** Connect to a workflow record */
connect?: (WorkflowConnectInput | null),
/** Disconnect from a workflow record */
disconnect?: (Scalars['Boolean'] | null)}

export interface WorkflowConnectInput {
/** Find a workflow record based on its unique fields: id */
where?: (WorkflowWhereUniqueInput | null)}

export interface WorkflowWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A workflow */
export interface WorkflowCreateInput {
/** The workflow name */
name?: (Scalars['String'] | null),
/** The workflow last published version id */
lastPublishedVersionId?: (Scalars['String'] | null),
/** The current statuses of the workflow versions */
statuses?: ((WorkflowStatusesEnum | null)[] | null),
/** Workflow record position */
position?: (Scalars['Position'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A workflow */
export interface WorkflowUpdateInput {
/** The workflow name */
name?: (Scalars['String'] | null),
/** The workflow last published version id */
lastPublishedVersionId?: (Scalars['String'] | null),
/** The current statuses of the workflow versions */
statuses?: ((WorkflowStatusesEnum | null)[] | null),
/** Workflow record position */
position?: (Scalars['Position'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A workflow */
export interface WorkflowFilterInput {
/** The workflow name */
name?: (StringFilter | null),
/** The workflow last published version id */
lastPublishedVersionId?: (StringFilter | null),
/** The current statuses of the workflow versions */
statuses?: (WorkflowStatusesEnumFilter | null),
/** Workflow record position */
position?: (FloatFilter | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((WorkflowFilterInput | null)[] | null),or?: ((WorkflowFilterInput | null)[] | null),not?: (WorkflowFilterInput | null)}

export interface WorkflowStatusesEnumFilter {eq?: (WorkflowStatusesEnum | null),neq?: (WorkflowStatusesEnum | null),in?: ((WorkflowStatusesEnum | null)[] | null),containsAny?: ((WorkflowStatusesEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A workflow */
export interface WorkflowOrderByInput {
/** The workflow name */
name?: (OrderByDirection | null),
/** The workflow last published version id */
lastPublishedVersionId?: (OrderByDirection | null),
/** The current statuses of the workflow versions */
statuses?: (OrderByDirection | null),
/** Workflow record position */
position?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** A workflow */
export interface WorkflowOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (WorkflowOrderByWithGroupByAggregateInput | null),
/** The workflow name */
name?: (OrderByDirection | null),
/** The workflow last published version id */
lastPublishedVersionId?: (OrderByDirection | null),
/** The current statuses of the workflow versions */
statuses?: (OrderByDirection | null),
/** Workflow record position */
position?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface WorkflowOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for lastPublishedVersionId */
countUniqueValuesLastPublishedVersionId?: (OrderByDirection | null),
/** Number of empty values for lastPublishedVersionId */
countEmptyLastPublishedVersionId?: (OrderByDirection | null),
/** Number of non-empty values for lastPublishedVersionId */
countNotEmptyLastPublishedVersionId?: (OrderByDirection | null),
/** Percentage of empty values for lastPublishedVersionId */
percentageEmptyLastPublishedVersionId?: (OrderByDirection | null),
/** Percentage of non-empty values for lastPublishedVersionId */
percentageNotEmptyLastPublishedVersionId?: (OrderByDirection | null),
/** Number of unique values for statuses */
countUniqueValuesStatuses?: (OrderByDirection | null),
/** Number of empty values for statuses */
countEmptyStatuses?: (OrderByDirection | null),
/** Number of non-empty values for statuses */
countNotEmptyStatuses?: (OrderByDirection | null),
/** Percentage of empty values for statuses */
percentageEmptyStatuses?: (OrderByDirection | null),
/** Percentage of non-empty values for statuses */
percentageNotEmptyStatuses?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** A workflow */
export interface WorkflowGroupByInput {
/** The workflow name */
name?: (Scalars['Boolean'] | null),
/** The workflow last published version id */
lastPublishedVersionId?: (Scalars['Boolean'] | null),
/** The current statuses of the workflow versions */
statuses?: (Scalars['Boolean'] | null),
/** Workflow record position */
position?: (Scalars['Boolean'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** A workflow version */
export interface WorkflowVersionGenqlSelection{
    /** The workflow version name */
    name?: boolean | number
    /** Json object to provide trigger */
    trigger?: boolean | number
    /** Json object to provide steps */
    steps?: boolean | number
    /** The workflow version status */
    status?: boolean | number
    /** Workflow version position */
    position?: boolean | number
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** WorkflowVersion workflow */
    workflowId?: boolean | number
    /** WorkflowVersion workflow */
    workflow?: WorkflowGenqlSelection
    /** Workflow runs linked to the version. */
    runs?: (WorkflowRunConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (WorkflowRunFilterInput | null), orderBy?: ((WorkflowRunOrderByInput | null)[] | null)} })
    /** Favorites linked to the workflow version */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Timeline activities linked to the version */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow version */
export interface WorkflowVersionEdgeGenqlSelection{
    node?: WorkflowVersionGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow version */
export interface WorkflowVersionConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for trigger */
    countUniqueValuesTrigger?: boolean | number
    /** Number of empty values for trigger */
    countEmptyTrigger?: boolean | number
    /** Number of non-empty values for trigger */
    countNotEmptyTrigger?: boolean | number
    /** Percentage of empty values for trigger */
    percentageEmptyTrigger?: boolean | number
    /** Percentage of non-empty values for trigger */
    percentageNotEmptyTrigger?: boolean | number
    /** Number of unique values for steps */
    countUniqueValuesSteps?: boolean | number
    /** Number of empty values for steps */
    countEmptySteps?: boolean | number
    /** Number of non-empty values for steps */
    countNotEmptySteps?: boolean | number
    /** Percentage of empty values for steps */
    percentageEmptySteps?: boolean | number
    /** Percentage of non-empty values for steps */
    percentageNotEmptySteps?: boolean | number
    /** Number of unique values for status */
    countUniqueValuesStatus?: boolean | number
    /** Number of empty values for status */
    countEmptyStatus?: boolean | number
    /** Number of non-empty values for status */
    countNotEmptyStatus?: boolean | number
    /** Percentage of empty values for status */
    percentageEmptyStatus?: boolean | number
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowVersionEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow version */
export interface WorkflowVersionGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for trigger */
    countUniqueValuesTrigger?: boolean | number
    /** Number of empty values for trigger */
    countEmptyTrigger?: boolean | number
    /** Number of non-empty values for trigger */
    countNotEmptyTrigger?: boolean | number
    /** Percentage of empty values for trigger */
    percentageEmptyTrigger?: boolean | number
    /** Percentage of non-empty values for trigger */
    percentageNotEmptyTrigger?: boolean | number
    /** Number of unique values for steps */
    countUniqueValuesSteps?: boolean | number
    /** Number of empty values for steps */
    countEmptySteps?: boolean | number
    /** Number of non-empty values for steps */
    countNotEmptySteps?: boolean | number
    /** Percentage of empty values for steps */
    percentageEmptySteps?: boolean | number
    /** Percentage of non-empty values for steps */
    percentageNotEmptySteps?: boolean | number
    /** Number of unique values for status */
    countUniqueValuesStatus?: boolean | number
    /** Number of empty values for status */
    countEmptyStatus?: boolean | number
    /** Number of non-empty values for status */
    countNotEmptyStatus?: boolean | number
    /** Percentage of empty values for status */
    percentageEmptyStatus?: boolean | number
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowVersionEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowVersionRelationInput {
/** Connect to a workflowVersion record */
connect?: (WorkflowVersionConnectInput | null),
/** Disconnect from a workflowVersion record */
disconnect?: (Scalars['Boolean'] | null)}

export interface WorkflowVersionConnectInput {
/** Find a workflowVersion record based on its unique fields: id */
where?: (WorkflowVersionWhereUniqueInput | null)}

export interface WorkflowVersionWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A workflow version */
export interface WorkflowVersionCreateInput {
/** The workflow version name */
name?: (Scalars['String'] | null),
/** Json object to provide trigger */
trigger?: (Scalars['JSON'] | null),
/** Json object to provide steps */
steps?: (Scalars['JSON'] | null),
/** The workflow version status */
status?: (WorkflowVersionStatusEnum | null),
/** Workflow version position */
position?: (Scalars['Position'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** WorkflowVersion workflow */
workflowId?: (Scalars['ID'] | null),
/** WorkflowVersion workflow */
workflow?: (WorkflowRelationInput | null)}


/** A workflow version */
export interface WorkflowVersionUpdateInput {
/** The workflow version name */
name?: (Scalars['String'] | null),
/** Json object to provide trigger */
trigger?: (Scalars['JSON'] | null),
/** Json object to provide steps */
steps?: (Scalars['JSON'] | null),
/** The workflow version status */
status?: (WorkflowVersionStatusEnum | null),
/** Workflow version position */
position?: (Scalars['Position'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** WorkflowVersion workflow */
workflowId?: (Scalars['ID'] | null),
/** WorkflowVersion workflow */
workflow?: (WorkflowRelationInput | null)}


/** A workflow version */
export interface WorkflowVersionFilterInput {
/** The workflow version name */
name?: (StringFilter | null),
/** Json object to provide trigger */
trigger?: (RawJsonFilter | null),
/** Json object to provide steps */
steps?: (RawJsonFilter | null),
/** The workflow version status */
status?: (WorkflowVersionStatusEnumFilter | null),
/** Workflow version position */
position?: (FloatFilter | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** WorkflowVersion workflow */
workflowId?: (UUIDFilter | null),and?: ((WorkflowVersionFilterInput | null)[] | null),or?: ((WorkflowVersionFilterInput | null)[] | null),not?: (WorkflowVersionFilterInput | null)}

export interface WorkflowVersionStatusEnumFilter {eq?: (WorkflowVersionStatusEnum | null),neq?: (WorkflowVersionStatusEnum | null),in?: ((WorkflowVersionStatusEnum | null)[] | null),containsAny?: ((WorkflowVersionStatusEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A workflow version */
export interface WorkflowVersionOrderByInput {
/** The workflow version name */
name?: (OrderByDirection | null),
/** Json object to provide trigger */
trigger?: (OrderByDirection | null),
/** Json object to provide steps */
steps?: (OrderByDirection | null),
/** The workflow version status */
status?: (OrderByDirection | null),
/** Workflow version position */
position?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** WorkflowVersion workflow */
workflowId?: (OrderByDirection | null)}


/** A workflow version */
export interface WorkflowVersionOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (WorkflowVersionOrderByWithGroupByAggregateInput | null),
/** The workflow version name */
name?: (OrderByDirection | null),
/** Json object to provide trigger */
trigger?: (OrderByDirection | null),
/** Json object to provide steps */
steps?: (OrderByDirection | null),
/** The workflow version status */
status?: (OrderByDirection | null),
/** Workflow version position */
position?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** WorkflowVersion workflow */
workflowId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface WorkflowVersionOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for trigger */
countUniqueValuesTrigger?: (OrderByDirection | null),
/** Number of empty values for trigger */
countEmptyTrigger?: (OrderByDirection | null),
/** Number of non-empty values for trigger */
countNotEmptyTrigger?: (OrderByDirection | null),
/** Percentage of empty values for trigger */
percentageEmptyTrigger?: (OrderByDirection | null),
/** Percentage of non-empty values for trigger */
percentageNotEmptyTrigger?: (OrderByDirection | null),
/** Number of unique values for steps */
countUniqueValuesSteps?: (OrderByDirection | null),
/** Number of empty values for steps */
countEmptySteps?: (OrderByDirection | null),
/** Number of non-empty values for steps */
countNotEmptySteps?: (OrderByDirection | null),
/** Percentage of empty values for steps */
percentageEmptySteps?: (OrderByDirection | null),
/** Percentage of non-empty values for steps */
percentageNotEmptySteps?: (OrderByDirection | null),
/** Number of unique values for status */
countUniqueValuesStatus?: (OrderByDirection | null),
/** Number of empty values for status */
countEmptyStatus?: (OrderByDirection | null),
/** Number of non-empty values for status */
countNotEmptyStatus?: (OrderByDirection | null),
/** Percentage of empty values for status */
percentageEmptyStatus?: (OrderByDirection | null),
/** Percentage of non-empty values for status */
percentageNotEmptyStatus?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** WorkflowVersion workflow */
workflowId?: (OrderByDirection | null)}


/** A workflow version */
export interface WorkflowVersionGroupByInput {
/** The workflow version name */
name?: (Scalars['Boolean'] | null),
/** Json object to provide trigger */
trigger?: (Scalars['Boolean'] | null),
/** Json object to provide steps */
steps?: (Scalars['Boolean'] | null),
/** The workflow version status */
status?: (Scalars['Boolean'] | null),
/** Workflow version position */
position?: (Scalars['Boolean'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** WorkflowVersion workflow */
workflowId?: (Scalars['Boolean'] | null)}


/** A workflow run */
export interface WorkflowRunEdgeGenqlSelection{
    node?: WorkflowRunGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow run */
export interface WorkflowRunConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for enqueuedAt */
    countUniqueValuesEnqueuedAt?: boolean | number
    /** Number of empty values for enqueuedAt */
    countEmptyEnqueuedAt?: boolean | number
    /** Number of non-empty values for enqueuedAt */
    countNotEmptyEnqueuedAt?: boolean | number
    /** Percentage of empty values for enqueuedAt */
    percentageEmptyEnqueuedAt?: boolean | number
    /** Percentage of non-empty values for enqueuedAt */
    percentageNotEmptyEnqueuedAt?: boolean | number
    /** Earliest date contained in the field enqueuedAt */
    minEnqueuedAt?: boolean | number
    /** Latest date contained in the field enqueuedAt */
    maxEnqueuedAt?: boolean | number
    /** Number of unique values for startedAt */
    countUniqueValuesStartedAt?: boolean | number
    /** Number of empty values for startedAt */
    countEmptyStartedAt?: boolean | number
    /** Number of non-empty values for startedAt */
    countNotEmptyStartedAt?: boolean | number
    /** Percentage of empty values for startedAt */
    percentageEmptyStartedAt?: boolean | number
    /** Percentage of non-empty values for startedAt */
    percentageNotEmptyStartedAt?: boolean | number
    /** Earliest date contained in the field startedAt */
    minStartedAt?: boolean | number
    /** Latest date contained in the field startedAt */
    maxStartedAt?: boolean | number
    /** Number of unique values for endedAt */
    countUniqueValuesEndedAt?: boolean | number
    /** Number of empty values for endedAt */
    countEmptyEndedAt?: boolean | number
    /** Number of non-empty values for endedAt */
    countNotEmptyEndedAt?: boolean | number
    /** Percentage of empty values for endedAt */
    percentageEmptyEndedAt?: boolean | number
    /** Percentage of non-empty values for endedAt */
    percentageNotEmptyEndedAt?: boolean | number
    /** Earliest date contained in the field endedAt */
    minEndedAt?: boolean | number
    /** Latest date contained in the field endedAt */
    maxEndedAt?: boolean | number
    /** Number of unique values for status */
    countUniqueValuesStatus?: boolean | number
    /** Number of empty values for status */
    countEmptyStatus?: boolean | number
    /** Number of non-empty values for status */
    countNotEmptyStatus?: boolean | number
    /** Percentage of empty values for status */
    percentageEmptyStatus?: boolean | number
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for state */
    countUniqueValuesState?: boolean | number
    /** Number of empty values for state */
    countEmptyState?: boolean | number
    /** Number of non-empty values for state */
    countNotEmptyState?: boolean | number
    /** Percentage of empty values for state */
    percentageEmptyState?: boolean | number
    /** Percentage of non-empty values for state */
    percentageNotEmptyState?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowRunEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow run */
export interface WorkflowRunGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for enqueuedAt */
    countUniqueValuesEnqueuedAt?: boolean | number
    /** Number of empty values for enqueuedAt */
    countEmptyEnqueuedAt?: boolean | number
    /** Number of non-empty values for enqueuedAt */
    countNotEmptyEnqueuedAt?: boolean | number
    /** Percentage of empty values for enqueuedAt */
    percentageEmptyEnqueuedAt?: boolean | number
    /** Percentage of non-empty values for enqueuedAt */
    percentageNotEmptyEnqueuedAt?: boolean | number
    /** Earliest date contained in the field enqueuedAt */
    minEnqueuedAt?: boolean | number
    /** Latest date contained in the field enqueuedAt */
    maxEnqueuedAt?: boolean | number
    /** Number of unique values for startedAt */
    countUniqueValuesStartedAt?: boolean | number
    /** Number of empty values for startedAt */
    countEmptyStartedAt?: boolean | number
    /** Number of non-empty values for startedAt */
    countNotEmptyStartedAt?: boolean | number
    /** Percentage of empty values for startedAt */
    percentageEmptyStartedAt?: boolean | number
    /** Percentage of non-empty values for startedAt */
    percentageNotEmptyStartedAt?: boolean | number
    /** Earliest date contained in the field startedAt */
    minStartedAt?: boolean | number
    /** Latest date contained in the field startedAt */
    maxStartedAt?: boolean | number
    /** Number of unique values for endedAt */
    countUniqueValuesEndedAt?: boolean | number
    /** Number of empty values for endedAt */
    countEmptyEndedAt?: boolean | number
    /** Number of non-empty values for endedAt */
    countNotEmptyEndedAt?: boolean | number
    /** Percentage of empty values for endedAt */
    percentageEmptyEndedAt?: boolean | number
    /** Percentage of non-empty values for endedAt */
    percentageNotEmptyEndedAt?: boolean | number
    /** Earliest date contained in the field endedAt */
    minEndedAt?: boolean | number
    /** Latest date contained in the field endedAt */
    maxEndedAt?: boolean | number
    /** Number of unique values for status */
    countUniqueValuesStatus?: boolean | number
    /** Number of empty values for status */
    countEmptyStatus?: boolean | number
    /** Number of non-empty values for status */
    countNotEmptyStatus?: boolean | number
    /** Percentage of empty values for status */
    percentageEmptyStatus?: boolean | number
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for state */
    countUniqueValuesState?: boolean | number
    /** Number of empty values for state */
    countEmptyState?: boolean | number
    /** Number of non-empty values for state */
    countNotEmptyState?: boolean | number
    /** Percentage of empty values for state */
    percentageEmptyState?: boolean | number
    /** Percentage of non-empty values for state */
    percentageNotEmptyState?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowRunEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowRunRelationInput {
/** Connect to a workflowRun record */
connect?: (WorkflowRunConnectInput | null),
/** Disconnect from a workflowRun record */
disconnect?: (Scalars['Boolean'] | null)}

export interface WorkflowRunConnectInput {
/** Find a workflowRun record based on its unique fields: id */
where?: (WorkflowRunWhereUniqueInput | null)}

export interface WorkflowRunWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A workflow run */
export interface WorkflowRunCreateInput {
/** Name of the workflow run */
name?: (Scalars['String'] | null),
/** Workflow run enqueued at */
enqueuedAt?: (Scalars['DateTime'] | null),
/** Workflow run started at */
startedAt?: (Scalars['DateTime'] | null),
/** Workflow run ended at */
endedAt?: (Scalars['DateTime'] | null),
/** Workflow run status */
status?: (WorkflowRunStatusEnum | null),
/** The executor of the workflow */
createdBy?: (ActorCreateInput | null),
/** State of the workflow run */
state: Scalars['JSON'],
/** Workflow run position */
position?: (Scalars['Position'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Workflow version linked to the run. */
workflowVersionId?: (Scalars['ID'] | null),
/** Workflow version linked to the run. */
workflowVersion?: (WorkflowVersionRelationInput | null),
/** Workflow linked to the run. */
workflowId?: (Scalars['ID'] | null),
/** Workflow linked to the run. */
workflow?: (WorkflowRelationInput | null)}


/** A workflow run */
export interface WorkflowRunUpdateInput {
/** Name of the workflow run */
name?: (Scalars['String'] | null),
/** Workflow run enqueued at */
enqueuedAt?: (Scalars['DateTime'] | null),
/** Workflow run started at */
startedAt?: (Scalars['DateTime'] | null),
/** Workflow run ended at */
endedAt?: (Scalars['DateTime'] | null),
/** Workflow run status */
status?: (WorkflowRunStatusEnum | null),
/** The executor of the workflow */
createdBy?: (ActorUpdateInput | null),
/** State of the workflow run */
state?: (Scalars['JSON'] | null),
/** Workflow run position */
position?: (Scalars['Position'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Workflow version linked to the run. */
workflowVersionId?: (Scalars['ID'] | null),
/** Workflow version linked to the run. */
workflowVersion?: (WorkflowVersionRelationInput | null),
/** Workflow linked to the run. */
workflowId?: (Scalars['ID'] | null),
/** Workflow linked to the run. */
workflow?: (WorkflowRelationInput | null)}


/** A workflow run */
export interface WorkflowRunFilterInput {
/** Name of the workflow run */
name?: (StringFilter | null),
/** Workflow run enqueued at */
enqueuedAt?: (DateFilter | null),
/** Workflow run started at */
startedAt?: (DateFilter | null),
/** Workflow run ended at */
endedAt?: (DateFilter | null),
/** Workflow run status */
status?: (WorkflowRunStatusEnumFilter | null),
/** The executor of the workflow */
createdBy?: (ActorFilterInput | null),
/** State of the workflow run */
state?: (RawJsonFilter | null),
/** Workflow run position */
position?: (FloatFilter | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Workflow version linked to the run. */
workflowVersionId?: (UUIDFilter | null),
/** Workflow linked to the run. */
workflowId?: (UUIDFilter | null),and?: ((WorkflowRunFilterInput | null)[] | null),or?: ((WorkflowRunFilterInput | null)[] | null),not?: (WorkflowRunFilterInput | null)}

export interface WorkflowRunStatusEnumFilter {eq?: (WorkflowRunStatusEnum | null),neq?: (WorkflowRunStatusEnum | null),in?: ((WorkflowRunStatusEnum | null)[] | null),containsAny?: ((WorkflowRunStatusEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A workflow run */
export interface WorkflowRunOrderByInput {
/** Name of the workflow run */
name?: (OrderByDirection | null),
/** Workflow run enqueued at */
enqueuedAt?: (OrderByDirection | null),
/** Workflow run started at */
startedAt?: (OrderByDirection | null),
/** Workflow run ended at */
endedAt?: (OrderByDirection | null),
/** Workflow run status */
status?: (OrderByDirection | null),
/** The executor of the workflow */
createdBy?: (ActorOrderByInput | null),
/** State of the workflow run */
state?: (OrderByDirection | null),
/** Workflow run position */
position?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Workflow version linked to the run. */
workflowVersionId?: (OrderByDirection | null),
/** Workflow linked to the run. */
workflowId?: (OrderByDirection | null)}


/** A workflow run */
export interface WorkflowRunOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (WorkflowRunOrderByWithGroupByAggregateInput | null),
/** Name of the workflow run */
name?: (OrderByDirection | null),
/** Workflow run enqueued at */
enqueuedAt?: (OrderByDateGranularityInput | null),
/** Workflow run started at */
startedAt?: (OrderByDateGranularityInput | null),
/** Workflow run ended at */
endedAt?: (OrderByDateGranularityInput | null),
/** Workflow run status */
status?: (OrderByDirection | null),
/** The executor of the workflow */
createdBy?: (ActorOrderByInput | null),
/** State of the workflow run */
state?: (OrderByDirection | null),
/** Workflow run position */
position?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Workflow version linked to the run. */
workflowVersionId?: (OrderByDirection | null),
/** Workflow linked to the run. */
workflowId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface WorkflowRunOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for enqueuedAt */
countUniqueValuesEnqueuedAt?: (OrderByDirection | null),
/** Number of empty values for enqueuedAt */
countEmptyEnqueuedAt?: (OrderByDirection | null),
/** Number of non-empty values for enqueuedAt */
countNotEmptyEnqueuedAt?: (OrderByDirection | null),
/** Percentage of empty values for enqueuedAt */
percentageEmptyEnqueuedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for enqueuedAt */
percentageNotEmptyEnqueuedAt?: (OrderByDirection | null),
/** Earliest date contained in the field enqueuedAt */
minEnqueuedAt?: (OrderByDirection | null),
/** Latest date contained in the field enqueuedAt */
maxEnqueuedAt?: (OrderByDirection | null),
/** Number of unique values for startedAt */
countUniqueValuesStartedAt?: (OrderByDirection | null),
/** Number of empty values for startedAt */
countEmptyStartedAt?: (OrderByDirection | null),
/** Number of non-empty values for startedAt */
countNotEmptyStartedAt?: (OrderByDirection | null),
/** Percentage of empty values for startedAt */
percentageEmptyStartedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for startedAt */
percentageNotEmptyStartedAt?: (OrderByDirection | null),
/** Earliest date contained in the field startedAt */
minStartedAt?: (OrderByDirection | null),
/** Latest date contained in the field startedAt */
maxStartedAt?: (OrderByDirection | null),
/** Number of unique values for endedAt */
countUniqueValuesEndedAt?: (OrderByDirection | null),
/** Number of empty values for endedAt */
countEmptyEndedAt?: (OrderByDirection | null),
/** Number of non-empty values for endedAt */
countNotEmptyEndedAt?: (OrderByDirection | null),
/** Percentage of empty values for endedAt */
percentageEmptyEndedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for endedAt */
percentageNotEmptyEndedAt?: (OrderByDirection | null),
/** Earliest date contained in the field endedAt */
minEndedAt?: (OrderByDirection | null),
/** Latest date contained in the field endedAt */
maxEndedAt?: (OrderByDirection | null),
/** Number of unique values for status */
countUniqueValuesStatus?: (OrderByDirection | null),
/** Number of empty values for status */
countEmptyStatus?: (OrderByDirection | null),
/** Number of non-empty values for status */
countNotEmptyStatus?: (OrderByDirection | null),
/** Percentage of empty values for status */
percentageEmptyStatus?: (OrderByDirection | null),
/** Percentage of non-empty values for status */
percentageNotEmptyStatus?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for state */
countUniqueValuesState?: (OrderByDirection | null),
/** Number of empty values for state */
countEmptyState?: (OrderByDirection | null),
/** Number of non-empty values for state */
countNotEmptyState?: (OrderByDirection | null),
/** Percentage of empty values for state */
percentageEmptyState?: (OrderByDirection | null),
/** Percentage of non-empty values for state */
percentageNotEmptyState?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Workflow version linked to the run. */
workflowVersionId?: (OrderByDirection | null),
/** Workflow linked to the run. */
workflowId?: (OrderByDirection | null)}


/** A workflow run */
export interface WorkflowRunGroupByInput {
/** Name of the workflow run */
name?: (Scalars['Boolean'] | null),
/** Workflow run enqueued at */
enqueuedAt?: (GroupByDateGranularityInput | null),
/** Workflow run started at */
startedAt?: (GroupByDateGranularityInput | null),
/** Workflow run ended at */
endedAt?: (GroupByDateGranularityInput | null),
/** Workflow run status */
status?: (Scalars['Boolean'] | null),
/** The executor of the workflow */
createdBy?: (ActorGroupByInput | null),
/** State of the workflow run */
state?: (Scalars['Boolean'] | null),
/** Workflow run position */
position?: (Scalars['Boolean'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Workflow version linked to the run. */
workflowVersionId?: (Scalars['Boolean'] | null),
/** Workflow linked to the run. */
workflowId?: (Scalars['Boolean'] | null)}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerGenqlSelection{
    /** The workflow automated trigger type */
    type?: boolean | number
    /** The workflow automated trigger settings */
    settings?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** WorkflowAutomatedTrigger workflow */
    workflowId?: boolean | number
    /** WorkflowAutomatedTrigger workflow */
    workflow?: WorkflowGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerEdgeGenqlSelection{
    node?: WorkflowAutomatedTriggerGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for settings */
    countUniqueValuesSettings?: boolean | number
    /** Number of empty values for settings */
    countEmptySettings?: boolean | number
    /** Number of non-empty values for settings */
    countNotEmptySettings?: boolean | number
    /** Percentage of empty values for settings */
    percentageEmptySettings?: boolean | number
    /** Percentage of non-empty values for settings */
    percentageNotEmptySettings?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowAutomatedTriggerEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for settings */
    countUniqueValuesSettings?: boolean | number
    /** Number of empty values for settings */
    countEmptySettings?: boolean | number
    /** Number of non-empty values for settings */
    countNotEmptySettings?: boolean | number
    /** Percentage of empty values for settings */
    percentageEmptySettings?: boolean | number
    /** Percentage of non-empty values for settings */
    percentageNotEmptySettings?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkflowAutomatedTriggerEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkflowAutomatedTriggerRelationInput {
/** Connect to a workflowAutomatedTrigger record */
connect?: (WorkflowAutomatedTriggerConnectInput | null),
/** Disconnect from a workflowAutomatedTrigger record */
disconnect?: (Scalars['Boolean'] | null)}

export interface WorkflowAutomatedTriggerConnectInput {
/** Find a workflowAutomatedTrigger record based on its unique fields: id */
where?: (WorkflowAutomatedTriggerWhereUniqueInput | null)}

export interface WorkflowAutomatedTriggerWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerCreateInput {
/** The workflow automated trigger type */
type: WorkflowAutomatedTriggerTypeEnum,
/** The workflow automated trigger settings */
settings: Scalars['JSON'],
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** WorkflowAutomatedTrigger workflow */
workflowId?: (Scalars['ID'] | null),
/** WorkflowAutomatedTrigger workflow */
workflow?: (WorkflowRelationInput | null)}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerUpdateInput {
/** The workflow automated trigger type */
type?: (WorkflowAutomatedTriggerTypeEnum | null),
/** The workflow automated trigger settings */
settings?: (Scalars['JSON'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** WorkflowAutomatedTrigger workflow */
workflowId?: (Scalars['ID'] | null),
/** WorkflowAutomatedTrigger workflow */
workflow?: (WorkflowRelationInput | null)}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerFilterInput {
/** The workflow automated trigger type */
type?: (WorkflowAutomatedTriggerTypeEnumFilter | null),
/** The workflow automated trigger settings */
settings?: (RawJsonFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** WorkflowAutomatedTrigger workflow */
workflowId?: (UUIDFilter | null),and?: ((WorkflowAutomatedTriggerFilterInput | null)[] | null),or?: ((WorkflowAutomatedTriggerFilterInput | null)[] | null),not?: (WorkflowAutomatedTriggerFilterInput | null)}

export interface WorkflowAutomatedTriggerTypeEnumFilter {eq?: (WorkflowAutomatedTriggerTypeEnum | null),neq?: (WorkflowAutomatedTriggerTypeEnum | null),in?: ((WorkflowAutomatedTriggerTypeEnum | null)[] | null),containsAny?: ((WorkflowAutomatedTriggerTypeEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerOrderByInput {
/** The workflow automated trigger type */
type?: (OrderByDirection | null),
/** The workflow automated trigger settings */
settings?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** WorkflowAutomatedTrigger workflow */
workflowId?: (OrderByDirection | null)}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (WorkflowAutomatedTriggerOrderByWithGroupByAggregateInput | null),
/** The workflow automated trigger type */
type?: (OrderByDirection | null),
/** The workflow automated trigger settings */
settings?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** WorkflowAutomatedTrigger workflow */
workflowId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface WorkflowAutomatedTriggerOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for type */
countUniqueValuesType?: (OrderByDirection | null),
/** Number of empty values for type */
countEmptyType?: (OrderByDirection | null),
/** Number of non-empty values for type */
countNotEmptyType?: (OrderByDirection | null),
/** Percentage of empty values for type */
percentageEmptyType?: (OrderByDirection | null),
/** Percentage of non-empty values for type */
percentageNotEmptyType?: (OrderByDirection | null),
/** Number of unique values for settings */
countUniqueValuesSettings?: (OrderByDirection | null),
/** Number of empty values for settings */
countEmptySettings?: (OrderByDirection | null),
/** Number of non-empty values for settings */
countNotEmptySettings?: (OrderByDirection | null),
/** Percentage of empty values for settings */
percentageEmptySettings?: (OrderByDirection | null),
/** Percentage of non-empty values for settings */
percentageNotEmptySettings?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** WorkflowAutomatedTrigger workflow */
workflowId?: (OrderByDirection | null)}


/** A workflow automated trigger */
export interface WorkflowAutomatedTriggerGroupByInput {
/** The workflow automated trigger type */
type?: (Scalars['Boolean'] | null),
/** The workflow automated trigger settings */
settings?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** WorkflowAutomatedTrigger workflow */
workflowId?: (Scalars['Boolean'] | null)}


/** A workspace member */
export interface WorkspaceMemberEdgeGenqlSelection{
    node?: WorkspaceMemberGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workspace member */
export interface WorkspaceMemberConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for colorScheme */
    countUniqueValuesColorScheme?: boolean | number
    /** Number of empty values for colorScheme */
    countEmptyColorScheme?: boolean | number
    /** Number of non-empty values for colorScheme */
    countNotEmptyColorScheme?: boolean | number
    /** Percentage of empty values for colorScheme */
    percentageEmptyColorScheme?: boolean | number
    /** Percentage of non-empty values for colorScheme */
    percentageNotEmptyColorScheme?: boolean | number
    /** Number of unique values for locale */
    countUniqueValuesLocale?: boolean | number
    /** Number of empty values for locale */
    countEmptyLocale?: boolean | number
    /** Number of non-empty values for locale */
    countNotEmptyLocale?: boolean | number
    /** Percentage of empty values for locale */
    percentageEmptyLocale?: boolean | number
    /** Percentage of non-empty values for locale */
    percentageNotEmptyLocale?: boolean | number
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: boolean | number
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: boolean | number
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: boolean | number
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: boolean | number
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: boolean | number
    /** Number of unique values for userEmail */
    countUniqueValuesUserEmail?: boolean | number
    /** Number of empty values for userEmail */
    countEmptyUserEmail?: boolean | number
    /** Number of non-empty values for userEmail */
    countNotEmptyUserEmail?: boolean | number
    /** Percentage of empty values for userEmail */
    percentageEmptyUserEmail?: boolean | number
    /** Percentage of non-empty values for userEmail */
    percentageNotEmptyUserEmail?: boolean | number
    /** Number of unique values for calendarStartDay */
    countUniqueValuesCalendarStartDay?: boolean | number
    /** Number of empty values for calendarStartDay */
    countEmptyCalendarStartDay?: boolean | number
    /** Number of non-empty values for calendarStartDay */
    countNotEmptyCalendarStartDay?: boolean | number
    /** Percentage of empty values for calendarStartDay */
    percentageEmptyCalendarStartDay?: boolean | number
    /** Percentage of non-empty values for calendarStartDay */
    percentageNotEmptyCalendarStartDay?: boolean | number
    /** Minimum amount contained in the field calendarStartDay */
    minCalendarStartDay?: boolean | number
    /** Maximum amount contained in the field calendarStartDay */
    maxCalendarStartDay?: boolean | number
    /** Average amount contained in the field calendarStartDay */
    avgCalendarStartDay?: boolean | number
    /** Sum of amounts contained in the field calendarStartDay */
    sumCalendarStartDay?: boolean | number
    /** Number of unique values for userId */
    countUniqueValuesUserId?: boolean | number
    /** Number of empty values for userId */
    countEmptyUserId?: boolean | number
    /** Number of non-empty values for userId */
    countNotEmptyUserId?: boolean | number
    /** Percentage of empty values for userId */
    percentageEmptyUserId?: boolean | number
    /** Percentage of non-empty values for userId */
    percentageNotEmptyUserId?: boolean | number
    /** Number of unique values for timeZone */
    countUniqueValuesTimeZone?: boolean | number
    /** Number of empty values for timeZone */
    countEmptyTimeZone?: boolean | number
    /** Number of non-empty values for timeZone */
    countNotEmptyTimeZone?: boolean | number
    /** Percentage of empty values for timeZone */
    percentageEmptyTimeZone?: boolean | number
    /** Percentage of non-empty values for timeZone */
    percentageNotEmptyTimeZone?: boolean | number
    /** Number of unique values for dateFormat */
    countUniqueValuesDateFormat?: boolean | number
    /** Number of empty values for dateFormat */
    countEmptyDateFormat?: boolean | number
    /** Number of non-empty values for dateFormat */
    countNotEmptyDateFormat?: boolean | number
    /** Percentage of empty values for dateFormat */
    percentageEmptyDateFormat?: boolean | number
    /** Percentage of non-empty values for dateFormat */
    percentageNotEmptyDateFormat?: boolean | number
    /** Number of unique values for timeFormat */
    countUniqueValuesTimeFormat?: boolean | number
    /** Number of empty values for timeFormat */
    countEmptyTimeFormat?: boolean | number
    /** Number of non-empty values for timeFormat */
    countNotEmptyTimeFormat?: boolean | number
    /** Percentage of empty values for timeFormat */
    percentageEmptyTimeFormat?: boolean | number
    /** Percentage of non-empty values for timeFormat */
    percentageNotEmptyTimeFormat?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for numberFormat */
    countUniqueValuesNumberFormat?: boolean | number
    /** Number of empty values for numberFormat */
    countEmptyNumberFormat?: boolean | number
    /** Number of non-empty values for numberFormat */
    countNotEmptyNumberFormat?: boolean | number
    /** Percentage of empty values for numberFormat */
    percentageEmptyNumberFormat?: boolean | number
    /** Percentage of non-empty values for numberFormat */
    percentageNotEmptyNumberFormat?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkspaceMemberEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A workspace member */
export interface WorkspaceMemberGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for colorScheme */
    countUniqueValuesColorScheme?: boolean | number
    /** Number of empty values for colorScheme */
    countEmptyColorScheme?: boolean | number
    /** Number of non-empty values for colorScheme */
    countNotEmptyColorScheme?: boolean | number
    /** Percentage of empty values for colorScheme */
    percentageEmptyColorScheme?: boolean | number
    /** Percentage of non-empty values for colorScheme */
    percentageNotEmptyColorScheme?: boolean | number
    /** Number of unique values for locale */
    countUniqueValuesLocale?: boolean | number
    /** Number of empty values for locale */
    countEmptyLocale?: boolean | number
    /** Number of non-empty values for locale */
    countNotEmptyLocale?: boolean | number
    /** Percentage of empty values for locale */
    percentageEmptyLocale?: boolean | number
    /** Percentage of non-empty values for locale */
    percentageNotEmptyLocale?: boolean | number
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: boolean | number
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: boolean | number
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: boolean | number
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: boolean | number
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: boolean | number
    /** Number of unique values for userEmail */
    countUniqueValuesUserEmail?: boolean | number
    /** Number of empty values for userEmail */
    countEmptyUserEmail?: boolean | number
    /** Number of non-empty values for userEmail */
    countNotEmptyUserEmail?: boolean | number
    /** Percentage of empty values for userEmail */
    percentageEmptyUserEmail?: boolean | number
    /** Percentage of non-empty values for userEmail */
    percentageNotEmptyUserEmail?: boolean | number
    /** Number of unique values for calendarStartDay */
    countUniqueValuesCalendarStartDay?: boolean | number
    /** Number of empty values for calendarStartDay */
    countEmptyCalendarStartDay?: boolean | number
    /** Number of non-empty values for calendarStartDay */
    countNotEmptyCalendarStartDay?: boolean | number
    /** Percentage of empty values for calendarStartDay */
    percentageEmptyCalendarStartDay?: boolean | number
    /** Percentage of non-empty values for calendarStartDay */
    percentageNotEmptyCalendarStartDay?: boolean | number
    /** Minimum amount contained in the field calendarStartDay */
    minCalendarStartDay?: boolean | number
    /** Maximum amount contained in the field calendarStartDay */
    maxCalendarStartDay?: boolean | number
    /** Average amount contained in the field calendarStartDay */
    avgCalendarStartDay?: boolean | number
    /** Sum of amounts contained in the field calendarStartDay */
    sumCalendarStartDay?: boolean | number
    /** Number of unique values for userId */
    countUniqueValuesUserId?: boolean | number
    /** Number of empty values for userId */
    countEmptyUserId?: boolean | number
    /** Number of non-empty values for userId */
    countNotEmptyUserId?: boolean | number
    /** Percentage of empty values for userId */
    percentageEmptyUserId?: boolean | number
    /** Percentage of non-empty values for userId */
    percentageNotEmptyUserId?: boolean | number
    /** Number of unique values for timeZone */
    countUniqueValuesTimeZone?: boolean | number
    /** Number of empty values for timeZone */
    countEmptyTimeZone?: boolean | number
    /** Number of non-empty values for timeZone */
    countNotEmptyTimeZone?: boolean | number
    /** Percentage of empty values for timeZone */
    percentageEmptyTimeZone?: boolean | number
    /** Percentage of non-empty values for timeZone */
    percentageNotEmptyTimeZone?: boolean | number
    /** Number of unique values for dateFormat */
    countUniqueValuesDateFormat?: boolean | number
    /** Number of empty values for dateFormat */
    countEmptyDateFormat?: boolean | number
    /** Number of non-empty values for dateFormat */
    countNotEmptyDateFormat?: boolean | number
    /** Percentage of empty values for dateFormat */
    percentageEmptyDateFormat?: boolean | number
    /** Percentage of non-empty values for dateFormat */
    percentageNotEmptyDateFormat?: boolean | number
    /** Number of unique values for timeFormat */
    countUniqueValuesTimeFormat?: boolean | number
    /** Number of empty values for timeFormat */
    countEmptyTimeFormat?: boolean | number
    /** Number of non-empty values for timeFormat */
    countNotEmptyTimeFormat?: boolean | number
    /** Percentage of empty values for timeFormat */
    percentageEmptyTimeFormat?: boolean | number
    /** Percentage of non-empty values for timeFormat */
    percentageNotEmptyTimeFormat?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for numberFormat */
    countUniqueValuesNumberFormat?: boolean | number
    /** Number of empty values for numberFormat */
    countEmptyNumberFormat?: boolean | number
    /** Number of non-empty values for numberFormat */
    countNotEmptyNumberFormat?: boolean | number
    /** Percentage of empty values for numberFormat */
    percentageEmptyNumberFormat?: boolean | number
    /** Percentage of non-empty values for numberFormat */
    percentageNotEmptyNumberFormat?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: WorkspaceMemberEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface WorkspaceMemberRelationInput {
/** Connect to a workspaceMember record */
connect?: (WorkspaceMemberConnectInput | null),
/** Disconnect from a workspaceMember record */
disconnect?: (Scalars['Boolean'] | null)}

export interface WorkspaceMemberConnectInput {
/** Find a workspaceMember record based on its unique fields: id or userEmail */
where?: (WorkspaceMemberWhereUniqueInput | null)}

export interface WorkspaceMemberWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null),
/** Connect by User Email */
userEmail?: (Scalars['String'] | null)}


/** A workspace member */
export interface WorkspaceMemberCreateInput {
/** Workspace member position */
position?: (Scalars['Position'] | null),
/** Workspace member name */
name?: (FullNameCreateInput | null),
/** Preferred color scheme */
colorScheme?: (Scalars['String'] | null),
/** Preferred language */
locale?: (Scalars['String'] | null),
/** Workspace member avatar */
avatarUrl?: (Scalars['String'] | null),
/** Related user email address */
userEmail?: (Scalars['String'] | null),
/** User's preferred start day of the week */
calendarStartDay?: (Scalars['Int'] | null),
/** Associated User Id */
userId: Scalars['UUID'],
/** User time zone */
timeZone?: (Scalars['String'] | null),
/** User's preferred date format */
dateFormat?: (WorkspaceMemberDateFormatEnum | null),
/** User's preferred time format */
timeFormat?: (WorkspaceMemberTimeFormatEnum | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** User's preferred number format */
numberFormat?: (WorkspaceMemberNumberFormatEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A workspace member */
export interface WorkspaceMemberUpdateInput {
/** Workspace member position */
position?: (Scalars['Position'] | null),
/** Workspace member name */
name?: (FullNameUpdateInput | null),
/** Preferred color scheme */
colorScheme?: (Scalars['String'] | null),
/** Preferred language */
locale?: (Scalars['String'] | null),
/** Workspace member avatar */
avatarUrl?: (Scalars['String'] | null),
/** Related user email address */
userEmail?: (Scalars['String'] | null),
/** User's preferred start day of the week */
calendarStartDay?: (Scalars['Int'] | null),
/** Associated User Id */
userId?: (Scalars['UUID'] | null),
/** User time zone */
timeZone?: (Scalars['String'] | null),
/** User's preferred date format */
dateFormat?: (WorkspaceMemberDateFormatEnum | null),
/** User's preferred time format */
timeFormat?: (WorkspaceMemberTimeFormatEnum | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** User's preferred number format */
numberFormat?: (WorkspaceMemberNumberFormatEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A workspace member */
export interface WorkspaceMemberFilterInput {
/** Workspace member position */
position?: (FloatFilter | null),
/** Workspace member name */
name?: (FullNameFilterInput | null),
/** Preferred color scheme */
colorScheme?: (StringFilter | null),
/** Preferred language */
locale?: (StringFilter | null),
/** Workspace member avatar */
avatarUrl?: (StringFilter | null),
/** Related user email address */
userEmail?: (StringFilter | null),
/** User's preferred start day of the week */
calendarStartDay?: (IntFilter | null),
/** Associated User Id */
userId?: (UUIDFilter | null),
/** User time zone */
timeZone?: (StringFilter | null),
/** User's preferred date format */
dateFormat?: (WorkspaceMemberDateFormatEnumFilter | null),
/** User's preferred time format */
timeFormat?: (WorkspaceMemberTimeFormatEnumFilter | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** User's preferred number format */
numberFormat?: (WorkspaceMemberNumberFormatEnumFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((WorkspaceMemberFilterInput | null)[] | null),or?: ((WorkspaceMemberFilterInput | null)[] | null),not?: (WorkspaceMemberFilterInput | null)}

export interface IntFilter {eq?: (Scalars['Int'] | null),gt?: (Scalars['Int'] | null),gte?: (Scalars['Int'] | null),in?: (Scalars['Int'][] | null),lt?: (Scalars['Int'] | null),lte?: (Scalars['Int'] | null),neq?: (Scalars['Int'] | null),is?: (FilterIs | null)}

export interface WorkspaceMemberDateFormatEnumFilter {eq?: (WorkspaceMemberDateFormatEnum | null),neq?: (WorkspaceMemberDateFormatEnum | null),in?: ((WorkspaceMemberDateFormatEnum | null)[] | null),containsAny?: ((WorkspaceMemberDateFormatEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface WorkspaceMemberTimeFormatEnumFilter {eq?: (WorkspaceMemberTimeFormatEnum | null),neq?: (WorkspaceMemberTimeFormatEnum | null),in?: ((WorkspaceMemberTimeFormatEnum | null)[] | null),containsAny?: ((WorkspaceMemberTimeFormatEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface WorkspaceMemberNumberFormatEnumFilter {eq?: (WorkspaceMemberNumberFormatEnum | null),neq?: (WorkspaceMemberNumberFormatEnum | null),in?: ((WorkspaceMemberNumberFormatEnum | null)[] | null),containsAny?: ((WorkspaceMemberNumberFormatEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A workspace member */
export interface WorkspaceMemberOrderByInput {
/** Workspace member position */
position?: (OrderByDirection | null),
/** Workspace member name */
name?: (FullNameOrderByInput | null),
/** Preferred color scheme */
colorScheme?: (OrderByDirection | null),
/** Preferred language */
locale?: (OrderByDirection | null),
/** Workspace member avatar */
avatarUrl?: (OrderByDirection | null),
/** Related user email address */
userEmail?: (OrderByDirection | null),
/** User's preferred start day of the week */
calendarStartDay?: (OrderByDirection | null),
/** Associated User Id */
userId?: (OrderByDirection | null),
/** User time zone */
timeZone?: (OrderByDirection | null),
/** User's preferred date format */
dateFormat?: (OrderByDirection | null),
/** User's preferred time format */
timeFormat?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** User's preferred number format */
numberFormat?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** A workspace member */
export interface WorkspaceMemberOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (WorkspaceMemberOrderByWithGroupByAggregateInput | null),
/** Workspace member position */
position?: (OrderByDirection | null),
/** Workspace member name */
name?: (FullNameOrderByInput | null),
/** Preferred color scheme */
colorScheme?: (OrderByDirection | null),
/** Preferred language */
locale?: (OrderByDirection | null),
/** Workspace member avatar */
avatarUrl?: (OrderByDirection | null),
/** Related user email address */
userEmail?: (OrderByDirection | null),
/** User's preferred start day of the week */
calendarStartDay?: (OrderByDirection | null),
/** Associated User Id */
userId?: (OrderByDirection | null),
/** User time zone */
timeZone?: (OrderByDirection | null),
/** User's preferred date format */
dateFormat?: (OrderByDirection | null),
/** User's preferred time format */
timeFormat?: (OrderByDirection | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** User's preferred number format */
numberFormat?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface WorkspaceMemberOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for colorScheme */
countUniqueValuesColorScheme?: (OrderByDirection | null),
/** Number of empty values for colorScheme */
countEmptyColorScheme?: (OrderByDirection | null),
/** Number of non-empty values for colorScheme */
countNotEmptyColorScheme?: (OrderByDirection | null),
/** Percentage of empty values for colorScheme */
percentageEmptyColorScheme?: (OrderByDirection | null),
/** Percentage of non-empty values for colorScheme */
percentageNotEmptyColorScheme?: (OrderByDirection | null),
/** Number of unique values for locale */
countUniqueValuesLocale?: (OrderByDirection | null),
/** Number of empty values for locale */
countEmptyLocale?: (OrderByDirection | null),
/** Number of non-empty values for locale */
countNotEmptyLocale?: (OrderByDirection | null),
/** Percentage of empty values for locale */
percentageEmptyLocale?: (OrderByDirection | null),
/** Percentage of non-empty values for locale */
percentageNotEmptyLocale?: (OrderByDirection | null),
/** Number of unique values for avatarUrl */
countUniqueValuesAvatarUrl?: (OrderByDirection | null),
/** Number of empty values for avatarUrl */
countEmptyAvatarUrl?: (OrderByDirection | null),
/** Number of non-empty values for avatarUrl */
countNotEmptyAvatarUrl?: (OrderByDirection | null),
/** Percentage of empty values for avatarUrl */
percentageEmptyAvatarUrl?: (OrderByDirection | null),
/** Percentage of non-empty values for avatarUrl */
percentageNotEmptyAvatarUrl?: (OrderByDirection | null),
/** Number of unique values for userEmail */
countUniqueValuesUserEmail?: (OrderByDirection | null),
/** Number of empty values for userEmail */
countEmptyUserEmail?: (OrderByDirection | null),
/** Number of non-empty values for userEmail */
countNotEmptyUserEmail?: (OrderByDirection | null),
/** Percentage of empty values for userEmail */
percentageEmptyUserEmail?: (OrderByDirection | null),
/** Percentage of non-empty values for userEmail */
percentageNotEmptyUserEmail?: (OrderByDirection | null),
/** Number of unique values for calendarStartDay */
countUniqueValuesCalendarStartDay?: (OrderByDirection | null),
/** Number of empty values for calendarStartDay */
countEmptyCalendarStartDay?: (OrderByDirection | null),
/** Number of non-empty values for calendarStartDay */
countNotEmptyCalendarStartDay?: (OrderByDirection | null),
/** Percentage of empty values for calendarStartDay */
percentageEmptyCalendarStartDay?: (OrderByDirection | null),
/** Percentage of non-empty values for calendarStartDay */
percentageNotEmptyCalendarStartDay?: (OrderByDirection | null),
/** Minimum amount contained in the field calendarStartDay */
minCalendarStartDay?: (OrderByDirection | null),
/** Maximum amount contained in the field calendarStartDay */
maxCalendarStartDay?: (OrderByDirection | null),
/** Average amount contained in the field calendarStartDay */
avgCalendarStartDay?: (OrderByDirection | null),
/** Sum of amounts contained in the field calendarStartDay */
sumCalendarStartDay?: (OrderByDirection | null),
/** Number of unique values for userId */
countUniqueValuesUserId?: (OrderByDirection | null),
/** Number of empty values for userId */
countEmptyUserId?: (OrderByDirection | null),
/** Number of non-empty values for userId */
countNotEmptyUserId?: (OrderByDirection | null),
/** Percentage of empty values for userId */
percentageEmptyUserId?: (OrderByDirection | null),
/** Percentage of non-empty values for userId */
percentageNotEmptyUserId?: (OrderByDirection | null),
/** Number of unique values for timeZone */
countUniqueValuesTimeZone?: (OrderByDirection | null),
/** Number of empty values for timeZone */
countEmptyTimeZone?: (OrderByDirection | null),
/** Number of non-empty values for timeZone */
countNotEmptyTimeZone?: (OrderByDirection | null),
/** Percentage of empty values for timeZone */
percentageEmptyTimeZone?: (OrderByDirection | null),
/** Percentage of non-empty values for timeZone */
percentageNotEmptyTimeZone?: (OrderByDirection | null),
/** Number of unique values for dateFormat */
countUniqueValuesDateFormat?: (OrderByDirection | null),
/** Number of empty values for dateFormat */
countEmptyDateFormat?: (OrderByDirection | null),
/** Number of non-empty values for dateFormat */
countNotEmptyDateFormat?: (OrderByDirection | null),
/** Percentage of empty values for dateFormat */
percentageEmptyDateFormat?: (OrderByDirection | null),
/** Percentage of non-empty values for dateFormat */
percentageNotEmptyDateFormat?: (OrderByDirection | null),
/** Number of unique values for timeFormat */
countUniqueValuesTimeFormat?: (OrderByDirection | null),
/** Number of empty values for timeFormat */
countEmptyTimeFormat?: (OrderByDirection | null),
/** Number of non-empty values for timeFormat */
countNotEmptyTimeFormat?: (OrderByDirection | null),
/** Percentage of empty values for timeFormat */
percentageEmptyTimeFormat?: (OrderByDirection | null),
/** Percentage of non-empty values for timeFormat */
percentageNotEmptyTimeFormat?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for numberFormat */
countUniqueValuesNumberFormat?: (OrderByDirection | null),
/** Number of empty values for numberFormat */
countEmptyNumberFormat?: (OrderByDirection | null),
/** Number of non-empty values for numberFormat */
countNotEmptyNumberFormat?: (OrderByDirection | null),
/** Percentage of empty values for numberFormat */
percentageEmptyNumberFormat?: (OrderByDirection | null),
/** Percentage of non-empty values for numberFormat */
percentageNotEmptyNumberFormat?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** A workspace member */
export interface WorkspaceMemberGroupByInput {
/** Workspace member position */
position?: (Scalars['Boolean'] | null),
/** Workspace member name */
name?: (FullNameGroupByInput | null),
/** Preferred color scheme */
colorScheme?: (Scalars['Boolean'] | null),
/** Preferred language */
locale?: (Scalars['Boolean'] | null),
/** Workspace member avatar */
avatarUrl?: (Scalars['Boolean'] | null),
/** Related user email address */
userEmail?: (Scalars['Boolean'] | null),
/** User's preferred start day of the week */
calendarStartDay?: (Scalars['Boolean'] | null),
/** Associated User Id */
userId?: (Scalars['Boolean'] | null),
/** User time zone */
timeZone?: (Scalars['Boolean'] | null),
/** User's preferred date format */
dateFormat?: (Scalars['Boolean'] | null),
/** User's preferred time format */
timeFormat?: (Scalars['Boolean'] | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** User's preferred number format */
numberFormat?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageGenqlSelection{
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Message id from the message header */
    headerMessageId?: boolean | number
    /** Subject */
    subject?: boolean | number
    /** Text */
    text?: boolean | number
    /** The date the message was received */
    receivedAt?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Message Thread Id */
    messageThreadId?: boolean | number
    /** Message Thread Id */
    messageThread?: MessageThreadGenqlSelection
    /** Message Participants */
    messageParticipants?: (MessageParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageParticipantFilterInput | null), orderBy?: ((MessageParticipantOrderByInput | null)[] | null)} })
    /** Messages from the channel. */
    messageChannelMessageAssociations?: (MessageChannelMessageAssociationConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageChannelMessageAssociationFilterInput | null), orderBy?: ((MessageChannelMessageAssociationOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageEdgeGenqlSelection{
    node?: MessageGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for headerMessageId */
    countUniqueValuesHeaderMessageId?: boolean | number
    /** Number of empty values for headerMessageId */
    countEmptyHeaderMessageId?: boolean | number
    /** Number of non-empty values for headerMessageId */
    countNotEmptyHeaderMessageId?: boolean | number
    /** Percentage of empty values for headerMessageId */
    percentageEmptyHeaderMessageId?: boolean | number
    /** Percentage of non-empty values for headerMessageId */
    percentageNotEmptyHeaderMessageId?: boolean | number
    /** Number of unique values for subject */
    countUniqueValuesSubject?: boolean | number
    /** Number of empty values for subject */
    countEmptySubject?: boolean | number
    /** Number of non-empty values for subject */
    countNotEmptySubject?: boolean | number
    /** Percentage of empty values for subject */
    percentageEmptySubject?: boolean | number
    /** Percentage of non-empty values for subject */
    percentageNotEmptySubject?: boolean | number
    /** Number of unique values for text */
    countUniqueValuesText?: boolean | number
    /** Number of empty values for text */
    countEmptyText?: boolean | number
    /** Number of non-empty values for text */
    countNotEmptyText?: boolean | number
    /** Percentage of empty values for text */
    percentageEmptyText?: boolean | number
    /** Percentage of non-empty values for text */
    percentageNotEmptyText?: boolean | number
    /** Number of unique values for receivedAt */
    countUniqueValuesReceivedAt?: boolean | number
    /** Number of empty values for receivedAt */
    countEmptyReceivedAt?: boolean | number
    /** Number of non-empty values for receivedAt */
    countNotEmptyReceivedAt?: boolean | number
    /** Percentage of empty values for receivedAt */
    percentageEmptyReceivedAt?: boolean | number
    /** Percentage of non-empty values for receivedAt */
    percentageNotEmptyReceivedAt?: boolean | number
    /** Earliest date contained in the field receivedAt */
    minReceivedAt?: boolean | number
    /** Latest date contained in the field receivedAt */
    maxReceivedAt?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    edges?: MessageEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for headerMessageId */
    countUniqueValuesHeaderMessageId?: boolean | number
    /** Number of empty values for headerMessageId */
    countEmptyHeaderMessageId?: boolean | number
    /** Number of non-empty values for headerMessageId */
    countNotEmptyHeaderMessageId?: boolean | number
    /** Percentage of empty values for headerMessageId */
    percentageEmptyHeaderMessageId?: boolean | number
    /** Percentage of non-empty values for headerMessageId */
    percentageNotEmptyHeaderMessageId?: boolean | number
    /** Number of unique values for subject */
    countUniqueValuesSubject?: boolean | number
    /** Number of empty values for subject */
    countEmptySubject?: boolean | number
    /** Number of non-empty values for subject */
    countNotEmptySubject?: boolean | number
    /** Percentage of empty values for subject */
    percentageEmptySubject?: boolean | number
    /** Percentage of non-empty values for subject */
    percentageNotEmptySubject?: boolean | number
    /** Number of unique values for text */
    countUniqueValuesText?: boolean | number
    /** Number of empty values for text */
    countEmptyText?: boolean | number
    /** Number of non-empty values for text */
    countNotEmptyText?: boolean | number
    /** Percentage of empty values for text */
    percentageEmptyText?: boolean | number
    /** Percentage of non-empty values for text */
    percentageNotEmptyText?: boolean | number
    /** Number of unique values for receivedAt */
    countUniqueValuesReceivedAt?: boolean | number
    /** Number of empty values for receivedAt */
    countEmptyReceivedAt?: boolean | number
    /** Number of non-empty values for receivedAt */
    countNotEmptyReceivedAt?: boolean | number
    /** Percentage of empty values for receivedAt */
    percentageEmptyReceivedAt?: boolean | number
    /** Percentage of non-empty values for receivedAt */
    percentageNotEmptyReceivedAt?: boolean | number
    /** Earliest date contained in the field receivedAt */
    minReceivedAt?: boolean | number
    /** Latest date contained in the field receivedAt */
    maxReceivedAt?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    edges?: MessageEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MessageRelationInput {
/** Connect to a message record */
connect?: (MessageConnectInput | null),
/** Disconnect from a message record */
disconnect?: (Scalars['Boolean'] | null)}

export interface MessageConnectInput {
/** Find a message record based on its unique fields: id */
where?: (MessageWhereUniqueInput | null)}

export interface MessageWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageCreateInput {
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message id from the message header */
headerMessageId?: (Scalars['String'] | null),
/** Subject */
subject?: (Scalars['String'] | null),
/** Text */
text?: (Scalars['String'] | null),
/** The date the message was received */
receivedAt?: (Scalars['DateTime'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Message Thread Id */
messageThreadId?: (Scalars['ID'] | null),
/** Message Thread Id */
messageThread?: (MessageThreadRelationInput | null)}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageUpdateInput {
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message id from the message header */
headerMessageId?: (Scalars['String'] | null),
/** Subject */
subject?: (Scalars['String'] | null),
/** Text */
text?: (Scalars['String'] | null),
/** The date the message was received */
receivedAt?: (Scalars['DateTime'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Message Thread Id */
messageThreadId?: (Scalars['ID'] | null),
/** Message Thread Id */
messageThread?: (MessageThreadRelationInput | null)}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageFilterInput {
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Message id from the message header */
headerMessageId?: (StringFilter | null),
/** Subject */
subject?: (StringFilter | null),
/** Text */
text?: (StringFilter | null),
/** The date the message was received */
receivedAt?: (DateFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Message Thread Id */
messageThreadId?: (UUIDFilter | null),and?: ((MessageFilterInput | null)[] | null),or?: ((MessageFilterInput | null)[] | null),not?: (MessageFilterInput | null)}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageOrderByInput {
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Message id from the message header */
headerMessageId?: (OrderByDirection | null),
/** Subject */
subject?: (OrderByDirection | null),
/** Text */
text?: (OrderByDirection | null),
/** The date the message was received */
receivedAt?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Message Thread Id */
messageThreadId?: (OrderByDirection | null)}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (MessageOrderByWithGroupByAggregateInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Message id from the message header */
headerMessageId?: (OrderByDirection | null),
/** Subject */
subject?: (OrderByDirection | null),
/** Text */
text?: (OrderByDirection | null),
/** The date the message was received */
receivedAt?: (OrderByDateGranularityInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Message Thread Id */
messageThreadId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface MessageOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Number of unique values for headerMessageId */
countUniqueValuesHeaderMessageId?: (OrderByDirection | null),
/** Number of empty values for headerMessageId */
countEmptyHeaderMessageId?: (OrderByDirection | null),
/** Number of non-empty values for headerMessageId */
countNotEmptyHeaderMessageId?: (OrderByDirection | null),
/** Percentage of empty values for headerMessageId */
percentageEmptyHeaderMessageId?: (OrderByDirection | null),
/** Percentage of non-empty values for headerMessageId */
percentageNotEmptyHeaderMessageId?: (OrderByDirection | null),
/** Number of unique values for subject */
countUniqueValuesSubject?: (OrderByDirection | null),
/** Number of empty values for subject */
countEmptySubject?: (OrderByDirection | null),
/** Number of non-empty values for subject */
countNotEmptySubject?: (OrderByDirection | null),
/** Percentage of empty values for subject */
percentageEmptySubject?: (OrderByDirection | null),
/** Percentage of non-empty values for subject */
percentageNotEmptySubject?: (OrderByDirection | null),
/** Number of unique values for text */
countUniqueValuesText?: (OrderByDirection | null),
/** Number of empty values for text */
countEmptyText?: (OrderByDirection | null),
/** Number of non-empty values for text */
countNotEmptyText?: (OrderByDirection | null),
/** Percentage of empty values for text */
percentageEmptyText?: (OrderByDirection | null),
/** Percentage of non-empty values for text */
percentageNotEmptyText?: (OrderByDirection | null),
/** Number of unique values for receivedAt */
countUniqueValuesReceivedAt?: (OrderByDirection | null),
/** Number of empty values for receivedAt */
countEmptyReceivedAt?: (OrderByDirection | null),
/** Number of non-empty values for receivedAt */
countNotEmptyReceivedAt?: (OrderByDirection | null),
/** Percentage of empty values for receivedAt */
percentageEmptyReceivedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for receivedAt */
percentageNotEmptyReceivedAt?: (OrderByDirection | null),
/** Earliest date contained in the field receivedAt */
minReceivedAt?: (OrderByDirection | null),
/** Latest date contained in the field receivedAt */
maxReceivedAt?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Message Thread Id */
messageThreadId?: (OrderByDirection | null)}


/** A message sent or received through a messaging channel (email, chat, etc.) */
export interface MessageGroupByInput {
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Message id from the message header */
headerMessageId?: (Scalars['Boolean'] | null),
/** Subject */
subject?: (Scalars['Boolean'] | null),
/** Text */
text?: (Scalars['Boolean'] | null),
/** The date the message was received */
receivedAt?: (GroupByDateGranularityInput | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Message Thread Id */
messageThreadId?: (Scalars['Boolean'] | null)}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadGenqlSelection{
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Messages from the thread. */
    messages?: (MessageConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageFilterInput | null), orderBy?: ((MessageOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadEdgeGenqlSelection{
    node?: MessageThreadGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageThreadEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageThreadEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MessageThreadRelationInput {
/** Connect to a messageThread record */
connect?: (MessageThreadConnectInput | null),
/** Disconnect from a messageThread record */
disconnect?: (Scalars['Boolean'] | null)}

export interface MessageThreadConnectInput {
/** Find a messageThread record based on its unique fields: id */
where?: (MessageThreadWhereUniqueInput | null)}

export interface MessageThreadWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadCreateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadUpdateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadFilterInput {
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((MessageThreadFilterInput | null)[] | null),or?: ((MessageThreadFilterInput | null)[] | null),not?: (MessageThreadFilterInput | null)}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadOrderByInput {
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (MessageThreadOrderByWithGroupByAggregateInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface MessageThreadOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** A group of related messages (e.g. email thread, chat thread) */
export interface MessageThreadGroupByInput {
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** Message Channels */
export interface MessageChannelGenqlSelection{
    /** Visibility */
    visibility?: boolean | number
    /** Handle */
    handle?: boolean | number
    /** Channel Type */
    type?: boolean | number
    /** Is Contact Auto Creation Enabled */
    isContactAutoCreationEnabled?: boolean | number
    /** Automatically create People records when receiving or sending emails */
    contactAutoCreationPolicy?: boolean | number
    /** Message folder import policy */
    messageFolderImportPolicy?: boolean | number
    /** Exclude non professional emails */
    excludeNonProfessionalEmails?: boolean | number
    /** Exclude group emails */
    excludeGroupEmails?: boolean | number
    /** Is Sync Enabled */
    isSyncEnabled?: boolean | number
    /** Last sync cursor */
    syncCursor?: boolean | number
    /** Last sync date */
    syncedAt?: boolean | number
    /** Sync status */
    syncStatus?: boolean | number
    /** Sync stage */
    syncStage?: boolean | number
    /** Sync stage started at */
    syncStageStartedAt?: boolean | number
    /** Throttle Failure Count */
    throttleFailureCount?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Connected Account */
    connectedAccountId?: boolean | number
    /** Connected Account */
    connectedAccount?: ConnectedAccountGenqlSelection
    /** Messages from the channel. */
    messageChannelMessageAssociations?: (MessageChannelMessageAssociationConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageChannelMessageAssociationFilterInput | null), orderBy?: ((MessageChannelMessageAssociationOrderByInput | null)[] | null)} })
    /** Message Folders */
    messageFolders?: (MessageFolderConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageFolderFilterInput | null), orderBy?: ((MessageFolderOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Channels */
export interface MessageChannelEdgeGenqlSelection{
    node?: MessageChannelGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Channels */
export interface MessageChannelConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: boolean | number
    /** Number of empty values for visibility */
    countEmptyVisibility?: boolean | number
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: boolean | number
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: boolean | number
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: boolean | number
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: boolean | number
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: boolean | number
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: boolean | number
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of unique values for messageFolderImportPolicy */
    countUniqueValuesMessageFolderImportPolicy?: boolean | number
    /** Number of empty values for messageFolderImportPolicy */
    countEmptyMessageFolderImportPolicy?: boolean | number
    /** Number of non-empty values for messageFolderImportPolicy */
    countNotEmptyMessageFolderImportPolicy?: boolean | number
    /** Percentage of empty values for messageFolderImportPolicy */
    percentageEmptyMessageFolderImportPolicy?: boolean | number
    /** Percentage of non-empty values for messageFolderImportPolicy */
    percentageNotEmptyMessageFolderImportPolicy?: boolean | number
    /** Number of unique values for excludeNonProfessionalEmails */
    countUniqueValuesExcludeNonProfessionalEmails?: boolean | number
    /** Number of empty values for excludeNonProfessionalEmails */
    countEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Number of non-empty values for excludeNonProfessionalEmails */
    countNotEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Percentage of empty values for excludeNonProfessionalEmails */
    percentageEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Percentage of non-empty values for excludeNonProfessionalEmails */
    percentageNotEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Count of true values in the field excludeNonProfessionalEmails */
    countTrueExcludeNonProfessionalEmails?: boolean | number
    /** Count of false values in the field excludeNonProfessionalEmails */
    countFalseExcludeNonProfessionalEmails?: boolean | number
    /** Number of unique values for excludeGroupEmails */
    countUniqueValuesExcludeGroupEmails?: boolean | number
    /** Number of empty values for excludeGroupEmails */
    countEmptyExcludeGroupEmails?: boolean | number
    /** Number of non-empty values for excludeGroupEmails */
    countNotEmptyExcludeGroupEmails?: boolean | number
    /** Percentage of empty values for excludeGroupEmails */
    percentageEmptyExcludeGroupEmails?: boolean | number
    /** Percentage of non-empty values for excludeGroupEmails */
    percentageNotEmptyExcludeGroupEmails?: boolean | number
    /** Count of true values in the field excludeGroupEmails */
    countTrueExcludeGroupEmails?: boolean | number
    /** Count of false values in the field excludeGroupEmails */
    countFalseExcludeGroupEmails?: boolean | number
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: boolean | number
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: boolean | number
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: boolean | number
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: boolean | number
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: boolean | number
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: boolean | number
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: boolean | number
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: boolean | number
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: boolean | number
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: boolean | number
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: boolean | number
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: boolean | number
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: boolean | number
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: boolean | number
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: boolean | number
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: boolean | number
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: boolean | number
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: boolean | number
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: boolean | number
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: boolean | number
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: boolean | number
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: boolean | number
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: boolean | number
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: boolean | number
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: boolean | number
    /** Number of empty values for syncStage */
    countEmptySyncStage?: boolean | number
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: boolean | number
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: boolean | number
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: boolean | number
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: boolean | number
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: boolean | number
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: boolean | number
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: boolean | number
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: boolean | number
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: boolean | number
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: boolean | number
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: boolean | number
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: boolean | number
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: boolean | number
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: boolean | number
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: boolean | number
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: boolean | number
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: boolean | number
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: boolean | number
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageChannelEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Channels */
export interface MessageChannelGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for visibility */
    countUniqueValuesVisibility?: boolean | number
    /** Number of empty values for visibility */
    countEmptyVisibility?: boolean | number
    /** Number of non-empty values for visibility */
    countNotEmptyVisibility?: boolean | number
    /** Percentage of empty values for visibility */
    percentageEmptyVisibility?: boolean | number
    /** Percentage of non-empty values for visibility */
    percentageNotEmptyVisibility?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for type */
    countUniqueValuesType?: boolean | number
    /** Number of empty values for type */
    countEmptyType?: boolean | number
    /** Number of non-empty values for type */
    countNotEmptyType?: boolean | number
    /** Percentage of empty values for type */
    percentageEmptyType?: boolean | number
    /** Percentage of non-empty values for type */
    percentageNotEmptyType?: boolean | number
    /** Number of unique values for isContactAutoCreationEnabled */
    countUniqueValuesIsContactAutoCreationEnabled?: boolean | number
    /** Number of empty values for isContactAutoCreationEnabled */
    countEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Number of non-empty values for isContactAutoCreationEnabled */
    countNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of empty values for isContactAutoCreationEnabled */
    percentageEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Percentage of non-empty values for isContactAutoCreationEnabled */
    percentageNotEmptyIsContactAutoCreationEnabled?: boolean | number
    /** Count of true values in the field isContactAutoCreationEnabled */
    countTrueIsContactAutoCreationEnabled?: boolean | number
    /** Count of false values in the field isContactAutoCreationEnabled */
    countFalseIsContactAutoCreationEnabled?: boolean | number
    /** Number of unique values for contactAutoCreationPolicy */
    countUniqueValuesContactAutoCreationPolicy?: boolean | number
    /** Number of empty values for contactAutoCreationPolicy */
    countEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of non-empty values for contactAutoCreationPolicy */
    countNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of empty values for contactAutoCreationPolicy */
    percentageEmptyContactAutoCreationPolicy?: boolean | number
    /** Percentage of non-empty values for contactAutoCreationPolicy */
    percentageNotEmptyContactAutoCreationPolicy?: boolean | number
    /** Number of unique values for messageFolderImportPolicy */
    countUniqueValuesMessageFolderImportPolicy?: boolean | number
    /** Number of empty values for messageFolderImportPolicy */
    countEmptyMessageFolderImportPolicy?: boolean | number
    /** Number of non-empty values for messageFolderImportPolicy */
    countNotEmptyMessageFolderImportPolicy?: boolean | number
    /** Percentage of empty values for messageFolderImportPolicy */
    percentageEmptyMessageFolderImportPolicy?: boolean | number
    /** Percentage of non-empty values for messageFolderImportPolicy */
    percentageNotEmptyMessageFolderImportPolicy?: boolean | number
    /** Number of unique values for excludeNonProfessionalEmails */
    countUniqueValuesExcludeNonProfessionalEmails?: boolean | number
    /** Number of empty values for excludeNonProfessionalEmails */
    countEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Number of non-empty values for excludeNonProfessionalEmails */
    countNotEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Percentage of empty values for excludeNonProfessionalEmails */
    percentageEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Percentage of non-empty values for excludeNonProfessionalEmails */
    percentageNotEmptyExcludeNonProfessionalEmails?: boolean | number
    /** Count of true values in the field excludeNonProfessionalEmails */
    countTrueExcludeNonProfessionalEmails?: boolean | number
    /** Count of false values in the field excludeNonProfessionalEmails */
    countFalseExcludeNonProfessionalEmails?: boolean | number
    /** Number of unique values for excludeGroupEmails */
    countUniqueValuesExcludeGroupEmails?: boolean | number
    /** Number of empty values for excludeGroupEmails */
    countEmptyExcludeGroupEmails?: boolean | number
    /** Number of non-empty values for excludeGroupEmails */
    countNotEmptyExcludeGroupEmails?: boolean | number
    /** Percentage of empty values for excludeGroupEmails */
    percentageEmptyExcludeGroupEmails?: boolean | number
    /** Percentage of non-empty values for excludeGroupEmails */
    percentageNotEmptyExcludeGroupEmails?: boolean | number
    /** Count of true values in the field excludeGroupEmails */
    countTrueExcludeGroupEmails?: boolean | number
    /** Count of false values in the field excludeGroupEmails */
    countFalseExcludeGroupEmails?: boolean | number
    /** Number of unique values for isSyncEnabled */
    countUniqueValuesIsSyncEnabled?: boolean | number
    /** Number of empty values for isSyncEnabled */
    countEmptyIsSyncEnabled?: boolean | number
    /** Number of non-empty values for isSyncEnabled */
    countNotEmptyIsSyncEnabled?: boolean | number
    /** Percentage of empty values for isSyncEnabled */
    percentageEmptyIsSyncEnabled?: boolean | number
    /** Percentage of non-empty values for isSyncEnabled */
    percentageNotEmptyIsSyncEnabled?: boolean | number
    /** Count of true values in the field isSyncEnabled */
    countTrueIsSyncEnabled?: boolean | number
    /** Count of false values in the field isSyncEnabled */
    countFalseIsSyncEnabled?: boolean | number
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: boolean | number
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: boolean | number
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: boolean | number
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: boolean | number
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: boolean | number
    /** Number of unique values for syncedAt */
    countUniqueValuesSyncedAt?: boolean | number
    /** Number of empty values for syncedAt */
    countEmptySyncedAt?: boolean | number
    /** Number of non-empty values for syncedAt */
    countNotEmptySyncedAt?: boolean | number
    /** Percentage of empty values for syncedAt */
    percentageEmptySyncedAt?: boolean | number
    /** Percentage of non-empty values for syncedAt */
    percentageNotEmptySyncedAt?: boolean | number
    /** Earliest date contained in the field syncedAt */
    minSyncedAt?: boolean | number
    /** Latest date contained in the field syncedAt */
    maxSyncedAt?: boolean | number
    /** Number of unique values for syncStatus */
    countUniqueValuesSyncStatus?: boolean | number
    /** Number of empty values for syncStatus */
    countEmptySyncStatus?: boolean | number
    /** Number of non-empty values for syncStatus */
    countNotEmptySyncStatus?: boolean | number
    /** Percentage of empty values for syncStatus */
    percentageEmptySyncStatus?: boolean | number
    /** Percentage of non-empty values for syncStatus */
    percentageNotEmptySyncStatus?: boolean | number
    /** Number of unique values for syncStage */
    countUniqueValuesSyncStage?: boolean | number
    /** Number of empty values for syncStage */
    countEmptySyncStage?: boolean | number
    /** Number of non-empty values for syncStage */
    countNotEmptySyncStage?: boolean | number
    /** Percentage of empty values for syncStage */
    percentageEmptySyncStage?: boolean | number
    /** Percentage of non-empty values for syncStage */
    percentageNotEmptySyncStage?: boolean | number
    /** Number of unique values for syncStageStartedAt */
    countUniqueValuesSyncStageStartedAt?: boolean | number
    /** Number of empty values for syncStageStartedAt */
    countEmptySyncStageStartedAt?: boolean | number
    /** Number of non-empty values for syncStageStartedAt */
    countNotEmptySyncStageStartedAt?: boolean | number
    /** Percentage of empty values for syncStageStartedAt */
    percentageEmptySyncStageStartedAt?: boolean | number
    /** Percentage of non-empty values for syncStageStartedAt */
    percentageNotEmptySyncStageStartedAt?: boolean | number
    /** Earliest date contained in the field syncStageStartedAt */
    minSyncStageStartedAt?: boolean | number
    /** Latest date contained in the field syncStageStartedAt */
    maxSyncStageStartedAt?: boolean | number
    /** Number of unique values for throttleFailureCount */
    countUniqueValuesThrottleFailureCount?: boolean | number
    /** Number of empty values for throttleFailureCount */
    countEmptyThrottleFailureCount?: boolean | number
    /** Number of non-empty values for throttleFailureCount */
    countNotEmptyThrottleFailureCount?: boolean | number
    /** Percentage of empty values for throttleFailureCount */
    percentageEmptyThrottleFailureCount?: boolean | number
    /** Percentage of non-empty values for throttleFailureCount */
    percentageNotEmptyThrottleFailureCount?: boolean | number
    /** Minimum amount contained in the field throttleFailureCount */
    minThrottleFailureCount?: boolean | number
    /** Maximum amount contained in the field throttleFailureCount */
    maxThrottleFailureCount?: boolean | number
    /** Average amount contained in the field throttleFailureCount */
    avgThrottleFailureCount?: boolean | number
    /** Sum of amounts contained in the field throttleFailureCount */
    sumThrottleFailureCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageChannelEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MessageChannelRelationInput {
/** Connect to a messageChannel record */
connect?: (MessageChannelConnectInput | null),
/** Disconnect from a messageChannel record */
disconnect?: (Scalars['Boolean'] | null)}

export interface MessageChannelConnectInput {
/** Find a messageChannel record based on its unique fields: id */
where?: (MessageChannelWhereUniqueInput | null)}

export interface MessageChannelWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Message Channels */
export interface MessageChannelCreateInput {
/** Visibility */
visibility?: (MessageChannelVisibilityEnum | null),
/** Handle */
handle?: (Scalars['String'] | null),
/** Channel Type */
type?: (MessageChannelTypeEnum | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (Scalars['Boolean'] | null),
/** Automatically create People records when receiving or sending emails */
contactAutoCreationPolicy?: (MessageChannelContactAutoCreationPolicyEnum | null),
/** Message folder import policy */
messageFolderImportPolicy?: (MessageChannelMessageFolderImportPolicyEnum | null),
/** Exclude non professional emails */
excludeNonProfessionalEmails?: (Scalars['Boolean'] | null),
/** Exclude group emails */
excludeGroupEmails?: (Scalars['Boolean'] | null),
/** Is Sync Enabled */
isSyncEnabled?: (Scalars['Boolean'] | null),
/** Last sync cursor */
syncCursor?: (Scalars['String'] | null),
/** Last sync date */
syncedAt?: (Scalars['DateTime'] | null),
/** Sync status */
syncStatus?: (MessageChannelSyncStatusEnum | null),
/** Sync stage */
syncStage?: (MessageChannelSyncStageEnum | null),
/** Sync stage started at */
syncStageStartedAt?: (Scalars['DateTime'] | null),
/** Throttle Failure Count */
throttleFailureCount?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Connected Account */
connectedAccountId?: (Scalars['ID'] | null),
/** Connected Account */
connectedAccount?: (ConnectedAccountRelationInput | null)}


/** Message Channels */
export interface MessageChannelUpdateInput {
/** Visibility */
visibility?: (MessageChannelVisibilityEnum | null),
/** Handle */
handle?: (Scalars['String'] | null),
/** Channel Type */
type?: (MessageChannelTypeEnum | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (Scalars['Boolean'] | null),
/** Automatically create People records when receiving or sending emails */
contactAutoCreationPolicy?: (MessageChannelContactAutoCreationPolicyEnum | null),
/** Message folder import policy */
messageFolderImportPolicy?: (MessageChannelMessageFolderImportPolicyEnum | null),
/** Exclude non professional emails */
excludeNonProfessionalEmails?: (Scalars['Boolean'] | null),
/** Exclude group emails */
excludeGroupEmails?: (Scalars['Boolean'] | null),
/** Is Sync Enabled */
isSyncEnabled?: (Scalars['Boolean'] | null),
/** Last sync cursor */
syncCursor?: (Scalars['String'] | null),
/** Last sync date */
syncedAt?: (Scalars['DateTime'] | null),
/** Sync status */
syncStatus?: (MessageChannelSyncStatusEnum | null),
/** Sync stage */
syncStage?: (MessageChannelSyncStageEnum | null),
/** Sync stage started at */
syncStageStartedAt?: (Scalars['DateTime'] | null),
/** Throttle Failure Count */
throttleFailureCount?: (Scalars['Float'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Connected Account */
connectedAccountId?: (Scalars['ID'] | null),
/** Connected Account */
connectedAccount?: (ConnectedAccountRelationInput | null)}


/** Message Channels */
export interface MessageChannelFilterInput {
/** Visibility */
visibility?: (MessageChannelVisibilityEnumFilter | null),
/** Handle */
handle?: (StringFilter | null),
/** Channel Type */
type?: (MessageChannelTypeEnumFilter | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (BooleanFilter | null),
/** Automatically create People records when receiving or sending emails */
contactAutoCreationPolicy?: (MessageChannelContactAutoCreationPolicyEnumFilter | null),
/** Message folder import policy */
messageFolderImportPolicy?: (MessageChannelMessageFolderImportPolicyEnumFilter | null),
/** Exclude non professional emails */
excludeNonProfessionalEmails?: (BooleanFilter | null),
/** Exclude group emails */
excludeGroupEmails?: (BooleanFilter | null),
/** Is Sync Enabled */
isSyncEnabled?: (BooleanFilter | null),
/** Last sync cursor */
syncCursor?: (StringFilter | null),
/** Last sync date */
syncedAt?: (DateFilter | null),
/** Sync status */
syncStatus?: (MessageChannelSyncStatusEnumFilter | null),
/** Sync stage */
syncStage?: (MessageChannelSyncStageEnumFilter | null),
/** Sync stage started at */
syncStageStartedAt?: (DateFilter | null),
/** Throttle Failure Count */
throttleFailureCount?: (FloatFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Connected Account */
connectedAccountId?: (UUIDFilter | null),and?: ((MessageChannelFilterInput | null)[] | null),or?: ((MessageChannelFilterInput | null)[] | null),not?: (MessageChannelFilterInput | null)}

export interface MessageChannelVisibilityEnumFilter {eq?: (MessageChannelVisibilityEnum | null),neq?: (MessageChannelVisibilityEnum | null),in?: ((MessageChannelVisibilityEnum | null)[] | null),containsAny?: ((MessageChannelVisibilityEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface MessageChannelTypeEnumFilter {eq?: (MessageChannelTypeEnum | null),neq?: (MessageChannelTypeEnum | null),in?: ((MessageChannelTypeEnum | null)[] | null),containsAny?: ((MessageChannelTypeEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface MessageChannelContactAutoCreationPolicyEnumFilter {eq?: (MessageChannelContactAutoCreationPolicyEnum | null),neq?: (MessageChannelContactAutoCreationPolicyEnum | null),in?: ((MessageChannelContactAutoCreationPolicyEnum | null)[] | null),containsAny?: ((MessageChannelContactAutoCreationPolicyEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface MessageChannelMessageFolderImportPolicyEnumFilter {eq?: (MessageChannelMessageFolderImportPolicyEnum | null),neq?: (MessageChannelMessageFolderImportPolicyEnum | null),in?: ((MessageChannelMessageFolderImportPolicyEnum | null)[] | null),containsAny?: ((MessageChannelMessageFolderImportPolicyEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface MessageChannelSyncStatusEnumFilter {eq?: (MessageChannelSyncStatusEnum | null),neq?: (MessageChannelSyncStatusEnum | null),in?: ((MessageChannelSyncStatusEnum | null)[] | null),containsAny?: ((MessageChannelSyncStatusEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface MessageChannelSyncStageEnumFilter {eq?: (MessageChannelSyncStageEnum | null),neq?: (MessageChannelSyncStageEnum | null),in?: ((MessageChannelSyncStageEnum | null)[] | null),containsAny?: ((MessageChannelSyncStageEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** Message Channels */
export interface MessageChannelOrderByInput {
/** Visibility */
visibility?: (OrderByDirection | null),
/** Handle */
handle?: (OrderByDirection | null),
/** Channel Type */
type?: (OrderByDirection | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (OrderByDirection | null),
/** Automatically create People records when receiving or sending emails */
contactAutoCreationPolicy?: (OrderByDirection | null),
/** Message folder import policy */
messageFolderImportPolicy?: (OrderByDirection | null),
/** Exclude non professional emails */
excludeNonProfessionalEmails?: (OrderByDirection | null),
/** Exclude group emails */
excludeGroupEmails?: (OrderByDirection | null),
/** Is Sync Enabled */
isSyncEnabled?: (OrderByDirection | null),
/** Last sync cursor */
syncCursor?: (OrderByDirection | null),
/** Last sync date */
syncedAt?: (OrderByDirection | null),
/** Sync status */
syncStatus?: (OrderByDirection | null),
/** Sync stage */
syncStage?: (OrderByDirection | null),
/** Sync stage started at */
syncStageStartedAt?: (OrderByDirection | null),
/** Throttle Failure Count */
throttleFailureCount?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Connected Account */
connectedAccountId?: (OrderByDirection | null)}


/** Message Channels */
export interface MessageChannelOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (MessageChannelOrderByWithGroupByAggregateInput | null),
/** Visibility */
visibility?: (OrderByDirection | null),
/** Handle */
handle?: (OrderByDirection | null),
/** Channel Type */
type?: (OrderByDirection | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (OrderByDirection | null),
/** Automatically create People records when receiving or sending emails */
contactAutoCreationPolicy?: (OrderByDirection | null),
/** Message folder import policy */
messageFolderImportPolicy?: (OrderByDirection | null),
/** Exclude non professional emails */
excludeNonProfessionalEmails?: (OrderByDirection | null),
/** Exclude group emails */
excludeGroupEmails?: (OrderByDirection | null),
/** Is Sync Enabled */
isSyncEnabled?: (OrderByDirection | null),
/** Last sync cursor */
syncCursor?: (OrderByDirection | null),
/** Last sync date */
syncedAt?: (OrderByDateGranularityInput | null),
/** Sync status */
syncStatus?: (OrderByDirection | null),
/** Sync stage */
syncStage?: (OrderByDirection | null),
/** Sync stage started at */
syncStageStartedAt?: (OrderByDateGranularityInput | null),
/** Throttle Failure Count */
throttleFailureCount?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Connected Account */
connectedAccountId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface MessageChannelOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for visibility */
countUniqueValuesVisibility?: (OrderByDirection | null),
/** Number of empty values for visibility */
countEmptyVisibility?: (OrderByDirection | null),
/** Number of non-empty values for visibility */
countNotEmptyVisibility?: (OrderByDirection | null),
/** Percentage of empty values for visibility */
percentageEmptyVisibility?: (OrderByDirection | null),
/** Percentage of non-empty values for visibility */
percentageNotEmptyVisibility?: (OrderByDirection | null),
/** Number of unique values for handle */
countUniqueValuesHandle?: (OrderByDirection | null),
/** Number of empty values for handle */
countEmptyHandle?: (OrderByDirection | null),
/** Number of non-empty values for handle */
countNotEmptyHandle?: (OrderByDirection | null),
/** Percentage of empty values for handle */
percentageEmptyHandle?: (OrderByDirection | null),
/** Percentage of non-empty values for handle */
percentageNotEmptyHandle?: (OrderByDirection | null),
/** Number of unique values for type */
countUniqueValuesType?: (OrderByDirection | null),
/** Number of empty values for type */
countEmptyType?: (OrderByDirection | null),
/** Number of non-empty values for type */
countNotEmptyType?: (OrderByDirection | null),
/** Percentage of empty values for type */
percentageEmptyType?: (OrderByDirection | null),
/** Percentage of non-empty values for type */
percentageNotEmptyType?: (OrderByDirection | null),
/** Number of unique values for isContactAutoCreationEnabled */
countUniqueValuesIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Number of empty values for isContactAutoCreationEnabled */
countEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Number of non-empty values for isContactAutoCreationEnabled */
countNotEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Percentage of empty values for isContactAutoCreationEnabled */
percentageEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Percentage of non-empty values for isContactAutoCreationEnabled */
percentageNotEmptyIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Count of true values in the field isContactAutoCreationEnabled */
countTrueIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Count of false values in the field isContactAutoCreationEnabled */
countFalseIsContactAutoCreationEnabled?: (OrderByDirection | null),
/** Number of unique values for contactAutoCreationPolicy */
countUniqueValuesContactAutoCreationPolicy?: (OrderByDirection | null),
/** Number of empty values for contactAutoCreationPolicy */
countEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Number of non-empty values for contactAutoCreationPolicy */
countNotEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Percentage of empty values for contactAutoCreationPolicy */
percentageEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Percentage of non-empty values for contactAutoCreationPolicy */
percentageNotEmptyContactAutoCreationPolicy?: (OrderByDirection | null),
/** Number of unique values for messageFolderImportPolicy */
countUniqueValuesMessageFolderImportPolicy?: (OrderByDirection | null),
/** Number of empty values for messageFolderImportPolicy */
countEmptyMessageFolderImportPolicy?: (OrderByDirection | null),
/** Number of non-empty values for messageFolderImportPolicy */
countNotEmptyMessageFolderImportPolicy?: (OrderByDirection | null),
/** Percentage of empty values for messageFolderImportPolicy */
percentageEmptyMessageFolderImportPolicy?: (OrderByDirection | null),
/** Percentage of non-empty values for messageFolderImportPolicy */
percentageNotEmptyMessageFolderImportPolicy?: (OrderByDirection | null),
/** Number of unique values for excludeNonProfessionalEmails */
countUniqueValuesExcludeNonProfessionalEmails?: (OrderByDirection | null),
/** Number of empty values for excludeNonProfessionalEmails */
countEmptyExcludeNonProfessionalEmails?: (OrderByDirection | null),
/** Number of non-empty values for excludeNonProfessionalEmails */
countNotEmptyExcludeNonProfessionalEmails?: (OrderByDirection | null),
/** Percentage of empty values for excludeNonProfessionalEmails */
percentageEmptyExcludeNonProfessionalEmails?: (OrderByDirection | null),
/** Percentage of non-empty values for excludeNonProfessionalEmails */
percentageNotEmptyExcludeNonProfessionalEmails?: (OrderByDirection | null),
/** Count of true values in the field excludeNonProfessionalEmails */
countTrueExcludeNonProfessionalEmails?: (OrderByDirection | null),
/** Count of false values in the field excludeNonProfessionalEmails */
countFalseExcludeNonProfessionalEmails?: (OrderByDirection | null),
/** Number of unique values for excludeGroupEmails */
countUniqueValuesExcludeGroupEmails?: (OrderByDirection | null),
/** Number of empty values for excludeGroupEmails */
countEmptyExcludeGroupEmails?: (OrderByDirection | null),
/** Number of non-empty values for excludeGroupEmails */
countNotEmptyExcludeGroupEmails?: (OrderByDirection | null),
/** Percentage of empty values for excludeGroupEmails */
percentageEmptyExcludeGroupEmails?: (OrderByDirection | null),
/** Percentage of non-empty values for excludeGroupEmails */
percentageNotEmptyExcludeGroupEmails?: (OrderByDirection | null),
/** Count of true values in the field excludeGroupEmails */
countTrueExcludeGroupEmails?: (OrderByDirection | null),
/** Count of false values in the field excludeGroupEmails */
countFalseExcludeGroupEmails?: (OrderByDirection | null),
/** Number of unique values for isSyncEnabled */
countUniqueValuesIsSyncEnabled?: (OrderByDirection | null),
/** Number of empty values for isSyncEnabled */
countEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Number of non-empty values for isSyncEnabled */
countNotEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Percentage of empty values for isSyncEnabled */
percentageEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Percentage of non-empty values for isSyncEnabled */
percentageNotEmptyIsSyncEnabled?: (OrderByDirection | null),
/** Count of true values in the field isSyncEnabled */
countTrueIsSyncEnabled?: (OrderByDirection | null),
/** Count of false values in the field isSyncEnabled */
countFalseIsSyncEnabled?: (OrderByDirection | null),
/** Number of unique values for syncCursor */
countUniqueValuesSyncCursor?: (OrderByDirection | null),
/** Number of empty values for syncCursor */
countEmptySyncCursor?: (OrderByDirection | null),
/** Number of non-empty values for syncCursor */
countNotEmptySyncCursor?: (OrderByDirection | null),
/** Percentage of empty values for syncCursor */
percentageEmptySyncCursor?: (OrderByDirection | null),
/** Percentage of non-empty values for syncCursor */
percentageNotEmptySyncCursor?: (OrderByDirection | null),
/** Number of unique values for syncedAt */
countUniqueValuesSyncedAt?: (OrderByDirection | null),
/** Number of empty values for syncedAt */
countEmptySyncedAt?: (OrderByDirection | null),
/** Number of non-empty values for syncedAt */
countNotEmptySyncedAt?: (OrderByDirection | null),
/** Percentage of empty values for syncedAt */
percentageEmptySyncedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for syncedAt */
percentageNotEmptySyncedAt?: (OrderByDirection | null),
/** Earliest date contained in the field syncedAt */
minSyncedAt?: (OrderByDirection | null),
/** Latest date contained in the field syncedAt */
maxSyncedAt?: (OrderByDirection | null),
/** Number of unique values for syncStatus */
countUniqueValuesSyncStatus?: (OrderByDirection | null),
/** Number of empty values for syncStatus */
countEmptySyncStatus?: (OrderByDirection | null),
/** Number of non-empty values for syncStatus */
countNotEmptySyncStatus?: (OrderByDirection | null),
/** Percentage of empty values for syncStatus */
percentageEmptySyncStatus?: (OrderByDirection | null),
/** Percentage of non-empty values for syncStatus */
percentageNotEmptySyncStatus?: (OrderByDirection | null),
/** Number of unique values for syncStage */
countUniqueValuesSyncStage?: (OrderByDirection | null),
/** Number of empty values for syncStage */
countEmptySyncStage?: (OrderByDirection | null),
/** Number of non-empty values for syncStage */
countNotEmptySyncStage?: (OrderByDirection | null),
/** Percentage of empty values for syncStage */
percentageEmptySyncStage?: (OrderByDirection | null),
/** Percentage of non-empty values for syncStage */
percentageNotEmptySyncStage?: (OrderByDirection | null),
/** Number of unique values for syncStageStartedAt */
countUniqueValuesSyncStageStartedAt?: (OrderByDirection | null),
/** Number of empty values for syncStageStartedAt */
countEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Number of non-empty values for syncStageStartedAt */
countNotEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Percentage of empty values for syncStageStartedAt */
percentageEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for syncStageStartedAt */
percentageNotEmptySyncStageStartedAt?: (OrderByDirection | null),
/** Earliest date contained in the field syncStageStartedAt */
minSyncStageStartedAt?: (OrderByDirection | null),
/** Latest date contained in the field syncStageStartedAt */
maxSyncStageStartedAt?: (OrderByDirection | null),
/** Number of unique values for throttleFailureCount */
countUniqueValuesThrottleFailureCount?: (OrderByDirection | null),
/** Number of empty values for throttleFailureCount */
countEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Number of non-empty values for throttleFailureCount */
countNotEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Percentage of empty values for throttleFailureCount */
percentageEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Percentage of non-empty values for throttleFailureCount */
percentageNotEmptyThrottleFailureCount?: (OrderByDirection | null),
/** Minimum amount contained in the field throttleFailureCount */
minThrottleFailureCount?: (OrderByDirection | null),
/** Maximum amount contained in the field throttleFailureCount */
maxThrottleFailureCount?: (OrderByDirection | null),
/** Average amount contained in the field throttleFailureCount */
avgThrottleFailureCount?: (OrderByDirection | null),
/** Sum of amounts contained in the field throttleFailureCount */
sumThrottleFailureCount?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Connected Account */
connectedAccountId?: (OrderByDirection | null)}


/** Message Channels */
export interface MessageChannelGroupByInput {
/** Visibility */
visibility?: (Scalars['Boolean'] | null),
/** Handle */
handle?: (Scalars['Boolean'] | null),
/** Channel Type */
type?: (Scalars['Boolean'] | null),
/** Is Contact Auto Creation Enabled */
isContactAutoCreationEnabled?: (Scalars['Boolean'] | null),
/** Automatically create People records when receiving or sending emails */
contactAutoCreationPolicy?: (Scalars['Boolean'] | null),
/** Message folder import policy */
messageFolderImportPolicy?: (Scalars['Boolean'] | null),
/** Exclude non professional emails */
excludeNonProfessionalEmails?: (Scalars['Boolean'] | null),
/** Exclude group emails */
excludeGroupEmails?: (Scalars['Boolean'] | null),
/** Is Sync Enabled */
isSyncEnabled?: (Scalars['Boolean'] | null),
/** Last sync cursor */
syncCursor?: (Scalars['Boolean'] | null),
/** Last sync date */
syncedAt?: (GroupByDateGranularityInput | null),
/** Sync status */
syncStatus?: (Scalars['Boolean'] | null),
/** Sync stage */
syncStage?: (Scalars['Boolean'] | null),
/** Sync stage started at */
syncStageStartedAt?: (GroupByDateGranularityInput | null),
/** Throttle Failure Count */
throttleFailureCount?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Connected Account */
connectedAccountId?: (Scalars['Boolean'] | null)}


/** Message Participants */
export interface MessageParticipantGenqlSelection{
    /** Role */
    role?: boolean | number
    /** Handle */
    handle?: boolean | number
    /** Display Name */
    displayName?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Message */
    messageId?: boolean | number
    /** Person */
    personId?: boolean | number
    /** Workspace member */
    workspaceMemberId?: boolean | number
    /** Message */
    message?: MessageGenqlSelection
    /** Person */
    person?: PersonGenqlSelection
    /** Workspace member */
    workspaceMember?: WorkspaceMemberGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Participants */
export interface MessageParticipantEdgeGenqlSelection{
    node?: MessageParticipantGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Participants */
export interface MessageParticipantConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for role */
    countUniqueValuesRole?: boolean | number
    /** Number of empty values for role */
    countEmptyRole?: boolean | number
    /** Number of non-empty values for role */
    countNotEmptyRole?: boolean | number
    /** Percentage of empty values for role */
    percentageEmptyRole?: boolean | number
    /** Percentage of non-empty values for role */
    percentageNotEmptyRole?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: boolean | number
    /** Number of empty values for displayName */
    countEmptyDisplayName?: boolean | number
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: boolean | number
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: boolean | number
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageParticipantEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Participants */
export interface MessageParticipantGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for role */
    countUniqueValuesRole?: boolean | number
    /** Number of empty values for role */
    countEmptyRole?: boolean | number
    /** Number of non-empty values for role */
    countNotEmptyRole?: boolean | number
    /** Percentage of empty values for role */
    percentageEmptyRole?: boolean | number
    /** Percentage of non-empty values for role */
    percentageNotEmptyRole?: boolean | number
    /** Number of unique values for handle */
    countUniqueValuesHandle?: boolean | number
    /** Number of empty values for handle */
    countEmptyHandle?: boolean | number
    /** Number of non-empty values for handle */
    countNotEmptyHandle?: boolean | number
    /** Percentage of empty values for handle */
    percentageEmptyHandle?: boolean | number
    /** Percentage of non-empty values for handle */
    percentageNotEmptyHandle?: boolean | number
    /** Number of unique values for displayName */
    countUniqueValuesDisplayName?: boolean | number
    /** Number of empty values for displayName */
    countEmptyDisplayName?: boolean | number
    /** Number of non-empty values for displayName */
    countNotEmptyDisplayName?: boolean | number
    /** Percentage of empty values for displayName */
    percentageEmptyDisplayName?: boolean | number
    /** Percentage of non-empty values for displayName */
    percentageNotEmptyDisplayName?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageParticipantEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MessageParticipantRelationInput {
/** Connect to a messageParticipant record */
connect?: (MessageParticipantConnectInput | null),
/** Disconnect from a messageParticipant record */
disconnect?: (Scalars['Boolean'] | null)}

export interface MessageParticipantConnectInput {
/** Find a messageParticipant record based on its unique fields: id */
where?: (MessageParticipantWhereUniqueInput | null)}

export interface MessageParticipantWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Message Participants */
export interface MessageParticipantCreateInput {
/** Role */
role?: (MessageParticipantRoleEnum | null),
/** Handle */
handle?: (Scalars['String'] | null),
/** Display Name */
displayName?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message */
messageId?: (Scalars['ID'] | null),
/** Message */
message?: (MessageRelationInput | null),
/** Person */
personId?: (Scalars['ID'] | null),
/** Person */
person?: (PersonRelationInput | null),
/** Workspace member */
workspaceMemberId?: (Scalars['ID'] | null),
/** Workspace member */
workspaceMember?: (WorkspaceMemberRelationInput | null)}


/** Message Participants */
export interface MessageParticipantUpdateInput {
/** Role */
role?: (MessageParticipantRoleEnum | null),
/** Handle */
handle?: (Scalars['String'] | null),
/** Display Name */
displayName?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message */
messageId?: (Scalars['ID'] | null),
/** Message */
message?: (MessageRelationInput | null),
/** Person */
personId?: (Scalars['ID'] | null),
/** Person */
person?: (PersonRelationInput | null),
/** Workspace member */
workspaceMemberId?: (Scalars['ID'] | null),
/** Workspace member */
workspaceMember?: (WorkspaceMemberRelationInput | null)}


/** Message Participants */
export interface MessageParticipantFilterInput {
/** Role */
role?: (MessageParticipantRoleEnumFilter | null),
/** Handle */
handle?: (StringFilter | null),
/** Display Name */
displayName?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Message */
messageId?: (UUIDFilter | null),
/** Person */
personId?: (UUIDFilter | null),
/** Workspace member */
workspaceMemberId?: (UUIDFilter | null),and?: ((MessageParticipantFilterInput | null)[] | null),or?: ((MessageParticipantFilterInput | null)[] | null),not?: (MessageParticipantFilterInput | null)}

export interface MessageParticipantRoleEnumFilter {eq?: (MessageParticipantRoleEnum | null),neq?: (MessageParticipantRoleEnum | null),in?: ((MessageParticipantRoleEnum | null)[] | null),containsAny?: ((MessageParticipantRoleEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** Message Participants */
export interface MessageParticipantOrderByInput {
/** Role */
role?: (OrderByDirection | null),
/** Handle */
handle?: (OrderByDirection | null),
/** Display Name */
displayName?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Message */
messageId?: (OrderByDirection | null),
/** Person */
personId?: (OrderByDirection | null),
/** Workspace member */
workspaceMemberId?: (OrderByDirection | null)}


/** Message Participants */
export interface MessageParticipantOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (MessageParticipantOrderByWithGroupByAggregateInput | null),
/** Role */
role?: (OrderByDirection | null),
/** Handle */
handle?: (OrderByDirection | null),
/** Display Name */
displayName?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Message */
messageId?: (OrderByDirection | null),
/** Person */
personId?: (OrderByDirection | null),
/** Workspace member */
workspaceMemberId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface MessageParticipantOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for role */
countUniqueValuesRole?: (OrderByDirection | null),
/** Number of empty values for role */
countEmptyRole?: (OrderByDirection | null),
/** Number of non-empty values for role */
countNotEmptyRole?: (OrderByDirection | null),
/** Percentage of empty values for role */
percentageEmptyRole?: (OrderByDirection | null),
/** Percentage of non-empty values for role */
percentageNotEmptyRole?: (OrderByDirection | null),
/** Number of unique values for handle */
countUniqueValuesHandle?: (OrderByDirection | null),
/** Number of empty values for handle */
countEmptyHandle?: (OrderByDirection | null),
/** Number of non-empty values for handle */
countNotEmptyHandle?: (OrderByDirection | null),
/** Percentage of empty values for handle */
percentageEmptyHandle?: (OrderByDirection | null),
/** Percentage of non-empty values for handle */
percentageNotEmptyHandle?: (OrderByDirection | null),
/** Number of unique values for displayName */
countUniqueValuesDisplayName?: (OrderByDirection | null),
/** Number of empty values for displayName */
countEmptyDisplayName?: (OrderByDirection | null),
/** Number of non-empty values for displayName */
countNotEmptyDisplayName?: (OrderByDirection | null),
/** Percentage of empty values for displayName */
percentageEmptyDisplayName?: (OrderByDirection | null),
/** Percentage of non-empty values for displayName */
percentageNotEmptyDisplayName?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Message */
messageId?: (OrderByDirection | null),
/** Person */
personId?: (OrderByDirection | null),
/** Workspace member */
workspaceMemberId?: (OrderByDirection | null)}


/** Message Participants */
export interface MessageParticipantGroupByInput {
/** Role */
role?: (Scalars['Boolean'] | null),
/** Handle */
handle?: (Scalars['Boolean'] | null),
/** Display Name */
displayName?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Message */
messageId?: (Scalars['Boolean'] | null),
/** Person */
personId?: (Scalars['Boolean'] | null),
/** Workspace member */
workspaceMemberId?: (Scalars['Boolean'] | null)}


/** Folder for Message Channel */
export interface MessageFolderGenqlSelection{
    /** Folder name */
    name?: boolean | number
    /** Sync Cursor */
    syncCursor?: boolean | number
    /** Is Sent Folder */
    isSentFolder?: boolean | number
    /** Is Synced */
    isSynced?: boolean | number
    /** External ID */
    externalId?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Message Channel */
    messageChannelId?: boolean | number
    /** Message Channel */
    messageChannel?: MessageChannelGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Folder for Message Channel */
export interface MessageFolderEdgeGenqlSelection{
    node?: MessageFolderGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Folder for Message Channel */
export interface MessageFolderConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: boolean | number
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: boolean | number
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: boolean | number
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: boolean | number
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: boolean | number
    /** Number of unique values for isSentFolder */
    countUniqueValuesIsSentFolder?: boolean | number
    /** Number of empty values for isSentFolder */
    countEmptyIsSentFolder?: boolean | number
    /** Number of non-empty values for isSentFolder */
    countNotEmptyIsSentFolder?: boolean | number
    /** Percentage of empty values for isSentFolder */
    percentageEmptyIsSentFolder?: boolean | number
    /** Percentage of non-empty values for isSentFolder */
    percentageNotEmptyIsSentFolder?: boolean | number
    /** Count of true values in the field isSentFolder */
    countTrueIsSentFolder?: boolean | number
    /** Count of false values in the field isSentFolder */
    countFalseIsSentFolder?: boolean | number
    /** Number of unique values for isSynced */
    countUniqueValuesIsSynced?: boolean | number
    /** Number of empty values for isSynced */
    countEmptyIsSynced?: boolean | number
    /** Number of non-empty values for isSynced */
    countNotEmptyIsSynced?: boolean | number
    /** Percentage of empty values for isSynced */
    percentageEmptyIsSynced?: boolean | number
    /** Percentage of non-empty values for isSynced */
    percentageNotEmptyIsSynced?: boolean | number
    /** Count of true values in the field isSynced */
    countTrueIsSynced?: boolean | number
    /** Count of false values in the field isSynced */
    countFalseIsSynced?: boolean | number
    /** Number of unique values for externalId */
    countUniqueValuesExternalId?: boolean | number
    /** Number of empty values for externalId */
    countEmptyExternalId?: boolean | number
    /** Number of non-empty values for externalId */
    countNotEmptyExternalId?: boolean | number
    /** Percentage of empty values for externalId */
    percentageEmptyExternalId?: boolean | number
    /** Percentage of non-empty values for externalId */
    percentageNotEmptyExternalId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageFolderEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Folder for Message Channel */
export interface MessageFolderGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for syncCursor */
    countUniqueValuesSyncCursor?: boolean | number
    /** Number of empty values for syncCursor */
    countEmptySyncCursor?: boolean | number
    /** Number of non-empty values for syncCursor */
    countNotEmptySyncCursor?: boolean | number
    /** Percentage of empty values for syncCursor */
    percentageEmptySyncCursor?: boolean | number
    /** Percentage of non-empty values for syncCursor */
    percentageNotEmptySyncCursor?: boolean | number
    /** Number of unique values for isSentFolder */
    countUniqueValuesIsSentFolder?: boolean | number
    /** Number of empty values for isSentFolder */
    countEmptyIsSentFolder?: boolean | number
    /** Number of non-empty values for isSentFolder */
    countNotEmptyIsSentFolder?: boolean | number
    /** Percentage of empty values for isSentFolder */
    percentageEmptyIsSentFolder?: boolean | number
    /** Percentage of non-empty values for isSentFolder */
    percentageNotEmptyIsSentFolder?: boolean | number
    /** Count of true values in the field isSentFolder */
    countTrueIsSentFolder?: boolean | number
    /** Count of false values in the field isSentFolder */
    countFalseIsSentFolder?: boolean | number
    /** Number of unique values for isSynced */
    countUniqueValuesIsSynced?: boolean | number
    /** Number of empty values for isSynced */
    countEmptyIsSynced?: boolean | number
    /** Number of non-empty values for isSynced */
    countNotEmptyIsSynced?: boolean | number
    /** Percentage of empty values for isSynced */
    percentageEmptyIsSynced?: boolean | number
    /** Percentage of non-empty values for isSynced */
    percentageNotEmptyIsSynced?: boolean | number
    /** Count of true values in the field isSynced */
    countTrueIsSynced?: boolean | number
    /** Count of false values in the field isSynced */
    countFalseIsSynced?: boolean | number
    /** Number of unique values for externalId */
    countUniqueValuesExternalId?: boolean | number
    /** Number of empty values for externalId */
    countEmptyExternalId?: boolean | number
    /** Number of non-empty values for externalId */
    countNotEmptyExternalId?: boolean | number
    /** Percentage of empty values for externalId */
    percentageEmptyExternalId?: boolean | number
    /** Percentage of non-empty values for externalId */
    percentageNotEmptyExternalId?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageFolderEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MessageFolderRelationInput {
/** Connect to a messageFolder record */
connect?: (MessageFolderConnectInput | null),
/** Disconnect from a messageFolder record */
disconnect?: (Scalars['Boolean'] | null)}

export interface MessageFolderConnectInput {
/** Find a messageFolder record based on its unique fields: id */
where?: (MessageFolderWhereUniqueInput | null)}

export interface MessageFolderWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** Folder for Message Channel */
export interface MessageFolderCreateInput {
/** Folder name */
name?: (Scalars['String'] | null),
/** Sync Cursor */
syncCursor?: (Scalars['String'] | null),
/** Is Sent Folder */
isSentFolder?: (Scalars['Boolean'] | null),
/** Is Synced */
isSynced?: (Scalars['Boolean'] | null),
/** External ID */
externalId?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message Channel */
messageChannelId?: (Scalars['ID'] | null),
/** Message Channel */
messageChannel?: (MessageChannelRelationInput | null)}


/** Folder for Message Channel */
export interface MessageFolderUpdateInput {
/** Folder name */
name?: (Scalars['String'] | null),
/** Sync Cursor */
syncCursor?: (Scalars['String'] | null),
/** Is Sent Folder */
isSentFolder?: (Scalars['Boolean'] | null),
/** Is Synced */
isSynced?: (Scalars['Boolean'] | null),
/** External ID */
externalId?: (Scalars['String'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message Channel */
messageChannelId?: (Scalars['ID'] | null),
/** Message Channel */
messageChannel?: (MessageChannelRelationInput | null)}


/** Folder for Message Channel */
export interface MessageFolderFilterInput {
/** Folder name */
name?: (StringFilter | null),
/** Sync Cursor */
syncCursor?: (StringFilter | null),
/** Is Sent Folder */
isSentFolder?: (BooleanFilter | null),
/** Is Synced */
isSynced?: (BooleanFilter | null),
/** External ID */
externalId?: (StringFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Message Channel */
messageChannelId?: (UUIDFilter | null),and?: ((MessageFolderFilterInput | null)[] | null),or?: ((MessageFolderFilterInput | null)[] | null),not?: (MessageFolderFilterInput | null)}


/** Folder for Message Channel */
export interface MessageFolderOrderByInput {
/** Folder name */
name?: (OrderByDirection | null),
/** Sync Cursor */
syncCursor?: (OrderByDirection | null),
/** Is Sent Folder */
isSentFolder?: (OrderByDirection | null),
/** Is Synced */
isSynced?: (OrderByDirection | null),
/** External ID */
externalId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Message Channel */
messageChannelId?: (OrderByDirection | null)}


/** Folder for Message Channel */
export interface MessageFolderOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (MessageFolderOrderByWithGroupByAggregateInput | null),
/** Folder name */
name?: (OrderByDirection | null),
/** Sync Cursor */
syncCursor?: (OrderByDirection | null),
/** Is Sent Folder */
isSentFolder?: (OrderByDirection | null),
/** Is Synced */
isSynced?: (OrderByDirection | null),
/** External ID */
externalId?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Message Channel */
messageChannelId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface MessageFolderOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for syncCursor */
countUniqueValuesSyncCursor?: (OrderByDirection | null),
/** Number of empty values for syncCursor */
countEmptySyncCursor?: (OrderByDirection | null),
/** Number of non-empty values for syncCursor */
countNotEmptySyncCursor?: (OrderByDirection | null),
/** Percentage of empty values for syncCursor */
percentageEmptySyncCursor?: (OrderByDirection | null),
/** Percentage of non-empty values for syncCursor */
percentageNotEmptySyncCursor?: (OrderByDirection | null),
/** Number of unique values for isSentFolder */
countUniqueValuesIsSentFolder?: (OrderByDirection | null),
/** Number of empty values for isSentFolder */
countEmptyIsSentFolder?: (OrderByDirection | null),
/** Number of non-empty values for isSentFolder */
countNotEmptyIsSentFolder?: (OrderByDirection | null),
/** Percentage of empty values for isSentFolder */
percentageEmptyIsSentFolder?: (OrderByDirection | null),
/** Percentage of non-empty values for isSentFolder */
percentageNotEmptyIsSentFolder?: (OrderByDirection | null),
/** Count of true values in the field isSentFolder */
countTrueIsSentFolder?: (OrderByDirection | null),
/** Count of false values in the field isSentFolder */
countFalseIsSentFolder?: (OrderByDirection | null),
/** Number of unique values for isSynced */
countUniqueValuesIsSynced?: (OrderByDirection | null),
/** Number of empty values for isSynced */
countEmptyIsSynced?: (OrderByDirection | null),
/** Number of non-empty values for isSynced */
countNotEmptyIsSynced?: (OrderByDirection | null),
/** Percentage of empty values for isSynced */
percentageEmptyIsSynced?: (OrderByDirection | null),
/** Percentage of non-empty values for isSynced */
percentageNotEmptyIsSynced?: (OrderByDirection | null),
/** Count of true values in the field isSynced */
countTrueIsSynced?: (OrderByDirection | null),
/** Count of false values in the field isSynced */
countFalseIsSynced?: (OrderByDirection | null),
/** Number of unique values for externalId */
countUniqueValuesExternalId?: (OrderByDirection | null),
/** Number of empty values for externalId */
countEmptyExternalId?: (OrderByDirection | null),
/** Number of non-empty values for externalId */
countNotEmptyExternalId?: (OrderByDirection | null),
/** Percentage of empty values for externalId */
percentageEmptyExternalId?: (OrderByDirection | null),
/** Percentage of non-empty values for externalId */
percentageNotEmptyExternalId?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Message Channel */
messageChannelId?: (OrderByDirection | null)}


/** Folder for Message Channel */
export interface MessageFolderGroupByInput {
/** Folder name */
name?: (Scalars['Boolean'] | null),
/** Sync Cursor */
syncCursor?: (Scalars['Boolean'] | null),
/** Is Sent Folder */
isSentFolder?: (Scalars['Boolean'] | null),
/** Is Synced */
isSynced?: (Scalars['Boolean'] | null),
/** External ID */
externalId?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Message Channel */
messageChannelId?: (Scalars['Boolean'] | null)}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationGenqlSelection{
    /** Message id from the messaging provider */
    messageExternalId?: boolean | number
    /** Thread id from the messaging provider */
    messageThreadExternalId?: boolean | number
    /** Message Direction */
    direction?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Message Channel Id */
    messageChannelId?: boolean | number
    /** Message Id */
    messageId?: boolean | number
    /** Message Channel Id */
    messageChannel?: MessageChannelGenqlSelection
    /** Message Id */
    message?: MessageGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationEdgeGenqlSelection{
    node?: MessageChannelMessageAssociationGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for messageExternalId */
    countUniqueValuesMessageExternalId?: boolean | number
    /** Number of empty values for messageExternalId */
    countEmptyMessageExternalId?: boolean | number
    /** Number of non-empty values for messageExternalId */
    countNotEmptyMessageExternalId?: boolean | number
    /** Percentage of empty values for messageExternalId */
    percentageEmptyMessageExternalId?: boolean | number
    /** Percentage of non-empty values for messageExternalId */
    percentageNotEmptyMessageExternalId?: boolean | number
    /** Number of unique values for messageThreadExternalId */
    countUniqueValuesMessageThreadExternalId?: boolean | number
    /** Number of empty values for messageThreadExternalId */
    countEmptyMessageThreadExternalId?: boolean | number
    /** Number of non-empty values for messageThreadExternalId */
    countNotEmptyMessageThreadExternalId?: boolean | number
    /** Percentage of empty values for messageThreadExternalId */
    percentageEmptyMessageThreadExternalId?: boolean | number
    /** Percentage of non-empty values for messageThreadExternalId */
    percentageNotEmptyMessageThreadExternalId?: boolean | number
    /** Number of unique values for direction */
    countUniqueValuesDirection?: boolean | number
    /** Number of empty values for direction */
    countEmptyDirection?: boolean | number
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: boolean | number
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: boolean | number
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageChannelMessageAssociationEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for messageExternalId */
    countUniqueValuesMessageExternalId?: boolean | number
    /** Number of empty values for messageExternalId */
    countEmptyMessageExternalId?: boolean | number
    /** Number of non-empty values for messageExternalId */
    countNotEmptyMessageExternalId?: boolean | number
    /** Percentage of empty values for messageExternalId */
    percentageEmptyMessageExternalId?: boolean | number
    /** Percentage of non-empty values for messageExternalId */
    percentageNotEmptyMessageExternalId?: boolean | number
    /** Number of unique values for messageThreadExternalId */
    countUniqueValuesMessageThreadExternalId?: boolean | number
    /** Number of empty values for messageThreadExternalId */
    countEmptyMessageThreadExternalId?: boolean | number
    /** Number of non-empty values for messageThreadExternalId */
    countNotEmptyMessageThreadExternalId?: boolean | number
    /** Percentage of empty values for messageThreadExternalId */
    percentageEmptyMessageThreadExternalId?: boolean | number
    /** Percentage of non-empty values for messageThreadExternalId */
    percentageNotEmptyMessageThreadExternalId?: boolean | number
    /** Number of unique values for direction */
    countUniqueValuesDirection?: boolean | number
    /** Number of empty values for direction */
    countEmptyDirection?: boolean | number
    /** Number of non-empty values for direction */
    countNotEmptyDirection?: boolean | number
    /** Percentage of empty values for direction */
    percentageEmptyDirection?: boolean | number
    /** Percentage of non-empty values for direction */
    percentageNotEmptyDirection?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: MessageChannelMessageAssociationEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface MessageChannelMessageAssociationRelationInput {
/** Connect to a messageChannelMessageAssociation record */
connect?: (MessageChannelMessageAssociationConnectInput | null),
/** Disconnect from a messageChannelMessageAssociation record */
disconnect?: (Scalars['Boolean'] | null)}

export interface MessageChannelMessageAssociationConnectInput {
/** Find a messageChannelMessageAssociation record based on its unique fields: id or messageChannel and message */
where?: (MessageChannelMessageAssociationWhereUniqueInput | null)}

export interface MessageChannelMessageAssociationWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null),
/** Connect by Message Channel Id */
messageChannel?: (Scalars['ID'] | null),
/** Connect by Message Id */
message?: (Scalars['ID'] | null)}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationCreateInput {
/** Message id from the messaging provider */
messageExternalId?: (Scalars['String'] | null),
/** Thread id from the messaging provider */
messageThreadExternalId?: (Scalars['String'] | null),
/** Message Direction */
direction?: (MessageChannelMessageAssociationDirectionEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message Channel Id */
messageChannelId?: (Scalars['ID'] | null),
/** Message Channel Id */
messageChannel?: (MessageChannelRelationInput | null),
/** Message Id */
messageId?: (Scalars['ID'] | null),
/** Message Id */
message?: (MessageRelationInput | null)}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationUpdateInput {
/** Message id from the messaging provider */
messageExternalId?: (Scalars['String'] | null),
/** Thread id from the messaging provider */
messageThreadExternalId?: (Scalars['String'] | null),
/** Message Direction */
direction?: (MessageChannelMessageAssociationDirectionEnum | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Message Channel Id */
messageChannelId?: (Scalars['ID'] | null),
/** Message Channel Id */
messageChannel?: (MessageChannelRelationInput | null),
/** Message Id */
messageId?: (Scalars['ID'] | null),
/** Message Id */
message?: (MessageRelationInput | null)}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationFilterInput {
/** Message id from the messaging provider */
messageExternalId?: (StringFilter | null),
/** Thread id from the messaging provider */
messageThreadExternalId?: (StringFilter | null),
/** Message Direction */
direction?: (MessageChannelMessageAssociationDirectionEnumFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Message Channel Id */
messageChannelId?: (UUIDFilter | null),
/** Message Id */
messageId?: (UUIDFilter | null),and?: ((MessageChannelMessageAssociationFilterInput | null)[] | null),or?: ((MessageChannelMessageAssociationFilterInput | null)[] | null),not?: (MessageChannelMessageAssociationFilterInput | null)}

export interface MessageChannelMessageAssociationDirectionEnumFilter {eq?: (MessageChannelMessageAssociationDirectionEnum | null),neq?: (MessageChannelMessageAssociationDirectionEnum | null),in?: ((MessageChannelMessageAssociationDirectionEnum | null)[] | null),containsAny?: ((MessageChannelMessageAssociationDirectionEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationOrderByInput {
/** Message id from the messaging provider */
messageExternalId?: (OrderByDirection | null),
/** Thread id from the messaging provider */
messageThreadExternalId?: (OrderByDirection | null),
/** Message Direction */
direction?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Message Channel Id */
messageChannelId?: (OrderByDirection | null),
/** Message Id */
messageId?: (OrderByDirection | null)}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (MessageChannelMessageAssociationOrderByWithGroupByAggregateInput | null),
/** Message id from the messaging provider */
messageExternalId?: (OrderByDirection | null),
/** Thread id from the messaging provider */
messageThreadExternalId?: (OrderByDirection | null),
/** Message Direction */
direction?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Message Channel Id */
messageChannelId?: (OrderByDirection | null),
/** Message Id */
messageId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface MessageChannelMessageAssociationOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for messageExternalId */
countUniqueValuesMessageExternalId?: (OrderByDirection | null),
/** Number of empty values for messageExternalId */
countEmptyMessageExternalId?: (OrderByDirection | null),
/** Number of non-empty values for messageExternalId */
countNotEmptyMessageExternalId?: (OrderByDirection | null),
/** Percentage of empty values for messageExternalId */
percentageEmptyMessageExternalId?: (OrderByDirection | null),
/** Percentage of non-empty values for messageExternalId */
percentageNotEmptyMessageExternalId?: (OrderByDirection | null),
/** Number of unique values for messageThreadExternalId */
countUniqueValuesMessageThreadExternalId?: (OrderByDirection | null),
/** Number of empty values for messageThreadExternalId */
countEmptyMessageThreadExternalId?: (OrderByDirection | null),
/** Number of non-empty values for messageThreadExternalId */
countNotEmptyMessageThreadExternalId?: (OrderByDirection | null),
/** Percentage of empty values for messageThreadExternalId */
percentageEmptyMessageThreadExternalId?: (OrderByDirection | null),
/** Percentage of non-empty values for messageThreadExternalId */
percentageNotEmptyMessageThreadExternalId?: (OrderByDirection | null),
/** Number of unique values for direction */
countUniqueValuesDirection?: (OrderByDirection | null),
/** Number of empty values for direction */
countEmptyDirection?: (OrderByDirection | null),
/** Number of non-empty values for direction */
countNotEmptyDirection?: (OrderByDirection | null),
/** Percentage of empty values for direction */
percentageEmptyDirection?: (OrderByDirection | null),
/** Percentage of non-empty values for direction */
percentageNotEmptyDirection?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Message Channel Id */
messageChannelId?: (OrderByDirection | null),
/** Message Id */
messageId?: (OrderByDirection | null)}


/** Message Synced with a Message Channel */
export interface MessageChannelMessageAssociationGroupByInput {
/** Message id from the messaging provider */
messageExternalId?: (Scalars['Boolean'] | null),
/** Thread id from the messaging provider */
messageThreadExternalId?: (Scalars['Boolean'] | null),
/** Message Direction */
direction?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Message Channel Id */
messageChannelId?: (Scalars['Boolean'] | null),
/** Message Id */
messageId?: (Scalars['Boolean'] | null)}


/** A note */
export interface NoteGenqlSelection{
    /** Note record position */
    position?: boolean | number
    /** Note title */
    title?: boolean | number
    /** Note body */
    bodyV2?: RichTextV2GenqlSelection
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Note targets */
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    /** Note attachments */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** Timeline Activities linked to the note. */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    /** Favorites linked to the note */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A note */
export interface NoteEdgeGenqlSelection{
    node?: NoteGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A note */
export interface NoteConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: boolean | number
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: boolean | number
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: boolean | number
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: boolean | number
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: NoteEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A note */
export interface NoteGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: boolean | number
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: boolean | number
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: boolean | number
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: boolean | number
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: NoteEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NoteRelationInput {
/** Connect to a note record */
connect?: (NoteConnectInput | null),
/** Disconnect from a note record */
disconnect?: (Scalars['Boolean'] | null)}

export interface NoteConnectInput {
/** Find a note record based on its unique fields: id */
where?: (NoteWhereUniqueInput | null)}

export interface NoteWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A note */
export interface NoteCreateInput {
/** Note record position */
position?: (Scalars['Position'] | null),
/** Note title */
title?: (Scalars['String'] | null),
/** Note body */
bodyV2?: (RichTextV2CreateInput | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A note */
export interface NoteUpdateInput {
/** Note record position */
position?: (Scalars['Position'] | null),
/** Note title */
title?: (Scalars['String'] | null),
/** Note body */
bodyV2?: (RichTextV2UpdateInput | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null)}


/** A note */
export interface NoteFilterInput {
/** Note record position */
position?: (FloatFilter | null),
/** Note title */
title?: (StringFilter | null),
/** Note body */
bodyV2?: (RichTextV2FilterInput | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),and?: ((NoteFilterInput | null)[] | null),or?: ((NoteFilterInput | null)[] | null),not?: (NoteFilterInput | null)}


/** A note */
export interface NoteOrderByInput {
/** Note record position */
position?: (OrderByDirection | null),
/** Note title */
title?: (OrderByDirection | null),
/** Note body */
bodyV2?: (RichTextV2OrderByInput | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null)}


/** A note */
export interface NoteOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (NoteOrderByWithGroupByAggregateInput | null),
/** Note record position */
position?: (OrderByDirection | null),
/** Note title */
title?: (OrderByDirection | null),
/** Note body */
bodyV2?: (RichTextV2OrderByInput | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null)}


/** Aggregate-based ordering */
export interface NoteOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for title */
countUniqueValuesTitle?: (OrderByDirection | null),
/** Number of empty values for title */
countEmptyTitle?: (OrderByDirection | null),
/** Number of non-empty values for title */
countNotEmptyTitle?: (OrderByDirection | null),
/** Percentage of empty values for title */
percentageEmptyTitle?: (OrderByDirection | null),
/** Percentage of non-empty values for title */
percentageNotEmptyTitle?: (OrderByDirection | null),
/** Number of unique values for bodyV2 */
countUniqueValuesBodyV2?: (OrderByDirection | null),
/** Number of empty values for bodyV2 */
countEmptyBodyV2?: (OrderByDirection | null),
/** Number of non-empty values for bodyV2 */
countNotEmptyBodyV2?: (OrderByDirection | null),
/** Percentage of empty values for bodyV2 */
percentageEmptyBodyV2?: (OrderByDirection | null),
/** Percentage of non-empty values for bodyV2 */
percentageNotEmptyBodyV2?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null)}


/** A note */
export interface NoteGroupByInput {
/** Note record position */
position?: (Scalars['Boolean'] | null),
/** Note title */
title?: (Scalars['Boolean'] | null),
/** Note body */
bodyV2?: (RichTextV2GroupByInput | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null)}


/** A note target */
export interface NoteTargetGenqlSelection{
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** NoteTarget note */
    noteId?: boolean | number
    /** NoteTarget person */
    personId?: boolean | number
    /** NoteTarget company */
    companyId?: boolean | number
    /** NoteTarget opportunity */
    opportunityId?: boolean | number
    /** NoteTargets Rocket */
    rocketId?: boolean | number
    /** NoteTargets Pet */
    petId?: boolean | number
    /** NoteTargets Survey result */
    surveyResultId?: boolean | number
    /** NoteTarget note */
    note?: NoteGenqlSelection
    /** NoteTarget person */
    person?: PersonGenqlSelection
    /** NoteTarget company */
    company?: CompanyGenqlSelection
    /** NoteTarget opportunity */
    opportunity?: OpportunityGenqlSelection
    /** NoteTargets Rocket */
    rocket?: RocketGenqlSelection
    /** NoteTargets Pet */
    pet?: PetGenqlSelection
    /** NoteTargets Survey result */
    surveyResult?: SurveyResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A note target */
export interface NoteTargetEdgeGenqlSelection{
    node?: NoteTargetGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A note target */
export interface NoteTargetConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: NoteTargetEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A note target */
export interface NoteTargetGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: NoteTargetEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface NoteTargetRelationInput {
/** Connect to a noteTarget record */
connect?: (NoteTargetConnectInput | null),
/** Disconnect from a noteTarget record */
disconnect?: (Scalars['Boolean'] | null)}

export interface NoteTargetConnectInput {
/** Find a noteTarget record based on its unique fields: id */
where?: (NoteTargetWhereUniqueInput | null)}

export interface NoteTargetWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A note target */
export interface NoteTargetCreateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** NoteTarget note */
noteId?: (Scalars['ID'] | null),
/** NoteTarget note */
note?: (NoteRelationInput | null),
/** NoteTarget person */
personId?: (Scalars['ID'] | null),
/** NoteTarget person */
person?: (PersonRelationInput | null),
/** NoteTarget company */
companyId?: (Scalars['ID'] | null),
/** NoteTarget company */
company?: (CompanyRelationInput | null),
/** NoteTarget opportunity */
opportunityId?: (Scalars['ID'] | null),
/** NoteTarget opportunity */
opportunity?: (OpportunityRelationInput | null),
/** NoteTargets Rocket */
rocketId?: (Scalars['ID'] | null),
/** NoteTargets Rocket */
rocket?: (RocketRelationInput | null),
/** NoteTargets Pet */
petId?: (Scalars['ID'] | null),
/** NoteTargets Pet */
pet?: (PetRelationInput | null),
/** NoteTargets Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** NoteTargets Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** A note target */
export interface NoteTargetUpdateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** NoteTarget note */
noteId?: (Scalars['ID'] | null),
/** NoteTarget note */
note?: (NoteRelationInput | null),
/** NoteTarget person */
personId?: (Scalars['ID'] | null),
/** NoteTarget person */
person?: (PersonRelationInput | null),
/** NoteTarget company */
companyId?: (Scalars['ID'] | null),
/** NoteTarget company */
company?: (CompanyRelationInput | null),
/** NoteTarget opportunity */
opportunityId?: (Scalars['ID'] | null),
/** NoteTarget opportunity */
opportunity?: (OpportunityRelationInput | null),
/** NoteTargets Rocket */
rocketId?: (Scalars['ID'] | null),
/** NoteTargets Rocket */
rocket?: (RocketRelationInput | null),
/** NoteTargets Pet */
petId?: (Scalars['ID'] | null),
/** NoteTargets Pet */
pet?: (PetRelationInput | null),
/** NoteTargets Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** NoteTargets Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** A note target */
export interface NoteTargetFilterInput {
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** NoteTarget note */
noteId?: (UUIDFilter | null),
/** NoteTarget person */
personId?: (UUIDFilter | null),
/** NoteTarget company */
companyId?: (UUIDFilter | null),
/** NoteTarget opportunity */
opportunityId?: (UUIDFilter | null),
/** NoteTargets Rocket */
rocketId?: (UUIDFilter | null),
/** NoteTargets Pet */
petId?: (UUIDFilter | null),
/** NoteTargets Survey result */
surveyResultId?: (UUIDFilter | null),and?: ((NoteTargetFilterInput | null)[] | null),or?: ((NoteTargetFilterInput | null)[] | null),not?: (NoteTargetFilterInput | null)}


/** A note target */
export interface NoteTargetOrderByInput {
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** NoteTarget note */
noteId?: (OrderByDirection | null),
/** NoteTarget person */
personId?: (OrderByDirection | null),
/** NoteTarget company */
companyId?: (OrderByDirection | null),
/** NoteTarget opportunity */
opportunityId?: (OrderByDirection | null),
/** NoteTargets Rocket */
rocketId?: (OrderByDirection | null),
/** NoteTargets Pet */
petId?: (OrderByDirection | null),
/** NoteTargets Survey result */
surveyResultId?: (OrderByDirection | null)}


/** A note target */
export interface NoteTargetOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (NoteTargetOrderByWithGroupByAggregateInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** NoteTarget note */
noteId?: (OrderByDirection | null),
/** NoteTarget person */
personId?: (OrderByDirection | null),
/** NoteTarget company */
companyId?: (OrderByDirection | null),
/** NoteTarget opportunity */
opportunityId?: (OrderByDirection | null),
/** NoteTargets Rocket */
rocketId?: (OrderByDirection | null),
/** NoteTargets Pet */
petId?: (OrderByDirection | null),
/** NoteTargets Survey result */
surveyResultId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface NoteTargetOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** NoteTarget note */
noteId?: (OrderByDirection | null),
/** NoteTarget person */
personId?: (OrderByDirection | null),
/** NoteTarget company */
companyId?: (OrderByDirection | null),
/** NoteTarget opportunity */
opportunityId?: (OrderByDirection | null),
/** NoteTargets Rocket */
rocketId?: (OrderByDirection | null),
/** NoteTargets Pet */
petId?: (OrderByDirection | null),
/** NoteTargets Survey result */
surveyResultId?: (OrderByDirection | null)}


/** A note target */
export interface NoteTargetGroupByInput {
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** NoteTarget note */
noteId?: (Scalars['Boolean'] | null),
/** NoteTarget person */
personId?: (Scalars['Boolean'] | null),
/** NoteTarget company */
companyId?: (Scalars['Boolean'] | null),
/** NoteTarget opportunity */
opportunityId?: (Scalars['Boolean'] | null),
/** NoteTargets Rocket */
rocketId?: (Scalars['Boolean'] | null),
/** NoteTargets Pet */
petId?: (Scalars['Boolean'] | null),
/** NoteTargets Survey result */
surveyResultId?: (Scalars['Boolean'] | null)}


/** An opportunity */
export interface OpportunityGenqlSelection{
    /** The opportunity name */
    name?: boolean | number
    /** Opportunity amount */
    amount?: CurrencyGenqlSelection
    /** Opportunity close date */
    closeDate?: boolean | number
    /** Opportunity stage */
    stage?: boolean | number
    /** Opportunity record position */
    position?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Opportunity point of contact */
    pointOfContactId?: boolean | number
    /** Opportunity company */
    companyId?: boolean | number
    /** Opportunity point of contact */
    pointOfContact?: PersonGenqlSelection
    /** Opportunity company */
    company?: CompanyGenqlSelection
    /** Favorites linked to the opportunity */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Tasks tied to the opportunity */
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    /** Notes tied to the opportunity */
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    /** Attachments linked to the opportunity */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** Timeline Activities linked to the opportunity. */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An opportunity */
export interface OpportunityEdgeGenqlSelection{
    node?: OpportunityGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An opportunity */
export interface OpportunityConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for amount */
    countUniqueValuesAmount?: boolean | number
    /** Number of empty values for amount */
    countEmptyAmount?: boolean | number
    /** Number of non-empty values for amount */
    countNotEmptyAmount?: boolean | number
    /** Percentage of empty values for amount */
    percentageEmptyAmount?: boolean | number
    /** Percentage of non-empty values for amount */
    percentageNotEmptyAmount?: boolean | number
    /** Minimum amount contained in the field amount */
    minAmountAmountMicros?: boolean | number
    /** Maximal amount contained in the field amount */
    maxAmountAmountMicros?: boolean | number
    /** Sum of amounts contained in the field amount */
    sumAmountAmountMicros?: boolean | number
    /** Average amount contained in the field amount */
    avgAmountAmountMicros?: boolean | number
    /** Number of unique values for closeDate */
    countUniqueValuesCloseDate?: boolean | number
    /** Number of empty values for closeDate */
    countEmptyCloseDate?: boolean | number
    /** Number of non-empty values for closeDate */
    countNotEmptyCloseDate?: boolean | number
    /** Percentage of empty values for closeDate */
    percentageEmptyCloseDate?: boolean | number
    /** Percentage of non-empty values for closeDate */
    percentageNotEmptyCloseDate?: boolean | number
    /** Earliest date contained in the field closeDate */
    minCloseDate?: boolean | number
    /** Latest date contained in the field closeDate */
    maxCloseDate?: boolean | number
    /** Number of unique values for stage */
    countUniqueValuesStage?: boolean | number
    /** Number of empty values for stage */
    countEmptyStage?: boolean | number
    /** Number of non-empty values for stage */
    countNotEmptyStage?: boolean | number
    /** Percentage of empty values for stage */
    percentageEmptyStage?: boolean | number
    /** Percentage of non-empty values for stage */
    percentageNotEmptyStage?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: OpportunityEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** An opportunity */
export interface OpportunityGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for amount */
    countUniqueValuesAmount?: boolean | number
    /** Number of empty values for amount */
    countEmptyAmount?: boolean | number
    /** Number of non-empty values for amount */
    countNotEmptyAmount?: boolean | number
    /** Percentage of empty values for amount */
    percentageEmptyAmount?: boolean | number
    /** Percentage of non-empty values for amount */
    percentageNotEmptyAmount?: boolean | number
    /** Minimum amount contained in the field amount */
    minAmountAmountMicros?: boolean | number
    /** Maximal amount contained in the field amount */
    maxAmountAmountMicros?: boolean | number
    /** Sum of amounts contained in the field amount */
    sumAmountAmountMicros?: boolean | number
    /** Average amount contained in the field amount */
    avgAmountAmountMicros?: boolean | number
    /** Number of unique values for closeDate */
    countUniqueValuesCloseDate?: boolean | number
    /** Number of empty values for closeDate */
    countEmptyCloseDate?: boolean | number
    /** Number of non-empty values for closeDate */
    countNotEmptyCloseDate?: boolean | number
    /** Percentage of empty values for closeDate */
    percentageEmptyCloseDate?: boolean | number
    /** Percentage of non-empty values for closeDate */
    percentageNotEmptyCloseDate?: boolean | number
    /** Earliest date contained in the field closeDate */
    minCloseDate?: boolean | number
    /** Latest date contained in the field closeDate */
    maxCloseDate?: boolean | number
    /** Number of unique values for stage */
    countUniqueValuesStage?: boolean | number
    /** Number of empty values for stage */
    countEmptyStage?: boolean | number
    /** Number of non-empty values for stage */
    countNotEmptyStage?: boolean | number
    /** Percentage of empty values for stage */
    percentageEmptyStage?: boolean | number
    /** Percentage of non-empty values for stage */
    percentageNotEmptyStage?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: OpportunityEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface OpportunityRelationInput {
/** Connect to a opportunity record */
connect?: (OpportunityConnectInput | null),
/** Disconnect from a opportunity record */
disconnect?: (Scalars['Boolean'] | null)}

export interface OpportunityConnectInput {
/** Find a opportunity record based on its unique fields: id */
where?: (OpportunityWhereUniqueInput | null)}

export interface OpportunityWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** An opportunity */
export interface OpportunityCreateInput {
/** The opportunity name */
name?: (Scalars['String'] | null),
/** Opportunity amount */
amount?: (CurrencyCreateInput | null),
/** Opportunity close date */
closeDate?: (Scalars['DateTime'] | null),
/** Opportunity stage */
stage?: (OpportunityStageEnum | null),
/** Opportunity record position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Opportunity point of contact */
pointOfContactId?: (Scalars['ID'] | null),
/** Opportunity point of contact */
pointOfContact?: (PersonRelationInput | null),
/** Opportunity company */
companyId?: (Scalars['ID'] | null),
/** Opportunity company */
company?: (CompanyRelationInput | null)}


/** An opportunity */
export interface OpportunityUpdateInput {
/** The opportunity name */
name?: (Scalars['String'] | null),
/** Opportunity amount */
amount?: (CurrencyUpdateInput | null),
/** Opportunity close date */
closeDate?: (Scalars['DateTime'] | null),
/** Opportunity stage */
stage?: (OpportunityStageEnum | null),
/** Opportunity record position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Opportunity point of contact */
pointOfContactId?: (Scalars['ID'] | null),
/** Opportunity point of contact */
pointOfContact?: (PersonRelationInput | null),
/** Opportunity company */
companyId?: (Scalars['ID'] | null),
/** Opportunity company */
company?: (CompanyRelationInput | null)}


/** An opportunity */
export interface OpportunityFilterInput {
/** The opportunity name */
name?: (StringFilter | null),
/** Opportunity amount */
amount?: (CurrencyFilterInput | null),
/** Opportunity close date */
closeDate?: (DateFilter | null),
/** Opportunity stage */
stage?: (OpportunityStageEnumFilter | null),
/** Opportunity record position */
position?: (FloatFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Opportunity point of contact */
pointOfContactId?: (UUIDFilter | null),
/** Opportunity company */
companyId?: (UUIDFilter | null),and?: ((OpportunityFilterInput | null)[] | null),or?: ((OpportunityFilterInput | null)[] | null),not?: (OpportunityFilterInput | null)}

export interface OpportunityStageEnumFilter {eq?: (OpportunityStageEnum | null),neq?: (OpportunityStageEnum | null),in?: ((OpportunityStageEnum | null)[] | null),containsAny?: ((OpportunityStageEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** An opportunity */
export interface OpportunityOrderByInput {
/** The opportunity name */
name?: (OrderByDirection | null),
/** Opportunity amount */
amount?: (CurrencyOrderByInput | null),
/** Opportunity close date */
closeDate?: (OrderByDirection | null),
/** Opportunity stage */
stage?: (OrderByDirection | null),
/** Opportunity record position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Opportunity point of contact */
pointOfContactId?: (OrderByDirection | null),
/** Opportunity company */
companyId?: (OrderByDirection | null)}


/** An opportunity */
export interface OpportunityOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (OpportunityOrderByWithGroupByAggregateInput | null),
/** The opportunity name */
name?: (OrderByDirection | null),
/** Opportunity amount */
amount?: (CurrencyOrderByInput | null),
/** Opportunity close date */
closeDate?: (OrderByDateGranularityInput | null),
/** Opportunity stage */
stage?: (OrderByDirection | null),
/** Opportunity record position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Opportunity point of contact */
pointOfContactId?: (OrderByDirection | null),
/** Opportunity company */
companyId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface OpportunityOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for amount */
countUniqueValuesAmount?: (OrderByDirection | null),
/** Number of empty values for amount */
countEmptyAmount?: (OrderByDirection | null),
/** Number of non-empty values for amount */
countNotEmptyAmount?: (OrderByDirection | null),
/** Percentage of empty values for amount */
percentageEmptyAmount?: (OrderByDirection | null),
/** Percentage of non-empty values for amount */
percentageNotEmptyAmount?: (OrderByDirection | null),
/** Minimum amount contained in the field amount */
minAmountAmountMicros?: (OrderByDirection | null),
/** Maximal amount contained in the field amount */
maxAmountAmountMicros?: (OrderByDirection | null),
/** Sum of amounts contained in the field amount */
sumAmountAmountMicros?: (OrderByDirection | null),
/** Average amount contained in the field amount */
avgAmountAmountMicros?: (OrderByDirection | null),
/** Number of unique values for closeDate */
countUniqueValuesCloseDate?: (OrderByDirection | null),
/** Number of empty values for closeDate */
countEmptyCloseDate?: (OrderByDirection | null),
/** Number of non-empty values for closeDate */
countNotEmptyCloseDate?: (OrderByDirection | null),
/** Percentage of empty values for closeDate */
percentageEmptyCloseDate?: (OrderByDirection | null),
/** Percentage of non-empty values for closeDate */
percentageNotEmptyCloseDate?: (OrderByDirection | null),
/** Earliest date contained in the field closeDate */
minCloseDate?: (OrderByDirection | null),
/** Latest date contained in the field closeDate */
maxCloseDate?: (OrderByDirection | null),
/** Number of unique values for stage */
countUniqueValuesStage?: (OrderByDirection | null),
/** Number of empty values for stage */
countEmptyStage?: (OrderByDirection | null),
/** Number of non-empty values for stage */
countNotEmptyStage?: (OrderByDirection | null),
/** Percentage of empty values for stage */
percentageEmptyStage?: (OrderByDirection | null),
/** Percentage of non-empty values for stage */
percentageNotEmptyStage?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Opportunity point of contact */
pointOfContactId?: (OrderByDirection | null),
/** Opportunity company */
companyId?: (OrderByDirection | null)}


/** An opportunity */
export interface OpportunityGroupByInput {
/** The opportunity name */
name?: (Scalars['Boolean'] | null),
/** Opportunity amount */
amount?: (CurrencyGroupByInput | null),
/** Opportunity close date */
closeDate?: (GroupByDateGranularityInput | null),
/** Opportunity stage */
stage?: (Scalars['Boolean'] | null),
/** Opportunity record position */
position?: (Scalars['Boolean'] | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Opportunity point of contact */
pointOfContactId?: (Scalars['Boolean'] | null),
/** Opportunity company */
companyId?: (Scalars['Boolean'] | null)}


/** A person */
export interface PersonGenqlSelection{
    /** Contact’s name */
    name?: FullNameGenqlSelection
    /** Contact’s Emails */
    emails?: EmailsGenqlSelection
    /** Contact’s Linkedin account */
    linkedinLink?: LinksGenqlSelection
    /** Contact’s X/Twitter account */
    xLink?: LinksGenqlSelection
    /** Contact’s job title */
    jobTitle?: boolean | number
    /** Contact’s phone numbers */
    phones?: PhonesGenqlSelection
    /** Contact’s city */
    city?: boolean | number
    /** Contact’s avatar */
    avatarUrl?: boolean | number
    /** Person record Position */
    position?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Contact’s company */
    companyId?: boolean | number
    /** Contact's Intro */
    intro?: boolean | number
    /** Contact's Whatsapp Number */
    whatsapp?: PhonesGenqlSelection
    /** Person's Work Preference */
    workPreference?: boolean | number
    /** Person's Performance Rating */
    performanceRating?: boolean | number
    /** Contact’s company */
    company?: CompanyGenqlSelection
    /** List of opportunities for which that person is the point of contact */
    pointOfContactForOpportunities?: (OpportunityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (OpportunityFilterInput | null), orderBy?: ((OpportunityOrderByInput | null)[] | null)} })
    /** Tasks tied to the contact */
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    /** Notes tied to the contact */
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    /** Favorites linked to the contact */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Attachments linked to the contact. */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** Message Participants */
    messageParticipants?: (MessageParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (MessageParticipantFilterInput | null), orderBy?: ((MessageParticipantOrderByInput | null)[] | null)} })
    /** Calendar Event Participants */
    calendarEventParticipants?: (CalendarEventParticipantConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (CalendarEventParticipantFilterInput | null), orderBy?: ((CalendarEventParticipantOrderByInput | null)[] | null)} })
    /** Events linked to the person */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A person */
export interface PersonEdgeGenqlSelection{
    node?: PersonGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A person */
export interface PersonConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for emails */
    countUniqueValuesEmails?: boolean | number
    /** Number of empty values for emails */
    countEmptyEmails?: boolean | number
    /** Number of non-empty values for emails */
    countNotEmptyEmails?: boolean | number
    /** Percentage of empty values for emails */
    percentageEmptyEmails?: boolean | number
    /** Percentage of non-empty values for emails */
    percentageNotEmptyEmails?: boolean | number
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: boolean | number
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: boolean | number
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: boolean | number
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: boolean | number
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: boolean | number
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: boolean | number
    /** Number of empty values for xLink */
    countEmptyXLink?: boolean | number
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: boolean | number
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: boolean | number
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: boolean | number
    /** Number of unique values for jobTitle */
    countUniqueValuesJobTitle?: boolean | number
    /** Number of empty values for jobTitle */
    countEmptyJobTitle?: boolean | number
    /** Number of non-empty values for jobTitle */
    countNotEmptyJobTitle?: boolean | number
    /** Percentage of empty values for jobTitle */
    percentageEmptyJobTitle?: boolean | number
    /** Percentage of non-empty values for jobTitle */
    percentageNotEmptyJobTitle?: boolean | number
    /** Number of unique values for phones */
    countUniqueValuesPhones?: boolean | number
    /** Number of empty values for phones */
    countEmptyPhones?: boolean | number
    /** Number of non-empty values for phones */
    countNotEmptyPhones?: boolean | number
    /** Percentage of empty values for phones */
    percentageEmptyPhones?: boolean | number
    /** Percentage of non-empty values for phones */
    percentageNotEmptyPhones?: boolean | number
    /** Number of unique values for city */
    countUniqueValuesCity?: boolean | number
    /** Number of empty values for city */
    countEmptyCity?: boolean | number
    /** Number of non-empty values for city */
    countNotEmptyCity?: boolean | number
    /** Percentage of empty values for city */
    percentageEmptyCity?: boolean | number
    /** Percentage of non-empty values for city */
    percentageNotEmptyCity?: boolean | number
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: boolean | number
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: boolean | number
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: boolean | number
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: boolean | number
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for intro */
    countUniqueValuesIntro?: boolean | number
    /** Number of empty values for intro */
    countEmptyIntro?: boolean | number
    /** Number of non-empty values for intro */
    countNotEmptyIntro?: boolean | number
    /** Percentage of empty values for intro */
    percentageEmptyIntro?: boolean | number
    /** Percentage of non-empty values for intro */
    percentageNotEmptyIntro?: boolean | number
    /** Number of unique values for whatsapp */
    countUniqueValuesWhatsapp?: boolean | number
    /** Number of empty values for whatsapp */
    countEmptyWhatsapp?: boolean | number
    /** Number of non-empty values for whatsapp */
    countNotEmptyWhatsapp?: boolean | number
    /** Percentage of empty values for whatsapp */
    percentageEmptyWhatsapp?: boolean | number
    /** Percentage of non-empty values for whatsapp */
    percentageNotEmptyWhatsapp?: boolean | number
    /** Number of unique values for workPreference */
    countUniqueValuesWorkPreference?: boolean | number
    /** Number of empty values for workPreference */
    countEmptyWorkPreference?: boolean | number
    /** Number of non-empty values for workPreference */
    countNotEmptyWorkPreference?: boolean | number
    /** Percentage of empty values for workPreference */
    percentageEmptyWorkPreference?: boolean | number
    /** Percentage of non-empty values for workPreference */
    percentageNotEmptyWorkPreference?: boolean | number
    /** Number of unique values for performanceRating */
    countUniqueValuesPerformanceRating?: boolean | number
    /** Number of empty values for performanceRating */
    countEmptyPerformanceRating?: boolean | number
    /** Number of non-empty values for performanceRating */
    countNotEmptyPerformanceRating?: boolean | number
    /** Percentage of empty values for performanceRating */
    percentageEmptyPerformanceRating?: boolean | number
    /** Percentage of non-empty values for performanceRating */
    percentageNotEmptyPerformanceRating?: boolean | number
    edges?: PersonEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A person */
export interface PersonGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for emails */
    countUniqueValuesEmails?: boolean | number
    /** Number of empty values for emails */
    countEmptyEmails?: boolean | number
    /** Number of non-empty values for emails */
    countNotEmptyEmails?: boolean | number
    /** Percentage of empty values for emails */
    percentageEmptyEmails?: boolean | number
    /** Percentage of non-empty values for emails */
    percentageNotEmptyEmails?: boolean | number
    /** Number of unique values for linkedinLink */
    countUniqueValuesLinkedinLink?: boolean | number
    /** Number of empty values for linkedinLink */
    countEmptyLinkedinLink?: boolean | number
    /** Number of non-empty values for linkedinLink */
    countNotEmptyLinkedinLink?: boolean | number
    /** Percentage of empty values for linkedinLink */
    percentageEmptyLinkedinLink?: boolean | number
    /** Percentage of non-empty values for linkedinLink */
    percentageNotEmptyLinkedinLink?: boolean | number
    /** Number of unique values for xLink */
    countUniqueValuesXLink?: boolean | number
    /** Number of empty values for xLink */
    countEmptyXLink?: boolean | number
    /** Number of non-empty values for xLink */
    countNotEmptyXLink?: boolean | number
    /** Percentage of empty values for xLink */
    percentageEmptyXLink?: boolean | number
    /** Percentage of non-empty values for xLink */
    percentageNotEmptyXLink?: boolean | number
    /** Number of unique values for jobTitle */
    countUniqueValuesJobTitle?: boolean | number
    /** Number of empty values for jobTitle */
    countEmptyJobTitle?: boolean | number
    /** Number of non-empty values for jobTitle */
    countNotEmptyJobTitle?: boolean | number
    /** Percentage of empty values for jobTitle */
    percentageEmptyJobTitle?: boolean | number
    /** Percentage of non-empty values for jobTitle */
    percentageNotEmptyJobTitle?: boolean | number
    /** Number of unique values for phones */
    countUniqueValuesPhones?: boolean | number
    /** Number of empty values for phones */
    countEmptyPhones?: boolean | number
    /** Number of non-empty values for phones */
    countNotEmptyPhones?: boolean | number
    /** Percentage of empty values for phones */
    percentageEmptyPhones?: boolean | number
    /** Percentage of non-empty values for phones */
    percentageNotEmptyPhones?: boolean | number
    /** Number of unique values for city */
    countUniqueValuesCity?: boolean | number
    /** Number of empty values for city */
    countEmptyCity?: boolean | number
    /** Number of non-empty values for city */
    countNotEmptyCity?: boolean | number
    /** Percentage of empty values for city */
    percentageEmptyCity?: boolean | number
    /** Percentage of non-empty values for city */
    percentageNotEmptyCity?: boolean | number
    /** Number of unique values for avatarUrl */
    countUniqueValuesAvatarUrl?: boolean | number
    /** Number of empty values for avatarUrl */
    countEmptyAvatarUrl?: boolean | number
    /** Number of non-empty values for avatarUrl */
    countNotEmptyAvatarUrl?: boolean | number
    /** Percentage of empty values for avatarUrl */
    percentageEmptyAvatarUrl?: boolean | number
    /** Percentage of non-empty values for avatarUrl */
    percentageNotEmptyAvatarUrl?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for intro */
    countUniqueValuesIntro?: boolean | number
    /** Number of empty values for intro */
    countEmptyIntro?: boolean | number
    /** Number of non-empty values for intro */
    countNotEmptyIntro?: boolean | number
    /** Percentage of empty values for intro */
    percentageEmptyIntro?: boolean | number
    /** Percentage of non-empty values for intro */
    percentageNotEmptyIntro?: boolean | number
    /** Number of unique values for whatsapp */
    countUniqueValuesWhatsapp?: boolean | number
    /** Number of empty values for whatsapp */
    countEmptyWhatsapp?: boolean | number
    /** Number of non-empty values for whatsapp */
    countNotEmptyWhatsapp?: boolean | number
    /** Percentage of empty values for whatsapp */
    percentageEmptyWhatsapp?: boolean | number
    /** Percentage of non-empty values for whatsapp */
    percentageNotEmptyWhatsapp?: boolean | number
    /** Number of unique values for workPreference */
    countUniqueValuesWorkPreference?: boolean | number
    /** Number of empty values for workPreference */
    countEmptyWorkPreference?: boolean | number
    /** Number of non-empty values for workPreference */
    countNotEmptyWorkPreference?: boolean | number
    /** Percentage of empty values for workPreference */
    percentageEmptyWorkPreference?: boolean | number
    /** Percentage of non-empty values for workPreference */
    percentageNotEmptyWorkPreference?: boolean | number
    /** Number of unique values for performanceRating */
    countUniqueValuesPerformanceRating?: boolean | number
    /** Number of empty values for performanceRating */
    countEmptyPerformanceRating?: boolean | number
    /** Number of non-empty values for performanceRating */
    countNotEmptyPerformanceRating?: boolean | number
    /** Percentage of empty values for performanceRating */
    percentageEmptyPerformanceRating?: boolean | number
    /** Percentage of non-empty values for performanceRating */
    percentageNotEmptyPerformanceRating?: boolean | number
    edges?: PersonEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PersonRelationInput {
/** Connect to a person record */
connect?: (PersonConnectInput | null),
/** Disconnect from a person record */
disconnect?: (Scalars['Boolean'] | null)}

export interface PersonConnectInput {
/** Find a person record based on its unique fields: id or emails */
where?: (PersonWhereUniqueInput | null)}

export interface PersonWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null),
/** Connect by Emails */
emails?: (PersonEmailsWhereInput | null)}

export interface PersonEmailsWhereInput {
/** Connect by primaryEmail */
primaryEmail?: (Scalars['String'] | null)}


/** A person */
export interface PersonCreateInput {
/** Contact’s name */
name?: (FullNameCreateInput | null),
/** Contact’s Emails */
emails?: (EmailsCreateInput | null),
/** Contact’s Linkedin account */
linkedinLink?: (LinksCreateInput | null),
/** Contact’s X/Twitter account */
xLink?: (LinksCreateInput | null),
/** Contact’s job title */
jobTitle?: (Scalars['String'] | null),
/** Contact’s phone numbers */
phones?: (PhonesCreateInput | null),
/** Contact’s city */
city?: (Scalars['String'] | null),
/** Contact’s avatar */
avatarUrl?: (Scalars['String'] | null),
/** Person record Position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Contact’s company */
companyId?: (Scalars['ID'] | null),
/** Contact’s company */
company?: (CompanyRelationInput | null),
/** Contact's Intro */
intro?: (Scalars['String'] | null),
/** Contact's Whatsapp Number */
whatsapp?: (PhonesCreateInput | null),
/** Person's Work Preference */
workPreference?: ((PersonWorkPreferenceEnum | null)[] | null),
/** Person's Performance Rating */
performanceRating?: (PersonPerformanceRatingEnum | null)}


/** A person */
export interface PersonUpdateInput {
/** Contact’s name */
name?: (FullNameUpdateInput | null),
/** Contact’s Emails */
emails?: (EmailsUpdateInput | null),
/** Contact’s Linkedin account */
linkedinLink?: (LinksUpdateInput | null),
/** Contact’s X/Twitter account */
xLink?: (LinksUpdateInput | null),
/** Contact’s job title */
jobTitle?: (Scalars['String'] | null),
/** Contact’s phone numbers */
phones?: (PhonesUpdateInput | null),
/** Contact’s city */
city?: (Scalars['String'] | null),
/** Contact’s avatar */
avatarUrl?: (Scalars['String'] | null),
/** Person record Position */
position?: (Scalars['Position'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Contact’s company */
companyId?: (Scalars['ID'] | null),
/** Contact’s company */
company?: (CompanyRelationInput | null),
/** Contact's Intro */
intro?: (Scalars['String'] | null),
/** Contact's Whatsapp Number */
whatsapp?: (PhonesUpdateInput | null),
/** Person's Work Preference */
workPreference?: ((PersonWorkPreferenceEnum | null)[] | null),
/** Person's Performance Rating */
performanceRating?: (PersonPerformanceRatingEnum | null)}


/** A person */
export interface PersonFilterInput {
/** Contact’s name */
name?: (FullNameFilterInput | null),
/** Contact’s Emails */
emails?: (EmailsFilterInput | null),
/** Contact’s Linkedin account */
linkedinLink?: (LinksFilterInput | null),
/** Contact’s X/Twitter account */
xLink?: (LinksFilterInput | null),
/** Contact’s job title */
jobTitle?: (StringFilter | null),
/** Contact’s phone numbers */
phones?: (PhonesFilterInput | null),
/** Contact’s city */
city?: (StringFilter | null),
/** Contact’s avatar */
avatarUrl?: (StringFilter | null),
/** Person record Position */
position?: (FloatFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Contact’s company */
companyId?: (UUIDFilter | null),
/** Contact's Intro */
intro?: (StringFilter | null),
/** Contact's Whatsapp Number */
whatsapp?: (PhonesFilterInput | null),
/** Person's Work Preference */
workPreference?: (PersonWorkPreferenceEnumFilter | null),
/** Person's Performance Rating */
performanceRating?: (PersonPerformanceRatingEnumFilter | null),and?: ((PersonFilterInput | null)[] | null),or?: ((PersonFilterInput | null)[] | null),not?: (PersonFilterInput | null)}

export interface PersonWorkPreferenceEnumFilter {eq?: (PersonWorkPreferenceEnum | null),neq?: (PersonWorkPreferenceEnum | null),in?: ((PersonWorkPreferenceEnum | null)[] | null),containsAny?: ((PersonWorkPreferenceEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface PersonPerformanceRatingEnumFilter {eq?: (PersonPerformanceRatingEnum | null),neq?: (PersonPerformanceRatingEnum | null),in?: ((PersonPerformanceRatingEnum | null)[] | null),containsAny?: ((PersonPerformanceRatingEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A person */
export interface PersonOrderByInput {
/** Contact’s name */
name?: (FullNameOrderByInput | null),
/** Contact’s Emails */
emails?: (EmailsOrderByInput | null),
/** Contact’s Linkedin account */
linkedinLink?: (LinksOrderByInput | null),
/** Contact’s X/Twitter account */
xLink?: (LinksOrderByInput | null),
/** Contact’s job title */
jobTitle?: (OrderByDirection | null),
/** Contact’s phone numbers */
phones?: (PhonesOrderByInput | null),
/** Contact’s city */
city?: (OrderByDirection | null),
/** Contact’s avatar */
avatarUrl?: (OrderByDirection | null),
/** Person record Position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Contact’s company */
companyId?: (OrderByDirection | null),
/** Contact's Intro */
intro?: (OrderByDirection | null),
/** Contact's Whatsapp Number */
whatsapp?: (PhonesOrderByInput | null),
/** Person's Work Preference */
workPreference?: (OrderByDirection | null),
/** Person's Performance Rating */
performanceRating?: (OrderByDirection | null)}


/** A person */
export interface PersonOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (PersonOrderByWithGroupByAggregateInput | null),
/** Contact’s name */
name?: (FullNameOrderByInput | null),
/** Contact’s Emails */
emails?: (EmailsOrderByInput | null),
/** Contact’s Linkedin account */
linkedinLink?: (LinksOrderByInput | null),
/** Contact’s X/Twitter account */
xLink?: (LinksOrderByInput | null),
/** Contact’s job title */
jobTitle?: (OrderByDirection | null),
/** Contact’s phone numbers */
phones?: (PhonesOrderByInput | null),
/** Contact’s city */
city?: (OrderByDirection | null),
/** Contact’s avatar */
avatarUrl?: (OrderByDirection | null),
/** Person record Position */
position?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Contact’s company */
companyId?: (OrderByDirection | null),
/** Contact's Intro */
intro?: (OrderByDirection | null),
/** Contact's Whatsapp Number */
whatsapp?: (PhonesOrderByInput | null),
/** Person's Work Preference */
workPreference?: (OrderByDirection | null),
/** Person's Performance Rating */
performanceRating?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface PersonOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for emails */
countUniqueValuesEmails?: (OrderByDirection | null),
/** Number of empty values for emails */
countEmptyEmails?: (OrderByDirection | null),
/** Number of non-empty values for emails */
countNotEmptyEmails?: (OrderByDirection | null),
/** Percentage of empty values for emails */
percentageEmptyEmails?: (OrderByDirection | null),
/** Percentage of non-empty values for emails */
percentageNotEmptyEmails?: (OrderByDirection | null),
/** Number of unique values for linkedinLink */
countUniqueValuesLinkedinLink?: (OrderByDirection | null),
/** Number of empty values for linkedinLink */
countEmptyLinkedinLink?: (OrderByDirection | null),
/** Number of non-empty values for linkedinLink */
countNotEmptyLinkedinLink?: (OrderByDirection | null),
/** Percentage of empty values for linkedinLink */
percentageEmptyLinkedinLink?: (OrderByDirection | null),
/** Percentage of non-empty values for linkedinLink */
percentageNotEmptyLinkedinLink?: (OrderByDirection | null),
/** Number of unique values for xLink */
countUniqueValuesXLink?: (OrderByDirection | null),
/** Number of empty values for xLink */
countEmptyXLink?: (OrderByDirection | null),
/** Number of non-empty values for xLink */
countNotEmptyXLink?: (OrderByDirection | null),
/** Percentage of empty values for xLink */
percentageEmptyXLink?: (OrderByDirection | null),
/** Percentage of non-empty values for xLink */
percentageNotEmptyXLink?: (OrderByDirection | null),
/** Number of unique values for jobTitle */
countUniqueValuesJobTitle?: (OrderByDirection | null),
/** Number of empty values for jobTitle */
countEmptyJobTitle?: (OrderByDirection | null),
/** Number of non-empty values for jobTitle */
countNotEmptyJobTitle?: (OrderByDirection | null),
/** Percentage of empty values for jobTitle */
percentageEmptyJobTitle?: (OrderByDirection | null),
/** Percentage of non-empty values for jobTitle */
percentageNotEmptyJobTitle?: (OrderByDirection | null),
/** Number of unique values for phones */
countUniqueValuesPhones?: (OrderByDirection | null),
/** Number of empty values for phones */
countEmptyPhones?: (OrderByDirection | null),
/** Number of non-empty values for phones */
countNotEmptyPhones?: (OrderByDirection | null),
/** Percentage of empty values for phones */
percentageEmptyPhones?: (OrderByDirection | null),
/** Percentage of non-empty values for phones */
percentageNotEmptyPhones?: (OrderByDirection | null),
/** Number of unique values for city */
countUniqueValuesCity?: (OrderByDirection | null),
/** Number of empty values for city */
countEmptyCity?: (OrderByDirection | null),
/** Number of non-empty values for city */
countNotEmptyCity?: (OrderByDirection | null),
/** Percentage of empty values for city */
percentageEmptyCity?: (OrderByDirection | null),
/** Percentage of non-empty values for city */
percentageNotEmptyCity?: (OrderByDirection | null),
/** Number of unique values for avatarUrl */
countUniqueValuesAvatarUrl?: (OrderByDirection | null),
/** Number of empty values for avatarUrl */
countEmptyAvatarUrl?: (OrderByDirection | null),
/** Number of non-empty values for avatarUrl */
countNotEmptyAvatarUrl?: (OrderByDirection | null),
/** Percentage of empty values for avatarUrl */
percentageEmptyAvatarUrl?: (OrderByDirection | null),
/** Percentage of non-empty values for avatarUrl */
percentageNotEmptyAvatarUrl?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Contact’s company */
companyId?: (OrderByDirection | null),
/** Number of unique values for intro */
countUniqueValuesIntro?: (OrderByDirection | null),
/** Number of empty values for intro */
countEmptyIntro?: (OrderByDirection | null),
/** Number of non-empty values for intro */
countNotEmptyIntro?: (OrderByDirection | null),
/** Percentage of empty values for intro */
percentageEmptyIntro?: (OrderByDirection | null),
/** Percentage of non-empty values for intro */
percentageNotEmptyIntro?: (OrderByDirection | null),
/** Number of unique values for whatsapp */
countUniqueValuesWhatsapp?: (OrderByDirection | null),
/** Number of empty values for whatsapp */
countEmptyWhatsapp?: (OrderByDirection | null),
/** Number of non-empty values for whatsapp */
countNotEmptyWhatsapp?: (OrderByDirection | null),
/** Percentage of empty values for whatsapp */
percentageEmptyWhatsapp?: (OrderByDirection | null),
/** Percentage of non-empty values for whatsapp */
percentageNotEmptyWhatsapp?: (OrderByDirection | null),
/** Number of unique values for workPreference */
countUniqueValuesWorkPreference?: (OrderByDirection | null),
/** Number of empty values for workPreference */
countEmptyWorkPreference?: (OrderByDirection | null),
/** Number of non-empty values for workPreference */
countNotEmptyWorkPreference?: (OrderByDirection | null),
/** Percentage of empty values for workPreference */
percentageEmptyWorkPreference?: (OrderByDirection | null),
/** Percentage of non-empty values for workPreference */
percentageNotEmptyWorkPreference?: (OrderByDirection | null),
/** Number of unique values for performanceRating */
countUniqueValuesPerformanceRating?: (OrderByDirection | null),
/** Number of empty values for performanceRating */
countEmptyPerformanceRating?: (OrderByDirection | null),
/** Number of non-empty values for performanceRating */
countNotEmptyPerformanceRating?: (OrderByDirection | null),
/** Percentage of empty values for performanceRating */
percentageEmptyPerformanceRating?: (OrderByDirection | null),
/** Percentage of non-empty values for performanceRating */
percentageNotEmptyPerformanceRating?: (OrderByDirection | null)}


/** A person */
export interface PersonGroupByInput {
/** Contact’s name */
name?: (FullNameGroupByInput | null),
/** Contact’s Emails */
emails?: (EmailsGroupByInput | null),
/** Contact’s Linkedin account */
linkedinLink?: (LinksGroupByInput | null),
/** Contact’s X/Twitter account */
xLink?: (LinksGroupByInput | null),
/** Contact’s job title */
jobTitle?: (Scalars['Boolean'] | null),
/** Contact’s phone numbers */
phones?: (PhonesGroupByInput | null),
/** Contact’s city */
city?: (Scalars['Boolean'] | null),
/** Contact’s avatar */
avatarUrl?: (Scalars['Boolean'] | null),
/** Person record Position */
position?: (Scalars['Boolean'] | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Contact’s company */
companyId?: (Scalars['Boolean'] | null),
/** Contact's Intro */
intro?: (Scalars['Boolean'] | null),
/** Contact's Whatsapp Number */
whatsapp?: (PhonesGroupByInput | null),
/** Person's Work Preference */
workPreference?: (Scalars['Boolean'] | null),
/** Person's Performance Rating */
performanceRating?: (Scalars['Boolean'] | null)}


/** A task */
export interface TaskGenqlSelection{
    /** Task record position */
    position?: boolean | number
    /** Task title */
    title?: boolean | number
    /** Task body */
    bodyV2?: RichTextV2GenqlSelection
    /** Task due date */
    dueAt?: boolean | number
    /** Task status */
    status?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Field used for full-text search */
    searchVector?: boolean | number
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** Task assignee */
    assigneeId?: boolean | number
    /** Task targets */
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    /** Task attachments */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** Task assignee */
    assignee?: WorkspaceMemberGenqlSelection
    /** Timeline Activities linked to the task. */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    /** Favorites linked to the task */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A task */
export interface TaskEdgeGenqlSelection{
    node?: TaskGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A task */
export interface TaskConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: boolean | number
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: boolean | number
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: boolean | number
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: boolean | number
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: boolean | number
    /** Number of unique values for dueAt */
    countUniqueValuesDueAt?: boolean | number
    /** Number of empty values for dueAt */
    countEmptyDueAt?: boolean | number
    /** Number of non-empty values for dueAt */
    countNotEmptyDueAt?: boolean | number
    /** Percentage of empty values for dueAt */
    percentageEmptyDueAt?: boolean | number
    /** Percentage of non-empty values for dueAt */
    percentageNotEmptyDueAt?: boolean | number
    /** Earliest date contained in the field dueAt */
    minDueAt?: boolean | number
    /** Latest date contained in the field dueAt */
    maxDueAt?: boolean | number
    /** Number of unique values for status */
    countUniqueValuesStatus?: boolean | number
    /** Number of empty values for status */
    countEmptyStatus?: boolean | number
    /** Number of non-empty values for status */
    countNotEmptyStatus?: boolean | number
    /** Percentage of empty values for status */
    percentageEmptyStatus?: boolean | number
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: TaskEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A task */
export interface TaskGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for title */
    countUniqueValuesTitle?: boolean | number
    /** Number of empty values for title */
    countEmptyTitle?: boolean | number
    /** Number of non-empty values for title */
    countNotEmptyTitle?: boolean | number
    /** Percentage of empty values for title */
    percentageEmptyTitle?: boolean | number
    /** Percentage of non-empty values for title */
    percentageNotEmptyTitle?: boolean | number
    /** Number of unique values for bodyV2 */
    countUniqueValuesBodyV2?: boolean | number
    /** Number of empty values for bodyV2 */
    countEmptyBodyV2?: boolean | number
    /** Number of non-empty values for bodyV2 */
    countNotEmptyBodyV2?: boolean | number
    /** Percentage of empty values for bodyV2 */
    percentageEmptyBodyV2?: boolean | number
    /** Percentage of non-empty values for bodyV2 */
    percentageNotEmptyBodyV2?: boolean | number
    /** Number of unique values for dueAt */
    countUniqueValuesDueAt?: boolean | number
    /** Number of empty values for dueAt */
    countEmptyDueAt?: boolean | number
    /** Number of non-empty values for dueAt */
    countNotEmptyDueAt?: boolean | number
    /** Percentage of empty values for dueAt */
    percentageEmptyDueAt?: boolean | number
    /** Percentage of non-empty values for dueAt */
    percentageNotEmptyDueAt?: boolean | number
    /** Earliest date contained in the field dueAt */
    minDueAt?: boolean | number
    /** Latest date contained in the field dueAt */
    maxDueAt?: boolean | number
    /** Number of unique values for status */
    countUniqueValuesStatus?: boolean | number
    /** Number of empty values for status */
    countEmptyStatus?: boolean | number
    /** Number of non-empty values for status */
    countNotEmptyStatus?: boolean | number
    /** Percentage of empty values for status */
    percentageEmptyStatus?: boolean | number
    /** Percentage of non-empty values for status */
    percentageNotEmptyStatus?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: TaskEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TaskRelationInput {
/** Connect to a task record */
connect?: (TaskConnectInput | null),
/** Disconnect from a task record */
disconnect?: (Scalars['Boolean'] | null)}

export interface TaskConnectInput {
/** Find a task record based on its unique fields: id */
where?: (TaskWhereUniqueInput | null)}

export interface TaskWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A task */
export interface TaskCreateInput {
/** Task record position */
position?: (Scalars['Position'] | null),
/** Task title */
title?: (Scalars['String'] | null),
/** Task body */
bodyV2?: (RichTextV2CreateInput | null),
/** Task due date */
dueAt?: (Scalars['DateTime'] | null),
/** Task status */
status?: (TaskStatusEnum | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Task assignee */
assigneeId?: (Scalars['ID'] | null),
/** Task assignee */
assignee?: (WorkspaceMemberRelationInput | null)}


/** A task */
export interface TaskUpdateInput {
/** Task record position */
position?: (Scalars['Position'] | null),
/** Task title */
title?: (Scalars['String'] | null),
/** Task body */
bodyV2?: (RichTextV2UpdateInput | null),
/** Task due date */
dueAt?: (Scalars['DateTime'] | null),
/** Task status */
status?: (TaskStatusEnum | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['TSVector'] | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** Task assignee */
assigneeId?: (Scalars['ID'] | null),
/** Task assignee */
assignee?: (WorkspaceMemberRelationInput | null)}


/** A task */
export interface TaskFilterInput {
/** Task record position */
position?: (FloatFilter | null),
/** Task title */
title?: (StringFilter | null),
/** Task body */
bodyV2?: (RichTextV2FilterInput | null),
/** Task due date */
dueAt?: (DateFilter | null),
/** Task status */
status?: (TaskStatusEnumFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Field used for full-text search */
searchVector?: (TSVectorFilter | null),
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** Task assignee */
assigneeId?: (UUIDFilter | null),and?: ((TaskFilterInput | null)[] | null),or?: ((TaskFilterInput | null)[] | null),not?: (TaskFilterInput | null)}

export interface TaskStatusEnumFilter {eq?: (TaskStatusEnum | null),neq?: (TaskStatusEnum | null),in?: ((TaskStatusEnum | null)[] | null),containsAny?: ((TaskStatusEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}


/** A task */
export interface TaskOrderByInput {
/** Task record position */
position?: (OrderByDirection | null),
/** Task title */
title?: (OrderByDirection | null),
/** Task body */
bodyV2?: (RichTextV2OrderByInput | null),
/** Task due date */
dueAt?: (OrderByDirection | null),
/** Task status */
status?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** Task assignee */
assigneeId?: (OrderByDirection | null)}


/** A task */
export interface TaskOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (TaskOrderByWithGroupByAggregateInput | null),
/** Task record position */
position?: (OrderByDirection | null),
/** Task title */
title?: (OrderByDirection | null),
/** Task body */
bodyV2?: (RichTextV2OrderByInput | null),
/** Task due date */
dueAt?: (OrderByDateGranularityInput | null),
/** Task status */
status?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Field used for full-text search */
searchVector?: (OrderByDirection | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** Task assignee */
assigneeId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface TaskOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for title */
countUniqueValuesTitle?: (OrderByDirection | null),
/** Number of empty values for title */
countEmptyTitle?: (OrderByDirection | null),
/** Number of non-empty values for title */
countNotEmptyTitle?: (OrderByDirection | null),
/** Percentage of empty values for title */
percentageEmptyTitle?: (OrderByDirection | null),
/** Percentage of non-empty values for title */
percentageNotEmptyTitle?: (OrderByDirection | null),
/** Number of unique values for bodyV2 */
countUniqueValuesBodyV2?: (OrderByDirection | null),
/** Number of empty values for bodyV2 */
countEmptyBodyV2?: (OrderByDirection | null),
/** Number of non-empty values for bodyV2 */
countNotEmptyBodyV2?: (OrderByDirection | null),
/** Percentage of empty values for bodyV2 */
percentageEmptyBodyV2?: (OrderByDirection | null),
/** Percentage of non-empty values for bodyV2 */
percentageNotEmptyBodyV2?: (OrderByDirection | null),
/** Number of unique values for dueAt */
countUniqueValuesDueAt?: (OrderByDirection | null),
/** Number of empty values for dueAt */
countEmptyDueAt?: (OrderByDirection | null),
/** Number of non-empty values for dueAt */
countNotEmptyDueAt?: (OrderByDirection | null),
/** Percentage of empty values for dueAt */
percentageEmptyDueAt?: (OrderByDirection | null),
/** Percentage of non-empty values for dueAt */
percentageNotEmptyDueAt?: (OrderByDirection | null),
/** Earliest date contained in the field dueAt */
minDueAt?: (OrderByDirection | null),
/** Latest date contained in the field dueAt */
maxDueAt?: (OrderByDirection | null),
/** Number of unique values for status */
countUniqueValuesStatus?: (OrderByDirection | null),
/** Number of empty values for status */
countEmptyStatus?: (OrderByDirection | null),
/** Number of non-empty values for status */
countNotEmptyStatus?: (OrderByDirection | null),
/** Percentage of empty values for status */
percentageEmptyStatus?: (OrderByDirection | null),
/** Percentage of non-empty values for status */
percentageNotEmptyStatus?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Task assignee */
assigneeId?: (OrderByDirection | null)}


/** A task */
export interface TaskGroupByInput {
/** Task record position */
position?: (Scalars['Boolean'] | null),
/** Task title */
title?: (Scalars['Boolean'] | null),
/** Task body */
bodyV2?: (RichTextV2GroupByInput | null),
/** Task due date */
dueAt?: (GroupByDateGranularityInput | null),
/** Task status */
status?: (Scalars['Boolean'] | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Field used for full-text search */
searchVector?: (Scalars['Boolean'] | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** Task assignee */
assigneeId?: (Scalars['Boolean'] | null)}


/** A task target */
export interface TaskTargetGenqlSelection{
    /** Id */
    id?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Date when the record was deleted */
    deletedAt?: boolean | number
    /** TaskTarget task */
    taskId?: boolean | number
    /** TaskTarget person */
    personId?: boolean | number
    /** TaskTarget company */
    companyId?: boolean | number
    /** TaskTarget opportunity */
    opportunityId?: boolean | number
    /** TaskTargets Rocket */
    rocketId?: boolean | number
    /** TaskTargets Pet */
    petId?: boolean | number
    /** TaskTargets Survey result */
    surveyResultId?: boolean | number
    /** TaskTarget task */
    task?: TaskGenqlSelection
    /** TaskTarget person */
    person?: PersonGenqlSelection
    /** TaskTarget company */
    company?: CompanyGenqlSelection
    /** TaskTarget opportunity */
    opportunity?: OpportunityGenqlSelection
    /** TaskTargets Rocket */
    rocket?: RocketGenqlSelection
    /** TaskTargets Pet */
    pet?: PetGenqlSelection
    /** TaskTargets Survey result */
    surveyResult?: SurveyResultGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A task target */
export interface TaskTargetEdgeGenqlSelection{
    node?: TaskTargetGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A task target */
export interface TaskTargetConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: TaskTargetEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A task target */
export interface TaskTargetGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    edges?: TaskTargetEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface TaskTargetRelationInput {
/** Connect to a taskTarget record */
connect?: (TaskTargetConnectInput | null),
/** Disconnect from a taskTarget record */
disconnect?: (Scalars['Boolean'] | null)}

export interface TaskTargetConnectInput {
/** Find a taskTarget record based on its unique fields: id */
where?: (TaskTargetWhereUniqueInput | null)}

export interface TaskTargetWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A task target */
export interface TaskTargetCreateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** TaskTarget task */
taskId?: (Scalars['ID'] | null),
/** TaskTarget task */
task?: (TaskRelationInput | null),
/** TaskTarget person */
personId?: (Scalars['ID'] | null),
/** TaskTarget person */
person?: (PersonRelationInput | null),
/** TaskTarget company */
companyId?: (Scalars['ID'] | null),
/** TaskTarget company */
company?: (CompanyRelationInput | null),
/** TaskTarget opportunity */
opportunityId?: (Scalars['ID'] | null),
/** TaskTarget opportunity */
opportunity?: (OpportunityRelationInput | null),
/** TaskTargets Rocket */
rocketId?: (Scalars['ID'] | null),
/** TaskTargets Rocket */
rocket?: (RocketRelationInput | null),
/** TaskTargets Pet */
petId?: (Scalars['ID'] | null),
/** TaskTargets Pet */
pet?: (PetRelationInput | null),
/** TaskTargets Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** TaskTargets Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** A task target */
export interface TaskTargetUpdateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Date when the record was deleted */
deletedAt?: (Scalars['DateTime'] | null),
/** TaskTarget task */
taskId?: (Scalars['ID'] | null),
/** TaskTarget task */
task?: (TaskRelationInput | null),
/** TaskTarget person */
personId?: (Scalars['ID'] | null),
/** TaskTarget person */
person?: (PersonRelationInput | null),
/** TaskTarget company */
companyId?: (Scalars['ID'] | null),
/** TaskTarget company */
company?: (CompanyRelationInput | null),
/** TaskTarget opportunity */
opportunityId?: (Scalars['ID'] | null),
/** TaskTarget opportunity */
opportunity?: (OpportunityRelationInput | null),
/** TaskTargets Rocket */
rocketId?: (Scalars['ID'] | null),
/** TaskTargets Rocket */
rocket?: (RocketRelationInput | null),
/** TaskTargets Pet */
petId?: (Scalars['ID'] | null),
/** TaskTargets Pet */
pet?: (PetRelationInput | null),
/** TaskTargets Survey result */
surveyResultId?: (Scalars['ID'] | null),
/** TaskTargets Survey result */
surveyResult?: (SurveyResultRelationInput | null)}


/** A task target */
export interface TaskTargetFilterInput {
/** Id */
id?: (UUIDFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Date when the record was deleted */
deletedAt?: (DateFilter | null),
/** TaskTarget task */
taskId?: (UUIDFilter | null),
/** TaskTarget person */
personId?: (UUIDFilter | null),
/** TaskTarget company */
companyId?: (UUIDFilter | null),
/** TaskTarget opportunity */
opportunityId?: (UUIDFilter | null),
/** TaskTargets Rocket */
rocketId?: (UUIDFilter | null),
/** TaskTargets Pet */
petId?: (UUIDFilter | null),
/** TaskTargets Survey result */
surveyResultId?: (UUIDFilter | null),and?: ((TaskTargetFilterInput | null)[] | null),or?: ((TaskTargetFilterInput | null)[] | null),not?: (TaskTargetFilterInput | null)}


/** A task target */
export interface TaskTargetOrderByInput {
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDirection | null),
/** TaskTarget task */
taskId?: (OrderByDirection | null),
/** TaskTarget person */
personId?: (OrderByDirection | null),
/** TaskTarget company */
companyId?: (OrderByDirection | null),
/** TaskTarget opportunity */
opportunityId?: (OrderByDirection | null),
/** TaskTargets Rocket */
rocketId?: (OrderByDirection | null),
/** TaskTargets Pet */
petId?: (OrderByDirection | null),
/** TaskTargets Survey result */
surveyResultId?: (OrderByDirection | null)}


/** A task target */
export interface TaskTargetOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (TaskTargetOrderByWithGroupByAggregateInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (OrderByDateGranularityInput | null),
/** TaskTarget task */
taskId?: (OrderByDirection | null),
/** TaskTarget person */
personId?: (OrderByDirection | null),
/** TaskTarget company */
companyId?: (OrderByDirection | null),
/** TaskTarget opportunity */
opportunityId?: (OrderByDirection | null),
/** TaskTargets Rocket */
rocketId?: (OrderByDirection | null),
/** TaskTargets Pet */
petId?: (OrderByDirection | null),
/** TaskTargets Survey result */
surveyResultId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface TaskTargetOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** TaskTarget task */
taskId?: (OrderByDirection | null),
/** TaskTarget person */
personId?: (OrderByDirection | null),
/** TaskTarget company */
companyId?: (OrderByDirection | null),
/** TaskTarget opportunity */
opportunityId?: (OrderByDirection | null),
/** TaskTargets Rocket */
rocketId?: (OrderByDirection | null),
/** TaskTargets Pet */
petId?: (OrderByDirection | null),
/** TaskTargets Survey result */
surveyResultId?: (OrderByDirection | null)}


/** A task target */
export interface TaskTargetGroupByInput {
/** Id */
id?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Date when the record was deleted */
deletedAt?: (GroupByDateGranularityInput | null),
/** TaskTarget task */
taskId?: (Scalars['Boolean'] | null),
/** TaskTarget person */
personId?: (Scalars['Boolean'] | null),
/** TaskTarget company */
companyId?: (Scalars['Boolean'] | null),
/** TaskTarget opportunity */
opportunityId?: (Scalars['Boolean'] | null),
/** TaskTargets Rocket */
rocketId?: (Scalars['Boolean'] | null),
/** TaskTargets Pet */
petId?: (Scalars['Boolean'] | null),
/** TaskTargets Survey result */
surveyResultId?: (Scalars['Boolean'] | null)}

export interface PetGenqlSelection{
    /** Creation date */
    createdAt?: boolean | number
    makesOwnerThinkOf?: FullNameGenqlSelection
    /** Id */
    id?: boolean | number
    /** Name */
    name?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Deletion date */
    deletedAt?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Position */
    position?: boolean | number
    /** Search vector */
    searchVector?: boolean | number
    species?: boolean | number
    traits?: boolean | number
    comments?: boolean | number
    age?: boolean | number
    location?: AddressGenqlSelection
    vetPhone?: PhonesGenqlSelection
    vetEmail?: EmailsGenqlSelection
    birthday?: boolean | number
    isGoodWithKids?: boolean | number
    pictures?: LinksGenqlSelection
    averageCostOfKibblePerMonth?: CurrencyGenqlSelection
    soundSwag?: boolean | number
    bio?: boolean | number
    interestingFacts?: boolean | number
    extraData?: boolean | number
    ownerSurveyResultId?: boolean | number
    ownerRocketId?: boolean | number
    /** TimelineActivities tied to the Pet */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    /** Favorites tied to the Pet */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Attachments tied to the Pet */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** NoteTargets tied to the Pet */
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    /** TaskTargets tied to the Pet */
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    ownerSurveyResult?: SurveyResultGenqlSelection
    ownerRocket?: RocketGenqlSelection
    helperSurveyResults?: (SurveyResultConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (SurveyResultFilterInput | null), orderBy?: ((SurveyResultOrderByInput | null)[] | null)} })
    helperRockets?: (RocketConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (RocketFilterInput | null), orderBy?: ((RocketOrderByInput | null)[] | null)} })
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PetEdgeGenqlSelection{
    node?: PetGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PetConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for makesOwnerThinkOf */
    countUniqueValuesMakesOwnerThinkOf?: boolean | number
    /** Number of empty values for makesOwnerThinkOf */
    countEmptyMakesOwnerThinkOf?: boolean | number
    /** Number of non-empty values for makesOwnerThinkOf */
    countNotEmptyMakesOwnerThinkOf?: boolean | number
    /** Percentage of empty values for makesOwnerThinkOf */
    percentageEmptyMakesOwnerThinkOf?: boolean | number
    /** Percentage of non-empty values for makesOwnerThinkOf */
    percentageNotEmptyMakesOwnerThinkOf?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for species */
    countUniqueValuesSpecies?: boolean | number
    /** Number of empty values for species */
    countEmptySpecies?: boolean | number
    /** Number of non-empty values for species */
    countNotEmptySpecies?: boolean | number
    /** Percentage of empty values for species */
    percentageEmptySpecies?: boolean | number
    /** Percentage of non-empty values for species */
    percentageNotEmptySpecies?: boolean | number
    /** Number of unique values for traits */
    countUniqueValuesTraits?: boolean | number
    /** Number of empty values for traits */
    countEmptyTraits?: boolean | number
    /** Number of non-empty values for traits */
    countNotEmptyTraits?: boolean | number
    /** Percentage of empty values for traits */
    percentageEmptyTraits?: boolean | number
    /** Percentage of non-empty values for traits */
    percentageNotEmptyTraits?: boolean | number
    /** Number of unique values for comments */
    countUniqueValuesComments?: boolean | number
    /** Number of empty values for comments */
    countEmptyComments?: boolean | number
    /** Number of non-empty values for comments */
    countNotEmptyComments?: boolean | number
    /** Percentage of empty values for comments */
    percentageEmptyComments?: boolean | number
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: boolean | number
    /** Number of unique values for age */
    countUniqueValuesAge?: boolean | number
    /** Number of empty values for age */
    countEmptyAge?: boolean | number
    /** Number of non-empty values for age */
    countNotEmptyAge?: boolean | number
    /** Percentage of empty values for age */
    percentageEmptyAge?: boolean | number
    /** Percentage of non-empty values for age */
    percentageNotEmptyAge?: boolean | number
    /** Minimum amount contained in the field age */
    minAge?: boolean | number
    /** Maximum amount contained in the field age */
    maxAge?: boolean | number
    /** Average amount contained in the field age */
    avgAge?: boolean | number
    /** Sum of amounts contained in the field age */
    sumAge?: boolean | number
    /** Number of unique values for location */
    countUniqueValuesLocation?: boolean | number
    /** Number of empty values for location */
    countEmptyLocation?: boolean | number
    /** Number of non-empty values for location */
    countNotEmptyLocation?: boolean | number
    /** Percentage of empty values for location */
    percentageEmptyLocation?: boolean | number
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: boolean | number
    /** Number of unique values for vetPhone */
    countUniqueValuesVetPhone?: boolean | number
    /** Number of empty values for vetPhone */
    countEmptyVetPhone?: boolean | number
    /** Number of non-empty values for vetPhone */
    countNotEmptyVetPhone?: boolean | number
    /** Percentage of empty values for vetPhone */
    percentageEmptyVetPhone?: boolean | number
    /** Percentage of non-empty values for vetPhone */
    percentageNotEmptyVetPhone?: boolean | number
    /** Number of unique values for vetEmail */
    countUniqueValuesVetEmail?: boolean | number
    /** Number of empty values for vetEmail */
    countEmptyVetEmail?: boolean | number
    /** Number of non-empty values for vetEmail */
    countNotEmptyVetEmail?: boolean | number
    /** Percentage of empty values for vetEmail */
    percentageEmptyVetEmail?: boolean | number
    /** Percentage of non-empty values for vetEmail */
    percentageNotEmptyVetEmail?: boolean | number
    /** Number of unique values for birthday */
    countUniqueValuesBirthday?: boolean | number
    /** Number of empty values for birthday */
    countEmptyBirthday?: boolean | number
    /** Number of non-empty values for birthday */
    countNotEmptyBirthday?: boolean | number
    /** Percentage of empty values for birthday */
    percentageEmptyBirthday?: boolean | number
    /** Percentage of non-empty values for birthday */
    percentageNotEmptyBirthday?: boolean | number
    /** Earliest date contained in the field birthday */
    minBirthday?: boolean | number
    /** Latest date contained in the field birthday */
    maxBirthday?: boolean | number
    /** Number of unique values for isGoodWithKids */
    countUniqueValuesIsGoodWithKids?: boolean | number
    /** Number of empty values for isGoodWithKids */
    countEmptyIsGoodWithKids?: boolean | number
    /** Number of non-empty values for isGoodWithKids */
    countNotEmptyIsGoodWithKids?: boolean | number
    /** Percentage of empty values for isGoodWithKids */
    percentageEmptyIsGoodWithKids?: boolean | number
    /** Percentage of non-empty values for isGoodWithKids */
    percentageNotEmptyIsGoodWithKids?: boolean | number
    /** Count of true values in the field isGoodWithKids */
    countTrueIsGoodWithKids?: boolean | number
    /** Count of false values in the field isGoodWithKids */
    countFalseIsGoodWithKids?: boolean | number
    /** Number of unique values for pictures */
    countUniqueValuesPictures?: boolean | number
    /** Number of empty values for pictures */
    countEmptyPictures?: boolean | number
    /** Number of non-empty values for pictures */
    countNotEmptyPictures?: boolean | number
    /** Percentage of empty values for pictures */
    percentageEmptyPictures?: boolean | number
    /** Percentage of non-empty values for pictures */
    percentageNotEmptyPictures?: boolean | number
    /** Number of unique values for averageCostOfKibblePerMonth */
    countUniqueValuesAverageCostOfKibblePerMonth?: boolean | number
    /** Number of empty values for averageCostOfKibblePerMonth */
    countEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Number of non-empty values for averageCostOfKibblePerMonth */
    countNotEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Percentage of empty values for averageCostOfKibblePerMonth */
    percentageEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Percentage of non-empty values for averageCostOfKibblePerMonth */
    percentageNotEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Minimum amount contained in the field averageCostOfKibblePerMonth */
    minAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Maximal amount contained in the field averageCostOfKibblePerMonth */
    maxAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Sum of amounts contained in the field averageCostOfKibblePerMonth */
    sumAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Average amount contained in the field averageCostOfKibblePerMonth */
    avgAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Number of unique values for soundSwag */
    countUniqueValuesSoundSwag?: boolean | number
    /** Number of empty values for soundSwag */
    countEmptySoundSwag?: boolean | number
    /** Number of non-empty values for soundSwag */
    countNotEmptySoundSwag?: boolean | number
    /** Percentage of empty values for soundSwag */
    percentageEmptySoundSwag?: boolean | number
    /** Percentage of non-empty values for soundSwag */
    percentageNotEmptySoundSwag?: boolean | number
    /** Number of unique values for bio */
    countUniqueValuesBio?: boolean | number
    /** Number of empty values for bio */
    countEmptyBio?: boolean | number
    /** Number of non-empty values for bio */
    countNotEmptyBio?: boolean | number
    /** Percentage of empty values for bio */
    percentageEmptyBio?: boolean | number
    /** Percentage of non-empty values for bio */
    percentageNotEmptyBio?: boolean | number
    /** Number of unique values for interestingFacts */
    countUniqueValuesInterestingFacts?: boolean | number
    /** Number of empty values for interestingFacts */
    countEmptyInterestingFacts?: boolean | number
    /** Number of non-empty values for interestingFacts */
    countNotEmptyInterestingFacts?: boolean | number
    /** Percentage of empty values for interestingFacts */
    percentageEmptyInterestingFacts?: boolean | number
    /** Percentage of non-empty values for interestingFacts */
    percentageNotEmptyInterestingFacts?: boolean | number
    /** Number of unique values for extraData */
    countUniqueValuesExtraData?: boolean | number
    /** Number of empty values for extraData */
    countEmptyExtraData?: boolean | number
    /** Number of non-empty values for extraData */
    countNotEmptyExtraData?: boolean | number
    /** Percentage of empty values for extraData */
    percentageEmptyExtraData?: boolean | number
    /** Percentage of non-empty values for extraData */
    percentageNotEmptyExtraData?: boolean | number
    /** Number of unique values for ownerSurveyResult */
    countUniqueValuesOwnerSurveyResult?: boolean | number
    /** Number of empty values for ownerSurveyResult */
    countEmptyOwnerSurveyResult?: boolean | number
    /** Number of non-empty values for ownerSurveyResult */
    countNotEmptyOwnerSurveyResult?: boolean | number
    /** Percentage of empty values for ownerSurveyResult */
    percentageEmptyOwnerSurveyResult?: boolean | number
    /** Percentage of non-empty values for ownerSurveyResult */
    percentageNotEmptyOwnerSurveyResult?: boolean | number
    /** Number of unique values for ownerRocket */
    countUniqueValuesOwnerRocket?: boolean | number
    /** Number of empty values for ownerRocket */
    countEmptyOwnerRocket?: boolean | number
    /** Number of non-empty values for ownerRocket */
    countNotEmptyOwnerRocket?: boolean | number
    /** Percentage of empty values for ownerRocket */
    percentageEmptyOwnerRocket?: boolean | number
    /** Percentage of non-empty values for ownerRocket */
    percentageNotEmptyOwnerRocket?: boolean | number
    /** Number of unique values for helperSurveyResults */
    countUniqueValuesHelperSurveyResults?: boolean | number
    /** Number of empty values for helperSurveyResults */
    countEmptyHelperSurveyResults?: boolean | number
    /** Number of non-empty values for helperSurveyResults */
    countNotEmptyHelperSurveyResults?: boolean | number
    /** Percentage of empty values for helperSurveyResults */
    percentageEmptyHelperSurveyResults?: boolean | number
    /** Percentage of non-empty values for helperSurveyResults */
    percentageNotEmptyHelperSurveyResults?: boolean | number
    /** Number of unique values for helperRockets */
    countUniqueValuesHelperRockets?: boolean | number
    /** Number of empty values for helperRockets */
    countEmptyHelperRockets?: boolean | number
    /** Number of non-empty values for helperRockets */
    countNotEmptyHelperRockets?: boolean | number
    /** Percentage of empty values for helperRockets */
    percentageEmptyHelperRockets?: boolean | number
    /** Percentage of non-empty values for helperRockets */
    percentageNotEmptyHelperRockets?: boolean | number
    edges?: PetEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PetGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for makesOwnerThinkOf */
    countUniqueValuesMakesOwnerThinkOf?: boolean | number
    /** Number of empty values for makesOwnerThinkOf */
    countEmptyMakesOwnerThinkOf?: boolean | number
    /** Number of non-empty values for makesOwnerThinkOf */
    countNotEmptyMakesOwnerThinkOf?: boolean | number
    /** Percentage of empty values for makesOwnerThinkOf */
    percentageEmptyMakesOwnerThinkOf?: boolean | number
    /** Percentage of non-empty values for makesOwnerThinkOf */
    percentageNotEmptyMakesOwnerThinkOf?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for species */
    countUniqueValuesSpecies?: boolean | number
    /** Number of empty values for species */
    countEmptySpecies?: boolean | number
    /** Number of non-empty values for species */
    countNotEmptySpecies?: boolean | number
    /** Percentage of empty values for species */
    percentageEmptySpecies?: boolean | number
    /** Percentage of non-empty values for species */
    percentageNotEmptySpecies?: boolean | number
    /** Number of unique values for traits */
    countUniqueValuesTraits?: boolean | number
    /** Number of empty values for traits */
    countEmptyTraits?: boolean | number
    /** Number of non-empty values for traits */
    countNotEmptyTraits?: boolean | number
    /** Percentage of empty values for traits */
    percentageEmptyTraits?: boolean | number
    /** Percentage of non-empty values for traits */
    percentageNotEmptyTraits?: boolean | number
    /** Number of unique values for comments */
    countUniqueValuesComments?: boolean | number
    /** Number of empty values for comments */
    countEmptyComments?: boolean | number
    /** Number of non-empty values for comments */
    countNotEmptyComments?: boolean | number
    /** Percentage of empty values for comments */
    percentageEmptyComments?: boolean | number
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: boolean | number
    /** Number of unique values for age */
    countUniqueValuesAge?: boolean | number
    /** Number of empty values for age */
    countEmptyAge?: boolean | number
    /** Number of non-empty values for age */
    countNotEmptyAge?: boolean | number
    /** Percentage of empty values for age */
    percentageEmptyAge?: boolean | number
    /** Percentage of non-empty values for age */
    percentageNotEmptyAge?: boolean | number
    /** Minimum amount contained in the field age */
    minAge?: boolean | number
    /** Maximum amount contained in the field age */
    maxAge?: boolean | number
    /** Average amount contained in the field age */
    avgAge?: boolean | number
    /** Sum of amounts contained in the field age */
    sumAge?: boolean | number
    /** Number of unique values for location */
    countUniqueValuesLocation?: boolean | number
    /** Number of empty values for location */
    countEmptyLocation?: boolean | number
    /** Number of non-empty values for location */
    countNotEmptyLocation?: boolean | number
    /** Percentage of empty values for location */
    percentageEmptyLocation?: boolean | number
    /** Percentage of non-empty values for location */
    percentageNotEmptyLocation?: boolean | number
    /** Number of unique values for vetPhone */
    countUniqueValuesVetPhone?: boolean | number
    /** Number of empty values for vetPhone */
    countEmptyVetPhone?: boolean | number
    /** Number of non-empty values for vetPhone */
    countNotEmptyVetPhone?: boolean | number
    /** Percentage of empty values for vetPhone */
    percentageEmptyVetPhone?: boolean | number
    /** Percentage of non-empty values for vetPhone */
    percentageNotEmptyVetPhone?: boolean | number
    /** Number of unique values for vetEmail */
    countUniqueValuesVetEmail?: boolean | number
    /** Number of empty values for vetEmail */
    countEmptyVetEmail?: boolean | number
    /** Number of non-empty values for vetEmail */
    countNotEmptyVetEmail?: boolean | number
    /** Percentage of empty values for vetEmail */
    percentageEmptyVetEmail?: boolean | number
    /** Percentage of non-empty values for vetEmail */
    percentageNotEmptyVetEmail?: boolean | number
    /** Number of unique values for birthday */
    countUniqueValuesBirthday?: boolean | number
    /** Number of empty values for birthday */
    countEmptyBirthday?: boolean | number
    /** Number of non-empty values for birthday */
    countNotEmptyBirthday?: boolean | number
    /** Percentage of empty values for birthday */
    percentageEmptyBirthday?: boolean | number
    /** Percentage of non-empty values for birthday */
    percentageNotEmptyBirthday?: boolean | number
    /** Earliest date contained in the field birthday */
    minBirthday?: boolean | number
    /** Latest date contained in the field birthday */
    maxBirthday?: boolean | number
    /** Number of unique values for isGoodWithKids */
    countUniqueValuesIsGoodWithKids?: boolean | number
    /** Number of empty values for isGoodWithKids */
    countEmptyIsGoodWithKids?: boolean | number
    /** Number of non-empty values for isGoodWithKids */
    countNotEmptyIsGoodWithKids?: boolean | number
    /** Percentage of empty values for isGoodWithKids */
    percentageEmptyIsGoodWithKids?: boolean | number
    /** Percentage of non-empty values for isGoodWithKids */
    percentageNotEmptyIsGoodWithKids?: boolean | number
    /** Count of true values in the field isGoodWithKids */
    countTrueIsGoodWithKids?: boolean | number
    /** Count of false values in the field isGoodWithKids */
    countFalseIsGoodWithKids?: boolean | number
    /** Number of unique values for pictures */
    countUniqueValuesPictures?: boolean | number
    /** Number of empty values for pictures */
    countEmptyPictures?: boolean | number
    /** Number of non-empty values for pictures */
    countNotEmptyPictures?: boolean | number
    /** Percentage of empty values for pictures */
    percentageEmptyPictures?: boolean | number
    /** Percentage of non-empty values for pictures */
    percentageNotEmptyPictures?: boolean | number
    /** Number of unique values for averageCostOfKibblePerMonth */
    countUniqueValuesAverageCostOfKibblePerMonth?: boolean | number
    /** Number of empty values for averageCostOfKibblePerMonth */
    countEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Number of non-empty values for averageCostOfKibblePerMonth */
    countNotEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Percentage of empty values for averageCostOfKibblePerMonth */
    percentageEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Percentage of non-empty values for averageCostOfKibblePerMonth */
    percentageNotEmptyAverageCostOfKibblePerMonth?: boolean | number
    /** Minimum amount contained in the field averageCostOfKibblePerMonth */
    minAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Maximal amount contained in the field averageCostOfKibblePerMonth */
    maxAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Sum of amounts contained in the field averageCostOfKibblePerMonth */
    sumAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Average amount contained in the field averageCostOfKibblePerMonth */
    avgAverageCostOfKibblePerMonthAmountMicros?: boolean | number
    /** Number of unique values for soundSwag */
    countUniqueValuesSoundSwag?: boolean | number
    /** Number of empty values for soundSwag */
    countEmptySoundSwag?: boolean | number
    /** Number of non-empty values for soundSwag */
    countNotEmptySoundSwag?: boolean | number
    /** Percentage of empty values for soundSwag */
    percentageEmptySoundSwag?: boolean | number
    /** Percentage of non-empty values for soundSwag */
    percentageNotEmptySoundSwag?: boolean | number
    /** Number of unique values for bio */
    countUniqueValuesBio?: boolean | number
    /** Number of empty values for bio */
    countEmptyBio?: boolean | number
    /** Number of non-empty values for bio */
    countNotEmptyBio?: boolean | number
    /** Percentage of empty values for bio */
    percentageEmptyBio?: boolean | number
    /** Percentage of non-empty values for bio */
    percentageNotEmptyBio?: boolean | number
    /** Number of unique values for interestingFacts */
    countUniqueValuesInterestingFacts?: boolean | number
    /** Number of empty values for interestingFacts */
    countEmptyInterestingFacts?: boolean | number
    /** Number of non-empty values for interestingFacts */
    countNotEmptyInterestingFacts?: boolean | number
    /** Percentage of empty values for interestingFacts */
    percentageEmptyInterestingFacts?: boolean | number
    /** Percentage of non-empty values for interestingFacts */
    percentageNotEmptyInterestingFacts?: boolean | number
    /** Number of unique values for extraData */
    countUniqueValuesExtraData?: boolean | number
    /** Number of empty values for extraData */
    countEmptyExtraData?: boolean | number
    /** Number of non-empty values for extraData */
    countNotEmptyExtraData?: boolean | number
    /** Percentage of empty values for extraData */
    percentageEmptyExtraData?: boolean | number
    /** Percentage of non-empty values for extraData */
    percentageNotEmptyExtraData?: boolean | number
    /** Number of unique values for ownerSurveyResult */
    countUniqueValuesOwnerSurveyResult?: boolean | number
    /** Number of empty values for ownerSurveyResult */
    countEmptyOwnerSurveyResult?: boolean | number
    /** Number of non-empty values for ownerSurveyResult */
    countNotEmptyOwnerSurveyResult?: boolean | number
    /** Percentage of empty values for ownerSurveyResult */
    percentageEmptyOwnerSurveyResult?: boolean | number
    /** Percentage of non-empty values for ownerSurveyResult */
    percentageNotEmptyOwnerSurveyResult?: boolean | number
    /** Number of unique values for ownerRocket */
    countUniqueValuesOwnerRocket?: boolean | number
    /** Number of empty values for ownerRocket */
    countEmptyOwnerRocket?: boolean | number
    /** Number of non-empty values for ownerRocket */
    countNotEmptyOwnerRocket?: boolean | number
    /** Percentage of empty values for ownerRocket */
    percentageEmptyOwnerRocket?: boolean | number
    /** Percentage of non-empty values for ownerRocket */
    percentageNotEmptyOwnerRocket?: boolean | number
    /** Number of unique values for helperSurveyResults */
    countUniqueValuesHelperSurveyResults?: boolean | number
    /** Number of empty values for helperSurveyResults */
    countEmptyHelperSurveyResults?: boolean | number
    /** Number of non-empty values for helperSurveyResults */
    countNotEmptyHelperSurveyResults?: boolean | number
    /** Percentage of empty values for helperSurveyResults */
    percentageEmptyHelperSurveyResults?: boolean | number
    /** Percentage of non-empty values for helperSurveyResults */
    percentageNotEmptyHelperSurveyResults?: boolean | number
    /** Number of unique values for helperRockets */
    countUniqueValuesHelperRockets?: boolean | number
    /** Number of empty values for helperRockets */
    countEmptyHelperRockets?: boolean | number
    /** Number of non-empty values for helperRockets */
    countNotEmptyHelperRockets?: boolean | number
    /** Percentage of empty values for helperRockets */
    percentageEmptyHelperRockets?: boolean | number
    /** Percentage of non-empty values for helperRockets */
    percentageNotEmptyHelperRockets?: boolean | number
    edges?: PetEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface PetRelationInput {
/** Connect to a pet record */
connect?: (PetConnectInput | null),
/** Disconnect from a pet record */
disconnect?: (Scalars['Boolean'] | null)}

export interface PetConnectInput {
/** Find a pet record based on its unique fields: id */
where?: (PetWhereUniqueInput | null)}

export interface PetWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}

export interface PetCreateInput {
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),makesOwnerThinkOf?: (FullNameCreateInput | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Name */
name?: (Scalars['String'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Deletion date */
deletedAt?: (Scalars['DateTime'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Position */
position?: (Scalars['Position'] | null),
/** Search vector */
searchVector?: (Scalars['TSVector'] | null),species?: (PetSpeciesEnum | null),traits?: ((PetTraitsEnum | null)[] | null),comments?: (Scalars['String'] | null),age?: (Scalars['Float'] | null),location?: (AddressCreateInput | null),vetPhone?: (PhonesCreateInput | null),vetEmail?: (EmailsCreateInput | null),birthday?: (Scalars['DateTime'] | null),isGoodWithKids?: (Scalars['Boolean'] | null),pictures?: (LinksCreateInput | null),averageCostOfKibblePerMonth?: (CurrencyCreateInput | null),soundSwag?: (PetSoundSwagEnum | null),bio?: (Scalars['String'] | null),interestingFacts?: ((Scalars['String'] | null)[] | null),extraData?: (Scalars['JSON'] | null),ownerSurveyResultId?: (Scalars['ID'] | null),ownerRocketId?: (Scalars['ID'] | null)}

export interface PetUpdateInput {
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),makesOwnerThinkOf?: (FullNameUpdateInput | null),
/** Id */
id?: (Scalars['ID'] | null),
/** Name */
name?: (Scalars['String'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Deletion date */
deletedAt?: (Scalars['DateTime'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Position */
position?: (Scalars['Position'] | null),
/** Search vector */
searchVector?: (Scalars['TSVector'] | null),species?: (PetSpeciesEnum | null),traits?: ((PetTraitsEnum | null)[] | null),comments?: (Scalars['String'] | null),age?: (Scalars['Float'] | null),location?: (AddressUpdateInput | null),vetPhone?: (PhonesUpdateInput | null),vetEmail?: (EmailsUpdateInput | null),birthday?: (Scalars['DateTime'] | null),isGoodWithKids?: (Scalars['Boolean'] | null),pictures?: (LinksUpdateInput | null),averageCostOfKibblePerMonth?: (CurrencyUpdateInput | null),soundSwag?: (PetSoundSwagEnum | null),bio?: (Scalars['String'] | null),interestingFacts?: ((Scalars['String'] | null)[] | null),extraData?: (Scalars['JSON'] | null),ownerSurveyResultId?: (Scalars['ID'] | null),ownerRocketId?: (Scalars['ID'] | null)}

export interface PetFilterInput {
/** Creation date */
createdAt?: (DateFilter | null),makesOwnerThinkOf?: (FullNameFilterInput | null),
/** Id */
id?: (UUIDFilter | null),
/** Name */
name?: (StringFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Deletion date */
deletedAt?: (DateFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Position */
position?: (FloatFilter | null),
/** Search vector */
searchVector?: (TSVectorFilter | null),species?: (PetSpeciesEnumFilter | null),traits?: (PetTraitsEnumFilter | null),comments?: (StringFilter | null),age?: (FloatFilter | null),location?: (AddressFilterInput | null),vetPhone?: (PhonesFilterInput | null),vetEmail?: (EmailsFilterInput | null),birthday?: (DateFilter | null),isGoodWithKids?: (BooleanFilter | null),pictures?: (LinksFilterInput | null),averageCostOfKibblePerMonth?: (CurrencyFilterInput | null),soundSwag?: (PetSoundSwagEnumFilter | null),bio?: (StringFilter | null),interestingFacts?: (ArrayFilter | null),extraData?: (RawJsonFilter | null),ownerSurveyResultId?: (UUIDFilter | null),ownerRocketId?: (UUIDFilter | null),and?: ((PetFilterInput | null)[] | null),or?: ((PetFilterInput | null)[] | null),not?: (PetFilterInput | null)}

export interface PetSpeciesEnumFilter {eq?: (PetSpeciesEnum | null),neq?: (PetSpeciesEnum | null),in?: ((PetSpeciesEnum | null)[] | null),containsAny?: ((PetSpeciesEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface PetTraitsEnumFilter {eq?: (PetTraitsEnum | null),neq?: (PetTraitsEnum | null),in?: ((PetTraitsEnum | null)[] | null),containsAny?: ((PetTraitsEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface PetSoundSwagEnumFilter {eq?: (PetSoundSwagEnum | null),neq?: (PetSoundSwagEnum | null),in?: ((PetSoundSwagEnum | null)[] | null),containsAny?: ((PetSoundSwagEnum | null)[] | null),is?: (FilterIs | null),isEmptyArray?: (Scalars['Boolean'] | null)}

export interface PetOrderByInput {
/** Creation date */
createdAt?: (OrderByDirection | null),makesOwnerThinkOf?: (FullNameOrderByInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Name */
name?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Deletion date */
deletedAt?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Position */
position?: (OrderByDirection | null),
/** Search vector */
searchVector?: (OrderByDirection | null),species?: (OrderByDirection | null),traits?: (OrderByDirection | null),comments?: (OrderByDirection | null),age?: (OrderByDirection | null),location?: (AddressOrderByInput | null),vetPhone?: (PhonesOrderByInput | null),vetEmail?: (EmailsOrderByInput | null),birthday?: (OrderByDirection | null),isGoodWithKids?: (OrderByDirection | null),pictures?: (LinksOrderByInput | null),averageCostOfKibblePerMonth?: (CurrencyOrderByInput | null),soundSwag?: (OrderByDirection | null),bio?: (OrderByDirection | null),interestingFacts?: (OrderByDirection | null),extraData?: (OrderByDirection | null),ownerSurveyResultId?: (OrderByDirection | null),ownerRocketId?: (OrderByDirection | null)}

export interface PetOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (PetOrderByWithGroupByAggregateInput | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),makesOwnerThinkOf?: (FullNameOrderByInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Name */
name?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Deletion date */
deletedAt?: (OrderByDateGranularityInput | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Position */
position?: (OrderByDirection | null),
/** Search vector */
searchVector?: (OrderByDirection | null),species?: (OrderByDirection | null),traits?: (OrderByDirection | null),comments?: (OrderByDirection | null),age?: (OrderByDirection | null),location?: (AddressOrderByInput | null),vetPhone?: (PhonesOrderByInput | null),vetEmail?: (EmailsOrderByInput | null),birthday?: (OrderByDateGranularityInput | null),isGoodWithKids?: (OrderByDirection | null),pictures?: (LinksOrderByInput | null),averageCostOfKibblePerMonth?: (CurrencyOrderByInput | null),soundSwag?: (OrderByDirection | null),bio?: (OrderByDirection | null),interestingFacts?: (OrderByDirection | null),extraData?: (OrderByDirection | null),ownerSurveyResultId?: (OrderByDirection | null),ownerRocketId?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface PetOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for makesOwnerThinkOf */
countUniqueValuesMakesOwnerThinkOf?: (OrderByDirection | null),
/** Number of empty values for makesOwnerThinkOf */
countEmptyMakesOwnerThinkOf?: (OrderByDirection | null),
/** Number of non-empty values for makesOwnerThinkOf */
countNotEmptyMakesOwnerThinkOf?: (OrderByDirection | null),
/** Percentage of empty values for makesOwnerThinkOf */
percentageEmptyMakesOwnerThinkOf?: (OrderByDirection | null),
/** Percentage of non-empty values for makesOwnerThinkOf */
percentageNotEmptyMakesOwnerThinkOf?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for species */
countUniqueValuesSpecies?: (OrderByDirection | null),
/** Number of empty values for species */
countEmptySpecies?: (OrderByDirection | null),
/** Number of non-empty values for species */
countNotEmptySpecies?: (OrderByDirection | null),
/** Percentage of empty values for species */
percentageEmptySpecies?: (OrderByDirection | null),
/** Percentage of non-empty values for species */
percentageNotEmptySpecies?: (OrderByDirection | null),
/** Number of unique values for traits */
countUniqueValuesTraits?: (OrderByDirection | null),
/** Number of empty values for traits */
countEmptyTraits?: (OrderByDirection | null),
/** Number of non-empty values for traits */
countNotEmptyTraits?: (OrderByDirection | null),
/** Percentage of empty values for traits */
percentageEmptyTraits?: (OrderByDirection | null),
/** Percentage of non-empty values for traits */
percentageNotEmptyTraits?: (OrderByDirection | null),
/** Number of unique values for comments */
countUniqueValuesComments?: (OrderByDirection | null),
/** Number of empty values for comments */
countEmptyComments?: (OrderByDirection | null),
/** Number of non-empty values for comments */
countNotEmptyComments?: (OrderByDirection | null),
/** Percentage of empty values for comments */
percentageEmptyComments?: (OrderByDirection | null),
/** Percentage of non-empty values for comments */
percentageNotEmptyComments?: (OrderByDirection | null),
/** Number of unique values for age */
countUniqueValuesAge?: (OrderByDirection | null),
/** Number of empty values for age */
countEmptyAge?: (OrderByDirection | null),
/** Number of non-empty values for age */
countNotEmptyAge?: (OrderByDirection | null),
/** Percentage of empty values for age */
percentageEmptyAge?: (OrderByDirection | null),
/** Percentage of non-empty values for age */
percentageNotEmptyAge?: (OrderByDirection | null),
/** Minimum amount contained in the field age */
minAge?: (OrderByDirection | null),
/** Maximum amount contained in the field age */
maxAge?: (OrderByDirection | null),
/** Average amount contained in the field age */
avgAge?: (OrderByDirection | null),
/** Sum of amounts contained in the field age */
sumAge?: (OrderByDirection | null),
/** Number of unique values for location */
countUniqueValuesLocation?: (OrderByDirection | null),
/** Number of empty values for location */
countEmptyLocation?: (OrderByDirection | null),
/** Number of non-empty values for location */
countNotEmptyLocation?: (OrderByDirection | null),
/** Percentage of empty values for location */
percentageEmptyLocation?: (OrderByDirection | null),
/** Percentage of non-empty values for location */
percentageNotEmptyLocation?: (OrderByDirection | null),
/** Number of unique values for vetPhone */
countUniqueValuesVetPhone?: (OrderByDirection | null),
/** Number of empty values for vetPhone */
countEmptyVetPhone?: (OrderByDirection | null),
/** Number of non-empty values for vetPhone */
countNotEmptyVetPhone?: (OrderByDirection | null),
/** Percentage of empty values for vetPhone */
percentageEmptyVetPhone?: (OrderByDirection | null),
/** Percentage of non-empty values for vetPhone */
percentageNotEmptyVetPhone?: (OrderByDirection | null),
/** Number of unique values for vetEmail */
countUniqueValuesVetEmail?: (OrderByDirection | null),
/** Number of empty values for vetEmail */
countEmptyVetEmail?: (OrderByDirection | null),
/** Number of non-empty values for vetEmail */
countNotEmptyVetEmail?: (OrderByDirection | null),
/** Percentage of empty values for vetEmail */
percentageEmptyVetEmail?: (OrderByDirection | null),
/** Percentage of non-empty values for vetEmail */
percentageNotEmptyVetEmail?: (OrderByDirection | null),
/** Number of unique values for birthday */
countUniqueValuesBirthday?: (OrderByDirection | null),
/** Number of empty values for birthday */
countEmptyBirthday?: (OrderByDirection | null),
/** Number of non-empty values for birthday */
countNotEmptyBirthday?: (OrderByDirection | null),
/** Percentage of empty values for birthday */
percentageEmptyBirthday?: (OrderByDirection | null),
/** Percentage of non-empty values for birthday */
percentageNotEmptyBirthday?: (OrderByDirection | null),
/** Earliest date contained in the field birthday */
minBirthday?: (OrderByDirection | null),
/** Latest date contained in the field birthday */
maxBirthday?: (OrderByDirection | null),
/** Number of unique values for isGoodWithKids */
countUniqueValuesIsGoodWithKids?: (OrderByDirection | null),
/** Number of empty values for isGoodWithKids */
countEmptyIsGoodWithKids?: (OrderByDirection | null),
/** Number of non-empty values for isGoodWithKids */
countNotEmptyIsGoodWithKids?: (OrderByDirection | null),
/** Percentage of empty values for isGoodWithKids */
percentageEmptyIsGoodWithKids?: (OrderByDirection | null),
/** Percentage of non-empty values for isGoodWithKids */
percentageNotEmptyIsGoodWithKids?: (OrderByDirection | null),
/** Count of true values in the field isGoodWithKids */
countTrueIsGoodWithKids?: (OrderByDirection | null),
/** Count of false values in the field isGoodWithKids */
countFalseIsGoodWithKids?: (OrderByDirection | null),
/** Number of unique values for pictures */
countUniqueValuesPictures?: (OrderByDirection | null),
/** Number of empty values for pictures */
countEmptyPictures?: (OrderByDirection | null),
/** Number of non-empty values for pictures */
countNotEmptyPictures?: (OrderByDirection | null),
/** Percentage of empty values for pictures */
percentageEmptyPictures?: (OrderByDirection | null),
/** Percentage of non-empty values for pictures */
percentageNotEmptyPictures?: (OrderByDirection | null),
/** Number of unique values for averageCostOfKibblePerMonth */
countUniqueValuesAverageCostOfKibblePerMonth?: (OrderByDirection | null),
/** Number of empty values for averageCostOfKibblePerMonth */
countEmptyAverageCostOfKibblePerMonth?: (OrderByDirection | null),
/** Number of non-empty values for averageCostOfKibblePerMonth */
countNotEmptyAverageCostOfKibblePerMonth?: (OrderByDirection | null),
/** Percentage of empty values for averageCostOfKibblePerMonth */
percentageEmptyAverageCostOfKibblePerMonth?: (OrderByDirection | null),
/** Percentage of non-empty values for averageCostOfKibblePerMonth */
percentageNotEmptyAverageCostOfKibblePerMonth?: (OrderByDirection | null),
/** Minimum amount contained in the field averageCostOfKibblePerMonth */
minAverageCostOfKibblePerMonthAmountMicros?: (OrderByDirection | null),
/** Maximal amount contained in the field averageCostOfKibblePerMonth */
maxAverageCostOfKibblePerMonthAmountMicros?: (OrderByDirection | null),
/** Sum of amounts contained in the field averageCostOfKibblePerMonth */
sumAverageCostOfKibblePerMonthAmountMicros?: (OrderByDirection | null),
/** Average amount contained in the field averageCostOfKibblePerMonth */
avgAverageCostOfKibblePerMonthAmountMicros?: (OrderByDirection | null),
/** Number of unique values for soundSwag */
countUniqueValuesSoundSwag?: (OrderByDirection | null),
/** Number of empty values for soundSwag */
countEmptySoundSwag?: (OrderByDirection | null),
/** Number of non-empty values for soundSwag */
countNotEmptySoundSwag?: (OrderByDirection | null),
/** Percentage of empty values for soundSwag */
percentageEmptySoundSwag?: (OrderByDirection | null),
/** Percentage of non-empty values for soundSwag */
percentageNotEmptySoundSwag?: (OrderByDirection | null),
/** Number of unique values for bio */
countUniqueValuesBio?: (OrderByDirection | null),
/** Number of empty values for bio */
countEmptyBio?: (OrderByDirection | null),
/** Number of non-empty values for bio */
countNotEmptyBio?: (OrderByDirection | null),
/** Percentage of empty values for bio */
percentageEmptyBio?: (OrderByDirection | null),
/** Percentage of non-empty values for bio */
percentageNotEmptyBio?: (OrderByDirection | null),
/** Number of unique values for interestingFacts */
countUniqueValuesInterestingFacts?: (OrderByDirection | null),
/** Number of empty values for interestingFacts */
countEmptyInterestingFacts?: (OrderByDirection | null),
/** Number of non-empty values for interestingFacts */
countNotEmptyInterestingFacts?: (OrderByDirection | null),
/** Percentage of empty values for interestingFacts */
percentageEmptyInterestingFacts?: (OrderByDirection | null),
/** Percentage of non-empty values for interestingFacts */
percentageNotEmptyInterestingFacts?: (OrderByDirection | null),
/** Number of unique values for extraData */
countUniqueValuesExtraData?: (OrderByDirection | null),
/** Number of empty values for extraData */
countEmptyExtraData?: (OrderByDirection | null),
/** Number of non-empty values for extraData */
countNotEmptyExtraData?: (OrderByDirection | null),
/** Percentage of empty values for extraData */
percentageEmptyExtraData?: (OrderByDirection | null),
/** Percentage of non-empty values for extraData */
percentageNotEmptyExtraData?: (OrderByDirection | null),ownerSurveyResultId?: (OrderByDirection | null),ownerRocketId?: (OrderByDirection | null)}

export interface PetGroupByInput {
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),makesOwnerThinkOf?: (FullNameGroupByInput | null),
/** Id */
id?: (Scalars['Boolean'] | null),
/** Name */
name?: (Scalars['Boolean'] | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Deletion date */
deletedAt?: (GroupByDateGranularityInput | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Position */
position?: (Scalars['Boolean'] | null),
/** Search vector */
searchVector?: (Scalars['Boolean'] | null),species?: (Scalars['Boolean'] | null),traits?: (Scalars['Boolean'] | null),comments?: (Scalars['Boolean'] | null),age?: (Scalars['Boolean'] | null),location?: (AddressGroupByInput | null),vetPhone?: (PhonesGroupByInput | null),vetEmail?: (EmailsGroupByInput | null),birthday?: (GroupByDateGranularityInput | null),isGoodWithKids?: (Scalars['Boolean'] | null),pictures?: (LinksGroupByInput | null),averageCostOfKibblePerMonth?: (CurrencyGroupByInput | null),soundSwag?: (Scalars['Boolean'] | null),bio?: (Scalars['Boolean'] | null),interestingFacts?: (Scalars['Boolean'] | null),extraData?: (Scalars['Boolean'] | null),ownerSurveyResultId?: (Scalars['Boolean'] | null),ownerRocketId?: (Scalars['Boolean'] | null)}


/** A rocket */
export interface RocketGenqlSelection{
    /** Id */
    id?: boolean | number
    /** Name */
    name?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Deletion date */
    deletedAt?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Position */
    position?: boolean | number
    /** Search vector */
    searchVector?: boolean | number
    helpedById?: boolean | number
    /** TimelineActivities tied to the Rocket */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    /** Favorites tied to the Rocket */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Attachments tied to the Rocket */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** NoteTargets tied to the Rocket */
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    /** TaskTargets tied to the Rocket */
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    ownedBy?: (PetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (PetFilterInput | null), orderBy?: ((PetOrderByInput | null)[] | null)} })
    helpedBy?: PetGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A rocket */
export interface RocketEdgeGenqlSelection{
    node?: RocketGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A rocket */
export interface RocketConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    edges?: RocketEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}


/** A rocket */
export interface RocketGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    edges?: RocketEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface RocketRelationInput {
/** Connect to a rocket record */
connect?: (RocketConnectInput | null),
/** Disconnect from a rocket record */
disconnect?: (Scalars['Boolean'] | null)}

export interface RocketConnectInput {
/** Find a rocket record based on its unique fields: id */
where?: (RocketWhereUniqueInput | null)}

export interface RocketWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}


/** A rocket */
export interface RocketCreateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Name */
name?: (Scalars['String'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Deletion date */
deletedAt?: (Scalars['DateTime'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Position */
position?: (Scalars['Position'] | null),
/** Search vector */
searchVector?: (Scalars['TSVector'] | null),helpedById?: (Scalars['ID'] | null),helpedBy?: (PetRelationInput | null)}


/** A rocket */
export interface RocketUpdateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Name */
name?: (Scalars['String'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Deletion date */
deletedAt?: (Scalars['DateTime'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Position */
position?: (Scalars['Position'] | null),
/** Search vector */
searchVector?: (Scalars['TSVector'] | null),helpedById?: (Scalars['ID'] | null),helpedBy?: (PetRelationInput | null)}


/** A rocket */
export interface RocketFilterInput {
/** Id */
id?: (UUIDFilter | null),
/** Name */
name?: (StringFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Deletion date */
deletedAt?: (DateFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Position */
position?: (FloatFilter | null),
/** Search vector */
searchVector?: (TSVectorFilter | null),helpedById?: (UUIDFilter | null),and?: ((RocketFilterInput | null)[] | null),or?: ((RocketFilterInput | null)[] | null),not?: (RocketFilterInput | null)}


/** A rocket */
export interface RocketOrderByInput {
/** Id */
id?: (OrderByDirection | null),
/** Name */
name?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Deletion date */
deletedAt?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Position */
position?: (OrderByDirection | null),
/** Search vector */
searchVector?: (OrderByDirection | null),helpedById?: (OrderByDirection | null)}


/** A rocket */
export interface RocketOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (RocketOrderByWithGroupByAggregateInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Name */
name?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Deletion date */
deletedAt?: (OrderByDateGranularityInput | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Position */
position?: (OrderByDirection | null),
/** Search vector */
searchVector?: (OrderByDirection | null),helpedById?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface RocketOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),helpedById?: (OrderByDirection | null)}


/** A rocket */
export interface RocketGroupByInput {
/** Id */
id?: (Scalars['Boolean'] | null),
/** Name */
name?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Deletion date */
deletedAt?: (GroupByDateGranularityInput | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Position */
position?: (Scalars['Boolean'] | null),
/** Search vector */
searchVector?: (Scalars['Boolean'] | null),helpedById?: (Scalars['Boolean'] | null)}

export interface SurveyResultGenqlSelection{
    /** Id */
    id?: boolean | number
    /** Name */
    name?: boolean | number
    /** Creation date */
    createdAt?: boolean | number
    /** Last time the record was changed */
    updatedAt?: boolean | number
    /** Deletion date */
    deletedAt?: boolean | number
    /** The creator of the record */
    createdBy?: ActorGenqlSelection
    /** Position */
    position?: boolean | number
    /** Search vector */
    searchVector?: boolean | number
    score?: boolean | number
    percentageOfCompletion?: boolean | number
    participants?: boolean | number
    averageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    comments?: boolean | number
    shortNotes?: boolean | number
    helpedById?: boolean | number
    /** TimelineActivities tied to the Survey result */
    timelineActivities?: (TimelineActivityConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TimelineActivityFilterInput | null), orderBy?: ((TimelineActivityOrderByInput | null)[] | null)} })
    /** Favorites tied to the Survey result */
    favorites?: (FavoriteConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (FavoriteFilterInput | null), orderBy?: ((FavoriteOrderByInput | null)[] | null)} })
    /** Attachments tied to the Survey result */
    attachments?: (AttachmentConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (AttachmentFilterInput | null), orderBy?: ((AttachmentOrderByInput | null)[] | null)} })
    /** NoteTargets tied to the Survey result */
    noteTargets?: (NoteTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (NoteTargetFilterInput | null), orderBy?: ((NoteTargetOrderByInput | null)[] | null)} })
    /** TaskTargets tied to the Survey result */
    taskTargets?: (TaskTargetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (TaskTargetFilterInput | null), orderBy?: ((TaskTargetOrderByInput | null)[] | null)} })
    ownedBy?: (PetConnectionGenqlSelection & { __args?: {first?: (Scalars['Int'] | null), last?: (Scalars['Int'] | null), offset?: (Scalars['Int'] | null), before?: (Scalars['String'] | null), after?: (Scalars['String'] | null), filter?: (PetFilterInput | null), orderBy?: ((PetOrderByInput | null)[] | null)} })
    helpedBy?: PetGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SurveyResultEdgeGenqlSelection{
    node?: SurveyResultGenqlSelection
    cursor?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SurveyResultConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for score */
    countUniqueValuesScore?: boolean | number
    /** Number of empty values for score */
    countEmptyScore?: boolean | number
    /** Number of non-empty values for score */
    countNotEmptyScore?: boolean | number
    /** Percentage of empty values for score */
    percentageEmptyScore?: boolean | number
    /** Percentage of non-empty values for score */
    percentageNotEmptyScore?: boolean | number
    /** Minimum amount contained in the field score */
    minScore?: boolean | number
    /** Maximum amount contained in the field score */
    maxScore?: boolean | number
    /** Average amount contained in the field score */
    avgScore?: boolean | number
    /** Sum of amounts contained in the field score */
    sumScore?: boolean | number
    /** Number of unique values for percentageOfCompletion */
    countUniqueValuesPercentageOfCompletion?: boolean | number
    /** Number of empty values for percentageOfCompletion */
    countEmptyPercentageOfCompletion?: boolean | number
    /** Number of non-empty values for percentageOfCompletion */
    countNotEmptyPercentageOfCompletion?: boolean | number
    /** Percentage of empty values for percentageOfCompletion */
    percentageEmptyPercentageOfCompletion?: boolean | number
    /** Percentage of non-empty values for percentageOfCompletion */
    percentageNotEmptyPercentageOfCompletion?: boolean | number
    /** Minimum amount contained in the field percentageOfCompletion */
    minPercentageOfCompletion?: boolean | number
    /** Maximum amount contained in the field percentageOfCompletion */
    maxPercentageOfCompletion?: boolean | number
    /** Average amount contained in the field percentageOfCompletion */
    avgPercentageOfCompletion?: boolean | number
    /** Sum of amounts contained in the field percentageOfCompletion */
    sumPercentageOfCompletion?: boolean | number
    /** Number of unique values for participants */
    countUniqueValuesParticipants?: boolean | number
    /** Number of empty values for participants */
    countEmptyParticipants?: boolean | number
    /** Number of non-empty values for participants */
    countNotEmptyParticipants?: boolean | number
    /** Percentage of empty values for participants */
    percentageEmptyParticipants?: boolean | number
    /** Percentage of non-empty values for participants */
    percentageNotEmptyParticipants?: boolean | number
    /** Minimum amount contained in the field participants */
    minParticipants?: boolean | number
    /** Maximum amount contained in the field participants */
    maxParticipants?: boolean | number
    /** Average amount contained in the field participants */
    avgParticipants?: boolean | number
    /** Sum of amounts contained in the field participants */
    sumParticipants?: boolean | number
    /** Number of unique values for averageEstimatedNumberOfAtomsInTheUniverse */
    countUniqueValuesAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Number of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Number of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Percentage of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Percentage of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Minimum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    minAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Maximum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    maxAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Average amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    avgAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Sum of amounts contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    sumAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Number of unique values for comments */
    countUniqueValuesComments?: boolean | number
    /** Number of empty values for comments */
    countEmptyComments?: boolean | number
    /** Number of non-empty values for comments */
    countNotEmptyComments?: boolean | number
    /** Percentage of empty values for comments */
    percentageEmptyComments?: boolean | number
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: boolean | number
    /** Number of unique values for shortNotes */
    countUniqueValuesShortNotes?: boolean | number
    /** Number of empty values for shortNotes */
    countEmptyShortNotes?: boolean | number
    /** Number of non-empty values for shortNotes */
    countNotEmptyShortNotes?: boolean | number
    /** Percentage of empty values for shortNotes */
    percentageEmptyShortNotes?: boolean | number
    /** Percentage of non-empty values for shortNotes */
    percentageNotEmptyShortNotes?: boolean | number
    edges?: SurveyResultEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SurveyResultGroupByConnectionGenqlSelection{
    /** Total number of records in the connection */
    totalCount?: boolean | number
    /** Number of unique values for id */
    countUniqueValuesId?: boolean | number
    /** Number of empty values for id */
    countEmptyId?: boolean | number
    /** Number of non-empty values for id */
    countNotEmptyId?: boolean | number
    /** Percentage of empty values for id */
    percentageEmptyId?: boolean | number
    /** Percentage of non-empty values for id */
    percentageNotEmptyId?: boolean | number
    /** Number of unique values for name */
    countUniqueValuesName?: boolean | number
    /** Number of empty values for name */
    countEmptyName?: boolean | number
    /** Number of non-empty values for name */
    countNotEmptyName?: boolean | number
    /** Percentage of empty values for name */
    percentageEmptyName?: boolean | number
    /** Percentage of non-empty values for name */
    percentageNotEmptyName?: boolean | number
    /** Number of unique values for createdAt */
    countUniqueValuesCreatedAt?: boolean | number
    /** Number of empty values for createdAt */
    countEmptyCreatedAt?: boolean | number
    /** Number of non-empty values for createdAt */
    countNotEmptyCreatedAt?: boolean | number
    /** Percentage of empty values for createdAt */
    percentageEmptyCreatedAt?: boolean | number
    /** Percentage of non-empty values for createdAt */
    percentageNotEmptyCreatedAt?: boolean | number
    /** Earliest date contained in the field createdAt */
    minCreatedAt?: boolean | number
    /** Latest date contained in the field createdAt */
    maxCreatedAt?: boolean | number
    /** Number of unique values for updatedAt */
    countUniqueValuesUpdatedAt?: boolean | number
    /** Number of empty values for updatedAt */
    countEmptyUpdatedAt?: boolean | number
    /** Number of non-empty values for updatedAt */
    countNotEmptyUpdatedAt?: boolean | number
    /** Percentage of empty values for updatedAt */
    percentageEmptyUpdatedAt?: boolean | number
    /** Percentage of non-empty values for updatedAt */
    percentageNotEmptyUpdatedAt?: boolean | number
    /** Earliest date contained in the field updatedAt */
    minUpdatedAt?: boolean | number
    /** Latest date contained in the field updatedAt */
    maxUpdatedAt?: boolean | number
    /** Number of unique values for deletedAt */
    countUniqueValuesDeletedAt?: boolean | number
    /** Number of empty values for deletedAt */
    countEmptyDeletedAt?: boolean | number
    /** Number of non-empty values for deletedAt */
    countNotEmptyDeletedAt?: boolean | number
    /** Percentage of empty values for deletedAt */
    percentageEmptyDeletedAt?: boolean | number
    /** Percentage of non-empty values for deletedAt */
    percentageNotEmptyDeletedAt?: boolean | number
    /** Earliest date contained in the field deletedAt */
    minDeletedAt?: boolean | number
    /** Latest date contained in the field deletedAt */
    maxDeletedAt?: boolean | number
    /** Number of unique values for createdBy */
    countUniqueValuesCreatedBy?: boolean | number
    /** Number of empty values for createdBy */
    countEmptyCreatedBy?: boolean | number
    /** Number of non-empty values for createdBy */
    countNotEmptyCreatedBy?: boolean | number
    /** Percentage of empty values for createdBy */
    percentageEmptyCreatedBy?: boolean | number
    /** Percentage of non-empty values for createdBy */
    percentageNotEmptyCreatedBy?: boolean | number
    /** Number of unique values for position */
    countUniqueValuesPosition?: boolean | number
    /** Number of empty values for position */
    countEmptyPosition?: boolean | number
    /** Number of non-empty values for position */
    countNotEmptyPosition?: boolean | number
    /** Percentage of empty values for position */
    percentageEmptyPosition?: boolean | number
    /** Percentage of non-empty values for position */
    percentageNotEmptyPosition?: boolean | number
    /** Number of unique values for searchVector */
    countUniqueValuesSearchVector?: boolean | number
    /** Number of empty values for searchVector */
    countEmptySearchVector?: boolean | number
    /** Number of non-empty values for searchVector */
    countNotEmptySearchVector?: boolean | number
    /** Percentage of empty values for searchVector */
    percentageEmptySearchVector?: boolean | number
    /** Percentage of non-empty values for searchVector */
    percentageNotEmptySearchVector?: boolean | number
    /** Number of unique values for score */
    countUniqueValuesScore?: boolean | number
    /** Number of empty values for score */
    countEmptyScore?: boolean | number
    /** Number of non-empty values for score */
    countNotEmptyScore?: boolean | number
    /** Percentage of empty values for score */
    percentageEmptyScore?: boolean | number
    /** Percentage of non-empty values for score */
    percentageNotEmptyScore?: boolean | number
    /** Minimum amount contained in the field score */
    minScore?: boolean | number
    /** Maximum amount contained in the field score */
    maxScore?: boolean | number
    /** Average amount contained in the field score */
    avgScore?: boolean | number
    /** Sum of amounts contained in the field score */
    sumScore?: boolean | number
    /** Number of unique values for percentageOfCompletion */
    countUniqueValuesPercentageOfCompletion?: boolean | number
    /** Number of empty values for percentageOfCompletion */
    countEmptyPercentageOfCompletion?: boolean | number
    /** Number of non-empty values for percentageOfCompletion */
    countNotEmptyPercentageOfCompletion?: boolean | number
    /** Percentage of empty values for percentageOfCompletion */
    percentageEmptyPercentageOfCompletion?: boolean | number
    /** Percentage of non-empty values for percentageOfCompletion */
    percentageNotEmptyPercentageOfCompletion?: boolean | number
    /** Minimum amount contained in the field percentageOfCompletion */
    minPercentageOfCompletion?: boolean | number
    /** Maximum amount contained in the field percentageOfCompletion */
    maxPercentageOfCompletion?: boolean | number
    /** Average amount contained in the field percentageOfCompletion */
    avgPercentageOfCompletion?: boolean | number
    /** Sum of amounts contained in the field percentageOfCompletion */
    sumPercentageOfCompletion?: boolean | number
    /** Number of unique values for participants */
    countUniqueValuesParticipants?: boolean | number
    /** Number of empty values for participants */
    countEmptyParticipants?: boolean | number
    /** Number of non-empty values for participants */
    countNotEmptyParticipants?: boolean | number
    /** Percentage of empty values for participants */
    percentageEmptyParticipants?: boolean | number
    /** Percentage of non-empty values for participants */
    percentageNotEmptyParticipants?: boolean | number
    /** Minimum amount contained in the field participants */
    minParticipants?: boolean | number
    /** Maximum amount contained in the field participants */
    maxParticipants?: boolean | number
    /** Average amount contained in the field participants */
    avgParticipants?: boolean | number
    /** Sum of amounts contained in the field participants */
    sumParticipants?: boolean | number
    /** Number of unique values for averageEstimatedNumberOfAtomsInTheUniverse */
    countUniqueValuesAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Number of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Number of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    countNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Percentage of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Percentage of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
    percentageNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Minimum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    minAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Maximum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    maxAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Average amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    avgAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Sum of amounts contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
    sumAverageEstimatedNumberOfAtomsInTheUniverse?: boolean | number
    /** Number of unique values for comments */
    countUniqueValuesComments?: boolean | number
    /** Number of empty values for comments */
    countEmptyComments?: boolean | number
    /** Number of non-empty values for comments */
    countNotEmptyComments?: boolean | number
    /** Percentage of empty values for comments */
    percentageEmptyComments?: boolean | number
    /** Percentage of non-empty values for comments */
    percentageNotEmptyComments?: boolean | number
    /** Number of unique values for shortNotes */
    countUniqueValuesShortNotes?: boolean | number
    /** Number of empty values for shortNotes */
    countEmptyShortNotes?: boolean | number
    /** Number of non-empty values for shortNotes */
    countNotEmptyShortNotes?: boolean | number
    /** Percentage of empty values for shortNotes */
    percentageEmptyShortNotes?: boolean | number
    /** Percentage of non-empty values for shortNotes */
    percentageNotEmptyShortNotes?: boolean | number
    edges?: SurveyResultEdgeGenqlSelection
    pageInfo?: PageInfoGenqlSelection
    groupByDimensionValues?: boolean | number
    __typename?: boolean | number
    __scalar?: boolean | number
}

export interface SurveyResultRelationInput {
/** Connect to a surveyResult record */
connect?: (SurveyResultConnectInput | null),
/** Disconnect from a surveyResult record */
disconnect?: (Scalars['Boolean'] | null)}

export interface SurveyResultConnectInput {
/** Find a surveyResult record based on its unique fields: id */
where?: (SurveyResultWhereUniqueInput | null)}

export interface SurveyResultWhereUniqueInput {
/** Connect by Id */
id?: (Scalars['ID'] | null)}

export interface SurveyResultCreateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Name */
name?: (Scalars['String'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Deletion date */
deletedAt?: (Scalars['DateTime'] | null),
/** The creator of the record */
createdBy?: (ActorCreateInput | null),
/** Position */
position?: (Scalars['Position'] | null),
/** Search vector */
searchVector?: (Scalars['TSVector'] | null),score?: (Scalars['Float'] | null),percentageOfCompletion?: (Scalars['Float'] | null),participants?: (Scalars['Int'] | null),averageEstimatedNumberOfAtomsInTheUniverse?: (Scalars['BigInt'] | null),comments?: (Scalars['String'] | null),shortNotes?: (Scalars['String'] | null),helpedById?: (Scalars['ID'] | null),helpedBy?: (PetRelationInput | null)}

export interface SurveyResultUpdateInput {
/** Id */
id?: (Scalars['ID'] | null),
/** Name */
name?: (Scalars['String'] | null),
/** Creation date */
createdAt?: (Scalars['DateTime'] | null),
/** Last time the record was changed */
updatedAt?: (Scalars['DateTime'] | null),
/** Deletion date */
deletedAt?: (Scalars['DateTime'] | null),
/** The creator of the record */
createdBy?: (ActorUpdateInput | null),
/** Position */
position?: (Scalars['Position'] | null),
/** Search vector */
searchVector?: (Scalars['TSVector'] | null),score?: (Scalars['Float'] | null),percentageOfCompletion?: (Scalars['Float'] | null),participants?: (Scalars['Int'] | null),averageEstimatedNumberOfAtomsInTheUniverse?: (Scalars['BigInt'] | null),comments?: (Scalars['String'] | null),shortNotes?: (Scalars['String'] | null),helpedById?: (Scalars['ID'] | null),helpedBy?: (PetRelationInput | null)}

export interface SurveyResultFilterInput {
/** Id */
id?: (UUIDFilter | null),
/** Name */
name?: (StringFilter | null),
/** Creation date */
createdAt?: (DateFilter | null),
/** Last time the record was changed */
updatedAt?: (DateFilter | null),
/** Deletion date */
deletedAt?: (DateFilter | null),
/** The creator of the record */
createdBy?: (ActorFilterInput | null),
/** Position */
position?: (FloatFilter | null),
/** Search vector */
searchVector?: (TSVectorFilter | null),score?: (FloatFilter | null),percentageOfCompletion?: (FloatFilter | null),participants?: (IntFilter | null),averageEstimatedNumberOfAtomsInTheUniverse?: (BigIntFilter | null),comments?: (StringFilter | null),shortNotes?: (StringFilter | null),helpedById?: (UUIDFilter | null),and?: ((SurveyResultFilterInput | null)[] | null),or?: ((SurveyResultFilterInput | null)[] | null),not?: (SurveyResultFilterInput | null)}

export interface BigIntFilter {eq?: (Scalars['BigInt'] | null),gt?: (Scalars['BigInt'] | null),gte?: (Scalars['BigInt'] | null),in?: (Scalars['BigInt'][] | null),lt?: (Scalars['BigInt'] | null),lte?: (Scalars['BigInt'] | null),neq?: (Scalars['BigInt'] | null),is?: (FilterIs | null)}

export interface SurveyResultOrderByInput {
/** Id */
id?: (OrderByDirection | null),
/** Name */
name?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDirection | null),
/** Last time the record was changed */
updatedAt?: (OrderByDirection | null),
/** Deletion date */
deletedAt?: (OrderByDirection | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Position */
position?: (OrderByDirection | null),
/** Search vector */
searchVector?: (OrderByDirection | null),score?: (OrderByDirection | null),percentageOfCompletion?: (OrderByDirection | null),participants?: (OrderByDirection | null),averageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),comments?: (OrderByDirection | null),shortNotes?: (OrderByDirection | null),helpedById?: (OrderByDirection | null)}

export interface SurveyResultOrderByWithGroupByInput {
/** Order by aggregate values */
aggregate?: (SurveyResultOrderByWithGroupByAggregateInput | null),
/** Id */
id?: (OrderByDirection | null),
/** Name */
name?: (OrderByDirection | null),
/** Creation date */
createdAt?: (OrderByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (OrderByDateGranularityInput | null),
/** Deletion date */
deletedAt?: (OrderByDateGranularityInput | null),
/** The creator of the record */
createdBy?: (ActorOrderByInput | null),
/** Position */
position?: (OrderByDirection | null),
/** Search vector */
searchVector?: (OrderByDirection | null),score?: (OrderByDirection | null),percentageOfCompletion?: (OrderByDirection | null),participants?: (OrderByDirection | null),averageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),comments?: (OrderByDirection | null),shortNotes?: (OrderByDirection | null),helpedById?: (OrderByDirection | null)}


/** Aggregate-based ordering */
export interface SurveyResultOrderByWithGroupByAggregateInput {
/** Total number of records in the connection */
totalCount?: (OrderByDirection | null),
/** Number of unique values for id */
countUniqueValuesId?: (OrderByDirection | null),
/** Number of empty values for id */
countEmptyId?: (OrderByDirection | null),
/** Number of non-empty values for id */
countNotEmptyId?: (OrderByDirection | null),
/** Percentage of empty values for id */
percentageEmptyId?: (OrderByDirection | null),
/** Percentage of non-empty values for id */
percentageNotEmptyId?: (OrderByDirection | null),
/** Number of unique values for name */
countUniqueValuesName?: (OrderByDirection | null),
/** Number of empty values for name */
countEmptyName?: (OrderByDirection | null),
/** Number of non-empty values for name */
countNotEmptyName?: (OrderByDirection | null),
/** Percentage of empty values for name */
percentageEmptyName?: (OrderByDirection | null),
/** Percentage of non-empty values for name */
percentageNotEmptyName?: (OrderByDirection | null),
/** Number of unique values for createdAt */
countUniqueValuesCreatedAt?: (OrderByDirection | null),
/** Number of empty values for createdAt */
countEmptyCreatedAt?: (OrderByDirection | null),
/** Number of non-empty values for createdAt */
countNotEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of empty values for createdAt */
percentageEmptyCreatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for createdAt */
percentageNotEmptyCreatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field createdAt */
minCreatedAt?: (OrderByDirection | null),
/** Latest date contained in the field createdAt */
maxCreatedAt?: (OrderByDirection | null),
/** Number of unique values for updatedAt */
countUniqueValuesUpdatedAt?: (OrderByDirection | null),
/** Number of empty values for updatedAt */
countEmptyUpdatedAt?: (OrderByDirection | null),
/** Number of non-empty values for updatedAt */
countNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of empty values for updatedAt */
percentageEmptyUpdatedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for updatedAt */
percentageNotEmptyUpdatedAt?: (OrderByDirection | null),
/** Earliest date contained in the field updatedAt */
minUpdatedAt?: (OrderByDirection | null),
/** Latest date contained in the field updatedAt */
maxUpdatedAt?: (OrderByDirection | null),
/** Number of unique values for deletedAt */
countUniqueValuesDeletedAt?: (OrderByDirection | null),
/** Number of empty values for deletedAt */
countEmptyDeletedAt?: (OrderByDirection | null),
/** Number of non-empty values for deletedAt */
countNotEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of empty values for deletedAt */
percentageEmptyDeletedAt?: (OrderByDirection | null),
/** Percentage of non-empty values for deletedAt */
percentageNotEmptyDeletedAt?: (OrderByDirection | null),
/** Earliest date contained in the field deletedAt */
minDeletedAt?: (OrderByDirection | null),
/** Latest date contained in the field deletedAt */
maxDeletedAt?: (OrderByDirection | null),
/** Number of unique values for createdBy */
countUniqueValuesCreatedBy?: (OrderByDirection | null),
/** Number of empty values for createdBy */
countEmptyCreatedBy?: (OrderByDirection | null),
/** Number of non-empty values for createdBy */
countNotEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of empty values for createdBy */
percentageEmptyCreatedBy?: (OrderByDirection | null),
/** Percentage of non-empty values for createdBy */
percentageNotEmptyCreatedBy?: (OrderByDirection | null),
/** Number of unique values for position */
countUniqueValuesPosition?: (OrderByDirection | null),
/** Number of empty values for position */
countEmptyPosition?: (OrderByDirection | null),
/** Number of non-empty values for position */
countNotEmptyPosition?: (OrderByDirection | null),
/** Percentage of empty values for position */
percentageEmptyPosition?: (OrderByDirection | null),
/** Percentage of non-empty values for position */
percentageNotEmptyPosition?: (OrderByDirection | null),
/** Number of unique values for searchVector */
countUniqueValuesSearchVector?: (OrderByDirection | null),
/** Number of empty values for searchVector */
countEmptySearchVector?: (OrderByDirection | null),
/** Number of non-empty values for searchVector */
countNotEmptySearchVector?: (OrderByDirection | null),
/** Percentage of empty values for searchVector */
percentageEmptySearchVector?: (OrderByDirection | null),
/** Percentage of non-empty values for searchVector */
percentageNotEmptySearchVector?: (OrderByDirection | null),
/** Number of unique values for score */
countUniqueValuesScore?: (OrderByDirection | null),
/** Number of empty values for score */
countEmptyScore?: (OrderByDirection | null),
/** Number of non-empty values for score */
countNotEmptyScore?: (OrderByDirection | null),
/** Percentage of empty values for score */
percentageEmptyScore?: (OrderByDirection | null),
/** Percentage of non-empty values for score */
percentageNotEmptyScore?: (OrderByDirection | null),
/** Minimum amount contained in the field score */
minScore?: (OrderByDirection | null),
/** Maximum amount contained in the field score */
maxScore?: (OrderByDirection | null),
/** Average amount contained in the field score */
avgScore?: (OrderByDirection | null),
/** Sum of amounts contained in the field score */
sumScore?: (OrderByDirection | null),
/** Number of unique values for percentageOfCompletion */
countUniqueValuesPercentageOfCompletion?: (OrderByDirection | null),
/** Number of empty values for percentageOfCompletion */
countEmptyPercentageOfCompletion?: (OrderByDirection | null),
/** Number of non-empty values for percentageOfCompletion */
countNotEmptyPercentageOfCompletion?: (OrderByDirection | null),
/** Percentage of empty values for percentageOfCompletion */
percentageEmptyPercentageOfCompletion?: (OrderByDirection | null),
/** Percentage of non-empty values for percentageOfCompletion */
percentageNotEmptyPercentageOfCompletion?: (OrderByDirection | null),
/** Minimum amount contained in the field percentageOfCompletion */
minPercentageOfCompletion?: (OrderByDirection | null),
/** Maximum amount contained in the field percentageOfCompletion */
maxPercentageOfCompletion?: (OrderByDirection | null),
/** Average amount contained in the field percentageOfCompletion */
avgPercentageOfCompletion?: (OrderByDirection | null),
/** Sum of amounts contained in the field percentageOfCompletion */
sumPercentageOfCompletion?: (OrderByDirection | null),
/** Number of unique values for participants */
countUniqueValuesParticipants?: (OrderByDirection | null),
/** Number of empty values for participants */
countEmptyParticipants?: (OrderByDirection | null),
/** Number of non-empty values for participants */
countNotEmptyParticipants?: (OrderByDirection | null),
/** Percentage of empty values for participants */
percentageEmptyParticipants?: (OrderByDirection | null),
/** Percentage of non-empty values for participants */
percentageNotEmptyParticipants?: (OrderByDirection | null),
/** Minimum amount contained in the field participants */
minParticipants?: (OrderByDirection | null),
/** Maximum amount contained in the field participants */
maxParticipants?: (OrderByDirection | null),
/** Average amount contained in the field participants */
avgParticipants?: (OrderByDirection | null),
/** Sum of amounts contained in the field participants */
sumParticipants?: (OrderByDirection | null),
/** Number of unique values for averageEstimatedNumberOfAtomsInTheUniverse */
countUniqueValuesAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Number of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
countEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Number of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
countNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Percentage of empty values for averageEstimatedNumberOfAtomsInTheUniverse */
percentageEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Percentage of non-empty values for averageEstimatedNumberOfAtomsInTheUniverse */
percentageNotEmptyAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Minimum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
minAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Maximum amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
maxAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Average amount contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
avgAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Sum of amounts contained in the field averageEstimatedNumberOfAtomsInTheUniverse */
sumAverageEstimatedNumberOfAtomsInTheUniverse?: (OrderByDirection | null),
/** Number of unique values for comments */
countUniqueValuesComments?: (OrderByDirection | null),
/** Number of empty values for comments */
countEmptyComments?: (OrderByDirection | null),
/** Number of non-empty values for comments */
countNotEmptyComments?: (OrderByDirection | null),
/** Percentage of empty values for comments */
percentageEmptyComments?: (OrderByDirection | null),
/** Percentage of non-empty values for comments */
percentageNotEmptyComments?: (OrderByDirection | null),
/** Number of unique values for shortNotes */
countUniqueValuesShortNotes?: (OrderByDirection | null),
/** Number of empty values for shortNotes */
countEmptyShortNotes?: (OrderByDirection | null),
/** Number of non-empty values for shortNotes */
countNotEmptyShortNotes?: (OrderByDirection | null),
/** Percentage of empty values for shortNotes */
percentageEmptyShortNotes?: (OrderByDirection | null),
/** Percentage of non-empty values for shortNotes */
percentageNotEmptyShortNotes?: (OrderByDirection | null),helpedById?: (OrderByDirection | null)}

export interface SurveyResultGroupByInput {
/** Id */
id?: (Scalars['Boolean'] | null),
/** Name */
name?: (Scalars['Boolean'] | null),
/** Creation date */
createdAt?: (GroupByDateGranularityInput | null),
/** Last time the record was changed */
updatedAt?: (GroupByDateGranularityInput | null),
/** Deletion date */
deletedAt?: (GroupByDateGranularityInput | null),
/** The creator of the record */
createdBy?: (ActorGroupByInput | null),
/** Position */
position?: (Scalars['Boolean'] | null),
/** Search vector */
searchVector?: (Scalars['Boolean'] | null),score?: (Scalars['Boolean'] | null),percentageOfCompletion?: (Scalars['Boolean'] | null),participants?: (Scalars['Boolean'] | null),averageEstimatedNumberOfAtomsInTheUniverse?: (Scalars['Boolean'] | null),comments?: (Scalars['Boolean'] | null),shortNotes?: (Scalars['Boolean'] | null),helpedById?: (Scalars['Boolean'] | null)}


    const BillingProductDTO_possibleTypes: string[] = ['BillingLicensedProduct','BillingMeteredProduct']
    export const isBillingProductDTO = (obj?: { __typename?: any } | null): obj is BillingProductDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingProductDTO"')
      return BillingProductDTO_possibleTypes.includes(obj.__typename)
    }
    


    const ApiKey_possibleTypes: string[] = ['ApiKey']
    export const isApiKey = (obj?: { __typename?: any } | null): obj is ApiKey => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApiKey"')
      return ApiKey_possibleTypes.includes(obj.__typename)
    }
    


    const FeatureFlag_possibleTypes: string[] = ['FeatureFlag']
    export const isFeatureFlag = (obj?: { __typename?: any } | null): obj is FeatureFlag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFeatureFlag"')
      return FeatureFlag_possibleTypes.includes(obj.__typename)
    }
    


    const TwoFactorAuthenticationMethodDTO_possibleTypes: string[] = ['TwoFactorAuthenticationMethodDTO']
    export const isTwoFactorAuthenticationMethodDTO = (obj?: { __typename?: any } | null): obj is TwoFactorAuthenticationMethodDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTwoFactorAuthenticationMethodDTO"')
      return TwoFactorAuthenticationMethodDTO_possibleTypes.includes(obj.__typename)
    }
    


    const ObjectPermission_possibleTypes: string[] = ['ObjectPermission']
    export const isObjectPermission = (obj?: { __typename?: any } | null): obj is ObjectPermission => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isObjectPermission"')
      return ObjectPermission_possibleTypes.includes(obj.__typename)
    }
    


    const UserWorkspace_possibleTypes: string[] = ['UserWorkspace']
    export const isUserWorkspace = (obj?: { __typename?: any } | null): obj is UserWorkspace => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserWorkspace"')
      return UserWorkspace_possibleTypes.includes(obj.__typename)
    }
    


    const Webhook_possibleTypes: string[] = ['Webhook']
    export const isWebhook = (obj?: { __typename?: any } | null): obj is Webhook => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWebhook"')
      return Webhook_possibleTypes.includes(obj.__typename)
    }
    


    const Agent_possibleTypes: string[] = ['Agent']
    export const isAgent = (obj?: { __typename?: any } | null): obj is Agent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgent"')
      return Agent_possibleTypes.includes(obj.__typename)
    }
    


    const FullName_possibleTypes: string[] = ['FullName']
    export const isFullName = (obj?: { __typename?: any } | null): obj is FullName => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFullName"')
      return FullName_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceMember_possibleTypes: string[] = ['WorkspaceMember']
    export const isWorkspaceMember = (obj?: { __typename?: any } | null): obj is WorkspaceMember => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceMember"')
      return WorkspaceMember_possibleTypes.includes(obj.__typename)
    }
    


    const FieldPermission_possibleTypes: string[] = ['FieldPermission']
    export const isFieldPermission = (obj?: { __typename?: any } | null): obj is FieldPermission => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFieldPermission"')
      return FieldPermission_possibleTypes.includes(obj.__typename)
    }
    


    const PermissionFlag_possibleTypes: string[] = ['PermissionFlag']
    export const isPermissionFlag = (obj?: { __typename?: any } | null): obj is PermissionFlag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPermissionFlag"')
      return PermissionFlag_possibleTypes.includes(obj.__typename)
    }
    


    const ApiKeyForRole_possibleTypes: string[] = ['ApiKeyForRole']
    export const isApiKeyForRole = (obj?: { __typename?: any } | null): obj is ApiKeyForRole => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApiKeyForRole"')
      return ApiKeyForRole_possibleTypes.includes(obj.__typename)
    }
    


    const Role_possibleTypes: string[] = ['Role']
    export const isRole = (obj?: { __typename?: any } | null): obj is Role => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRole"')
      return Role_possibleTypes.includes(obj.__typename)
    }
    


    const CoreViewField_possibleTypes: string[] = ['CoreViewField']
    export const isCoreViewField = (obj?: { __typename?: any } | null): obj is CoreViewField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCoreViewField"')
      return CoreViewField_possibleTypes.includes(obj.__typename)
    }
    


    const CoreViewFilterGroup_possibleTypes: string[] = ['CoreViewFilterGroup']
    export const isCoreViewFilterGroup = (obj?: { __typename?: any } | null): obj is CoreViewFilterGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCoreViewFilterGroup"')
      return CoreViewFilterGroup_possibleTypes.includes(obj.__typename)
    }
    


    const CoreViewFilter_possibleTypes: string[] = ['CoreViewFilter']
    export const isCoreViewFilter = (obj?: { __typename?: any } | null): obj is CoreViewFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCoreViewFilter"')
      return CoreViewFilter_possibleTypes.includes(obj.__typename)
    }
    


    const CoreViewGroup_possibleTypes: string[] = ['CoreViewGroup']
    export const isCoreViewGroup = (obj?: { __typename?: any } | null): obj is CoreViewGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCoreViewGroup"')
      return CoreViewGroup_possibleTypes.includes(obj.__typename)
    }
    


    const CoreViewSort_possibleTypes: string[] = ['CoreViewSort']
    export const isCoreViewSort = (obj?: { __typename?: any } | null): obj is CoreViewSort => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCoreViewSort"')
      return CoreViewSort_possibleTypes.includes(obj.__typename)
    }
    


    const CoreView_possibleTypes: string[] = ['CoreView']
    export const isCoreView = (obj?: { __typename?: any } | null): obj is CoreView => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCoreView"')
      return CoreView_possibleTypes.includes(obj.__typename)
    }
    


    const Workspace_possibleTypes: string[] = ['Workspace']
    export const isWorkspace = (obj?: { __typename?: any } | null): obj is Workspace => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspace"')
      return Workspace_possibleTypes.includes(obj.__typename)
    }
    


    const AppToken_possibleTypes: string[] = ['AppToken']
    export const isAppToken = (obj?: { __typename?: any } | null): obj is AppToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppToken"')
      return AppToken_possibleTypes.includes(obj.__typename)
    }
    


    const User_possibleTypes: string[] = ['User']
    export const isUser = (obj?: { __typename?: any } | null): obj is User => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUser"')
      return User_possibleTypes.includes(obj.__typename)
    }
    


    const GridPosition_possibleTypes: string[] = ['GridPosition']
    export const isGridPosition = (obj?: { __typename?: any } | null): obj is GridPosition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGridPosition"')
      return GridPosition_possibleTypes.includes(obj.__typename)
    }
    


    const PageLayoutWidget_possibleTypes: string[] = ['PageLayoutWidget']
    export const isPageLayoutWidget = (obj?: { __typename?: any } | null): obj is PageLayoutWidget => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPageLayoutWidget"')
      return PageLayoutWidget_possibleTypes.includes(obj.__typename)
    }
    


    const WidgetConfiguration_possibleTypes: string[] = ['BarChartConfiguration','LineChartConfiguration','PieChartConfiguration','NumberChartConfiguration','GaugeChartConfiguration','IframeConfiguration']
    export const isWidgetConfiguration = (obj?: { __typename?: any } | null): obj is WidgetConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWidgetConfiguration"')
      return WidgetConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const BarChartConfiguration_possibleTypes: string[] = ['BarChartConfiguration']
    export const isBarChartConfiguration = (obj?: { __typename?: any } | null): obj is BarChartConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBarChartConfiguration"')
      return BarChartConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const LineChartConfiguration_possibleTypes: string[] = ['LineChartConfiguration']
    export const isLineChartConfiguration = (obj?: { __typename?: any } | null): obj is LineChartConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLineChartConfiguration"')
      return LineChartConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const PieChartConfiguration_possibleTypes: string[] = ['PieChartConfiguration']
    export const isPieChartConfiguration = (obj?: { __typename?: any } | null): obj is PieChartConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPieChartConfiguration"')
      return PieChartConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const NumberChartConfiguration_possibleTypes: string[] = ['NumberChartConfiguration']
    export const isNumberChartConfiguration = (obj?: { __typename?: any } | null): obj is NumberChartConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNumberChartConfiguration"')
      return NumberChartConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const GaugeChartConfiguration_possibleTypes: string[] = ['GaugeChartConfiguration']
    export const isGaugeChartConfiguration = (obj?: { __typename?: any } | null): obj is GaugeChartConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGaugeChartConfiguration"')
      return GaugeChartConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const IframeConfiguration_possibleTypes: string[] = ['IframeConfiguration']
    export const isIframeConfiguration = (obj?: { __typename?: any } | null): obj is IframeConfiguration => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIframeConfiguration"')
      return IframeConfiguration_possibleTypes.includes(obj.__typename)
    }
    


    const PageLayoutTab_possibleTypes: string[] = ['PageLayoutTab']
    export const isPageLayoutTab = (obj?: { __typename?: any } | null): obj is PageLayoutTab => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPageLayoutTab"')
      return PageLayoutTab_possibleTypes.includes(obj.__typename)
    }
    


    const PageLayout_possibleTypes: string[] = ['PageLayout']
    export const isPageLayout = (obj?: { __typename?: any } | null): obj is PageLayout => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPageLayout"')
      return PageLayout_possibleTypes.includes(obj.__typename)
    }
    


    const StandardOverrides_possibleTypes: string[] = ['StandardOverrides']
    export const isStandardOverrides = (obj?: { __typename?: any } | null): obj is StandardOverrides => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isStandardOverrides"')
      return StandardOverrides_possibleTypes.includes(obj.__typename)
    }
    


    const ObjectStandardOverrides_possibleTypes: string[] = ['ObjectStandardOverrides']
    export const isObjectStandardOverrides = (obj?: { __typename?: any } | null): obj is ObjectStandardOverrides => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isObjectStandardOverrides"')
      return ObjectStandardOverrides_possibleTypes.includes(obj.__typename)
    }
    


    const Object_possibleTypes: string[] = ['Object']
    export const isObject = (obj?: { __typename?: any } | null): obj is Object => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isObject"')
      return Object_possibleTypes.includes(obj.__typename)
    }
    


    const Field_possibleTypes: string[] = ['Field']
    export const isField = (obj?: { __typename?: any } | null): obj is Field => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isField"')
      return Field_possibleTypes.includes(obj.__typename)
    }
    


    const IndexField_possibleTypes: string[] = ['IndexField']
    export const isIndexField = (obj?: { __typename?: any } | null): obj is IndexField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndexField"')
      return IndexField_possibleTypes.includes(obj.__typename)
    }
    


    const Index_possibleTypes: string[] = ['Index']
    export const isIndex = (obj?: { __typename?: any } | null): obj is Index => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndex"')
      return Index_possibleTypes.includes(obj.__typename)
    }
    


    const IndexEdge_possibleTypes: string[] = ['IndexEdge']
    export const isIndexEdge = (obj?: { __typename?: any } | null): obj is IndexEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndexEdge"')
      return IndexEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PageInfo_possibleTypes: string[] = ['PageInfo']
    export const isPageInfo = (obj?: { __typename?: any } | null): obj is PageInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPageInfo"')
      return PageInfo_possibleTypes.includes(obj.__typename)
    }
    


    const IndexConnection_possibleTypes: string[] = ['IndexConnection']
    export const isIndexConnection = (obj?: { __typename?: any } | null): obj is IndexConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndexConnection"')
      return IndexConnection_possibleTypes.includes(obj.__typename)
    }
    


    const IndexFieldEdge_possibleTypes: string[] = ['IndexFieldEdge']
    export const isIndexFieldEdge = (obj?: { __typename?: any } | null): obj is IndexFieldEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndexFieldEdge"')
      return IndexFieldEdge_possibleTypes.includes(obj.__typename)
    }
    


    const IndexIndexFieldMetadatasConnection_possibleTypes: string[] = ['IndexIndexFieldMetadatasConnection']
    export const isIndexIndexFieldMetadatasConnection = (obj?: { __typename?: any } | null): obj is IndexIndexFieldMetadatasConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndexIndexFieldMetadatasConnection"')
      return IndexIndexFieldMetadatasConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ObjectEdge_possibleTypes: string[] = ['ObjectEdge']
    export const isObjectEdge = (obj?: { __typename?: any } | null): obj is ObjectEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isObjectEdge"')
      return ObjectEdge_possibleTypes.includes(obj.__typename)
    }
    


    const IndexObjectMetadataConnection_possibleTypes: string[] = ['IndexObjectMetadataConnection']
    export const isIndexObjectMetadataConnection = (obj?: { __typename?: any } | null): obj is IndexObjectMetadataConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isIndexObjectMetadataConnection"')
      return IndexObjectMetadataConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ObjectConnection_possibleTypes: string[] = ['ObjectConnection']
    export const isObjectConnection = (obj?: { __typename?: any } | null): obj is ObjectConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isObjectConnection"')
      return ObjectConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ObjectIndexMetadatasConnection_possibleTypes: string[] = ['ObjectIndexMetadatasConnection']
    export const isObjectIndexMetadatasConnection = (obj?: { __typename?: any } | null): obj is ObjectIndexMetadatasConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isObjectIndexMetadatasConnection"')
      return ObjectIndexMetadatasConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FieldEdge_possibleTypes: string[] = ['FieldEdge']
    export const isFieldEdge = (obj?: { __typename?: any } | null): obj is FieldEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFieldEdge"')
      return FieldEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ObjectFieldsConnection_possibleTypes: string[] = ['ObjectFieldsConnection']
    export const isObjectFieldsConnection = (obj?: { __typename?: any } | null): obj is ObjectFieldsConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isObjectFieldsConnection"')
      return ObjectFieldsConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Analytics_possibleTypes: string[] = ['Analytics']
    export const isAnalytics = (obj?: { __typename?: any } | null): obj is Analytics => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAnalytics"')
      return Analytics_possibleTypes.includes(obj.__typename)
    }
    


    const BillingProductMetadata_possibleTypes: string[] = ['BillingProductMetadata']
    export const isBillingProductMetadata = (obj?: { __typename?: any } | null): obj is BillingProductMetadata => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingProductMetadata"')
      return BillingProductMetadata_possibleTypes.includes(obj.__typename)
    }
    


    const BillingPriceLicensedDTO_possibleTypes: string[] = ['BillingPriceLicensedDTO']
    export const isBillingPriceLicensedDTO = (obj?: { __typename?: any } | null): obj is BillingPriceLicensedDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingPriceLicensedDTO"')
      return BillingPriceLicensedDTO_possibleTypes.includes(obj.__typename)
    }
    


    const BillingPriceTierDTO_possibleTypes: string[] = ['BillingPriceTierDTO']
    export const isBillingPriceTierDTO = (obj?: { __typename?: any } | null): obj is BillingPriceTierDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingPriceTierDTO"')
      return BillingPriceTierDTO_possibleTypes.includes(obj.__typename)
    }
    


    const BillingPriceMeteredDTO_possibleTypes: string[] = ['BillingPriceMeteredDTO']
    export const isBillingPriceMeteredDTO = (obj?: { __typename?: any } | null): obj is BillingPriceMeteredDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingPriceMeteredDTO"')
      return BillingPriceMeteredDTO_possibleTypes.includes(obj.__typename)
    }
    


    const BillingProduct_possibleTypes: string[] = ['BillingProduct']
    export const isBillingProduct = (obj?: { __typename?: any } | null): obj is BillingProduct => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingProduct"')
      return BillingProduct_possibleTypes.includes(obj.__typename)
    }
    


    const BillingLicensedProduct_possibleTypes: string[] = ['BillingLicensedProduct']
    export const isBillingLicensedProduct = (obj?: { __typename?: any } | null): obj is BillingLicensedProduct => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingLicensedProduct"')
      return BillingLicensedProduct_possibleTypes.includes(obj.__typename)
    }
    


    const BillingMeteredProduct_possibleTypes: string[] = ['BillingMeteredProduct']
    export const isBillingMeteredProduct = (obj?: { __typename?: any } | null): obj is BillingMeteredProduct => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingMeteredProduct"')
      return BillingMeteredProduct_possibleTypes.includes(obj.__typename)
    }
    


    const BillingSubscriptionItemDTO_possibleTypes: string[] = ['BillingSubscriptionItemDTO']
    export const isBillingSubscriptionItemDTO = (obj?: { __typename?: any } | null): obj is BillingSubscriptionItemDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingSubscriptionItemDTO"')
      return BillingSubscriptionItemDTO_possibleTypes.includes(obj.__typename)
    }
    


    const BillingSubscriptionSchedulePhaseItem_possibleTypes: string[] = ['BillingSubscriptionSchedulePhaseItem']
    export const isBillingSubscriptionSchedulePhaseItem = (obj?: { __typename?: any } | null): obj is BillingSubscriptionSchedulePhaseItem => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingSubscriptionSchedulePhaseItem"')
      return BillingSubscriptionSchedulePhaseItem_possibleTypes.includes(obj.__typename)
    }
    


    const BillingSubscriptionSchedulePhase_possibleTypes: string[] = ['BillingSubscriptionSchedulePhase']
    export const isBillingSubscriptionSchedulePhase = (obj?: { __typename?: any } | null): obj is BillingSubscriptionSchedulePhase => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingSubscriptionSchedulePhase"')
      return BillingSubscriptionSchedulePhase_possibleTypes.includes(obj.__typename)
    }
    


    const BillingSubscription_possibleTypes: string[] = ['BillingSubscription']
    export const isBillingSubscription = (obj?: { __typename?: any } | null): obj is BillingSubscription => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingSubscription"')
      return BillingSubscription_possibleTypes.includes(obj.__typename)
    }
    


    const ResendEmailVerificationTokenOutput_possibleTypes: string[] = ['ResendEmailVerificationTokenOutput']
    export const isResendEmailVerificationTokenOutput = (obj?: { __typename?: any } | null): obj is ResendEmailVerificationTokenOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isResendEmailVerificationTokenOutput"')
      return ResendEmailVerificationTokenOutput_possibleTypes.includes(obj.__typename)
    }
    


    const ApprovedAccessDomain_possibleTypes: string[] = ['ApprovedAccessDomain']
    export const isApprovedAccessDomain = (obj?: { __typename?: any } | null): obj is ApprovedAccessDomain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApprovedAccessDomain"')
      return ApprovedAccessDomain_possibleTypes.includes(obj.__typename)
    }
    


    const File_possibleTypes: string[] = ['File']
    export const isFile = (obj?: { __typename?: any } | null): obj is File => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFile"')
      return File_possibleTypes.includes(obj.__typename)
    }
    


    const SignedFileDTO_possibleTypes: string[] = ['SignedFileDTO']
    export const isSignedFileDTO = (obj?: { __typename?: any } | null): obj is SignedFileDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSignedFileDTO"')
      return SignedFileDTO_possibleTypes.includes(obj.__typename)
    }
    


    const ServerlessFunctionLayer_possibleTypes: string[] = ['ServerlessFunctionLayer']
    export const isServerlessFunctionLayer = (obj?: { __typename?: any } | null): obj is ServerlessFunctionLayer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isServerlessFunctionLayer"')
      return ServerlessFunctionLayer_possibleTypes.includes(obj.__typename)
    }
    


    const ServerlessFunctionExecutionResult_possibleTypes: string[] = ['ServerlessFunctionExecutionResult']
    export const isServerlessFunctionExecutionResult = (obj?: { __typename?: any } | null): obj is ServerlessFunctionExecutionResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isServerlessFunctionExecutionResult"')
      return ServerlessFunctionExecutionResult_possibleTypes.includes(obj.__typename)
    }
    


    const CronTrigger_possibleTypes: string[] = ['CronTrigger']
    export const isCronTrigger = (obj?: { __typename?: any } | null): obj is CronTrigger => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCronTrigger"')
      return CronTrigger_possibleTypes.includes(obj.__typename)
    }
    


    const DatabaseEventTrigger_possibleTypes: string[] = ['DatabaseEventTrigger']
    export const isDatabaseEventTrigger = (obj?: { __typename?: any } | null): obj is DatabaseEventTrigger => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDatabaseEventTrigger"')
      return DatabaseEventTrigger_possibleTypes.includes(obj.__typename)
    }
    


    const RouteTrigger_possibleTypes: string[] = ['RouteTrigger']
    export const isRouteTrigger = (obj?: { __typename?: any } | null): obj is RouteTrigger => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRouteTrigger"')
      return RouteTrigger_possibleTypes.includes(obj.__typename)
    }
    


    const ServerlessFunction_possibleTypes: string[] = ['ServerlessFunction']
    export const isServerlessFunction = (obj?: { __typename?: any } | null): obj is ServerlessFunction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isServerlessFunction"')
      return ServerlessFunction_possibleTypes.includes(obj.__typename)
    }
    


    const BillingEndTrialPeriodOutput_possibleTypes: string[] = ['BillingEndTrialPeriodOutput']
    export const isBillingEndTrialPeriodOutput = (obj?: { __typename?: any } | null): obj is BillingEndTrialPeriodOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingEndTrialPeriodOutput"')
      return BillingEndTrialPeriodOutput_possibleTypes.includes(obj.__typename)
    }
    


    const BillingMeteredProductUsageOutput_possibleTypes: string[] = ['BillingMeteredProductUsageOutput']
    export const isBillingMeteredProductUsageOutput = (obj?: { __typename?: any } | null): obj is BillingMeteredProductUsageOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingMeteredProductUsageOutput"')
      return BillingMeteredProductUsageOutput_possibleTypes.includes(obj.__typename)
    }
    


    const BillingPlanOutput_possibleTypes: string[] = ['BillingPlanOutput']
    export const isBillingPlanOutput = (obj?: { __typename?: any } | null): obj is BillingPlanOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingPlanOutput"')
      return BillingPlanOutput_possibleTypes.includes(obj.__typename)
    }
    


    const BillingSessionOutput_possibleTypes: string[] = ['BillingSessionOutput']
    export const isBillingSessionOutput = (obj?: { __typename?: any } | null): obj is BillingSessionOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingSessionOutput"')
      return BillingSessionOutput_possibleTypes.includes(obj.__typename)
    }
    


    const BillingUpdateOutput_possibleTypes: string[] = ['BillingUpdateOutput']
    export const isBillingUpdateOutput = (obj?: { __typename?: any } | null): obj is BillingUpdateOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingUpdateOutput"')
      return BillingUpdateOutput_possibleTypes.includes(obj.__typename)
    }
    


    const OnboardingStepSuccess_possibleTypes: string[] = ['OnboardingStepSuccess']
    export const isOnboardingStepSuccess = (obj?: { __typename?: any } | null): obj is OnboardingStepSuccess => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnboardingStepSuccess"')
      return OnboardingStepSuccess_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceInvitation_possibleTypes: string[] = ['WorkspaceInvitation']
    export const isWorkspaceInvitation = (obj?: { __typename?: any } | null): obj is WorkspaceInvitation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceInvitation"')
      return WorkspaceInvitation_possibleTypes.includes(obj.__typename)
    }
    


    const SendInvitationsOutput_possibleTypes: string[] = ['SendInvitationsOutput']
    export const isSendInvitationsOutput = (obj?: { __typename?: any } | null): obj is SendInvitationsOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSendInvitationsOutput"')
      return SendInvitationsOutput_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceUrls_possibleTypes: string[] = ['WorkspaceUrls']
    export const isWorkspaceUrls = (obj?: { __typename?: any } | null): obj is WorkspaceUrls => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceUrls"')
      return WorkspaceUrls_possibleTypes.includes(obj.__typename)
    }
    


    const SSOConnection_possibleTypes: string[] = ['SSOConnection']
    export const isSSOConnection = (obj?: { __typename?: any } | null): obj is SSOConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSSOConnection"')
      return SSOConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AvailableWorkspace_possibleTypes: string[] = ['AvailableWorkspace']
    export const isAvailableWorkspace = (obj?: { __typename?: any } | null): obj is AvailableWorkspace => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAvailableWorkspace"')
      return AvailableWorkspace_possibleTypes.includes(obj.__typename)
    }
    


    const AvailableWorkspaces_possibleTypes: string[] = ['AvailableWorkspaces']
    export const isAvailableWorkspaces = (obj?: { __typename?: any } | null): obj is AvailableWorkspaces => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAvailableWorkspaces"')
      return AvailableWorkspaces_possibleTypes.includes(obj.__typename)
    }
    


    const DeletedWorkspaceMember_possibleTypes: string[] = ['DeletedWorkspaceMember']
    export const isDeletedWorkspaceMember = (obj?: { __typename?: any } | null): obj is DeletedWorkspaceMember => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeletedWorkspaceMember"')
      return DeletedWorkspaceMember_possibleTypes.includes(obj.__typename)
    }
    


    const DomainRecord_possibleTypes: string[] = ['DomainRecord']
    export const isDomainRecord = (obj?: { __typename?: any } | null): obj is DomainRecord => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDomainRecord"')
      return DomainRecord_possibleTypes.includes(obj.__typename)
    }
    


    const DomainValidRecords_possibleTypes: string[] = ['DomainValidRecords']
    export const isDomainValidRecords = (obj?: { __typename?: any } | null): obj is DomainValidRecords => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDomainValidRecords"')
      return DomainValidRecords_possibleTypes.includes(obj.__typename)
    }
    


    const FeatureFlagDTO_possibleTypes: string[] = ['FeatureFlagDTO']
    export const isFeatureFlagDTO = (obj?: { __typename?: any } | null): obj is FeatureFlagDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFeatureFlagDTO"')
      return FeatureFlagDTO_possibleTypes.includes(obj.__typename)
    }
    


    const SSOIdentityProvider_possibleTypes: string[] = ['SSOIdentityProvider']
    export const isSSOIdentityProvider = (obj?: { __typename?: any } | null): obj is SSOIdentityProvider => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSSOIdentityProvider"')
      return SSOIdentityProvider_possibleTypes.includes(obj.__typename)
    }
    


    const AuthProviders_possibleTypes: string[] = ['AuthProviders']
    export const isAuthProviders = (obj?: { __typename?: any } | null): obj is AuthProviders => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthProviders"')
      return AuthProviders_possibleTypes.includes(obj.__typename)
    }
    


    const PublicWorkspaceDataOutput_possibleTypes: string[] = ['PublicWorkspaceDataOutput']
    export const isPublicWorkspaceDataOutput = (obj?: { __typename?: any } | null): obj is PublicWorkspaceDataOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicWorkspaceDataOutput"')
      return PublicWorkspaceDataOutput_possibleTypes.includes(obj.__typename)
    }
    


    const AgentChatMessagePart_possibleTypes: string[] = ['AgentChatMessagePart']
    export const isAgentChatMessagePart = (obj?: { __typename?: any } | null): obj is AgentChatMessagePart => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgentChatMessagePart"')
      return AgentChatMessagePart_possibleTypes.includes(obj.__typename)
    }
    


    const AgentChatMessage_possibleTypes: string[] = ['AgentChatMessage']
    export const isAgentChatMessage = (obj?: { __typename?: any } | null): obj is AgentChatMessage => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgentChatMessage"')
      return AgentChatMessage_possibleTypes.includes(obj.__typename)
    }
    


    const AgentChatThread_possibleTypes: string[] = ['AgentChatThread']
    export const isAgentChatThread = (obj?: { __typename?: any } | null): obj is AgentChatThread => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgentChatThread"')
      return AgentChatThread_possibleTypes.includes(obj.__typename)
    }
    


    const AgentHandoffDTO_possibleTypes: string[] = ['AgentHandoffDTO']
    export const isAgentHandoffDTO = (obj?: { __typename?: any } | null): obj is AgentHandoffDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAgentHandoffDTO"')
      return AgentHandoffDTO_possibleTypes.includes(obj.__typename)
    }
    


    const Relation_possibleTypes: string[] = ['Relation']
    export const isRelation = (obj?: { __typename?: any } | null): obj is Relation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRelation"')
      return Relation_possibleTypes.includes(obj.__typename)
    }
    


    const FieldConnection_possibleTypes: string[] = ['FieldConnection']
    export const isFieldConnection = (obj?: { __typename?: any } | null): obj is FieldConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFieldConnection"')
      return FieldConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceEdge_possibleTypes: string[] = ['WorkspaceEdge']
    export const isWorkspaceEdge = (obj?: { __typename?: any } | null): obj is WorkspaceEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceEdge"')
      return WorkspaceEdge_possibleTypes.includes(obj.__typename)
    }
    


    const UserEdge_possibleTypes: string[] = ['UserEdge']
    export const isUserEdge = (obj?: { __typename?: any } | null): obj is UserEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserEdge"')
      return UserEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DeleteSsoOutput_possibleTypes: string[] = ['DeleteSsoOutput']
    export const isDeleteSsoOutput = (obj?: { __typename?: any } | null): obj is DeleteSsoOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteSsoOutput"')
      return DeleteSsoOutput_possibleTypes.includes(obj.__typename)
    }
    


    const EditSsoOutput_possibleTypes: string[] = ['EditSsoOutput']
    export const isEditSsoOutput = (obj?: { __typename?: any } | null): obj is EditSsoOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEditSsoOutput"')
      return EditSsoOutput_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceNameAndId_possibleTypes: string[] = ['WorkspaceNameAndId']
    export const isWorkspaceNameAndId = (obj?: { __typename?: any } | null): obj is WorkspaceNameAndId => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceNameAndId"')
      return WorkspaceNameAndId_possibleTypes.includes(obj.__typename)
    }
    


    const FindAvailableSSOIDPOutput_possibleTypes: string[] = ['FindAvailableSSOIDPOutput']
    export const isFindAvailableSSOIDPOutput = (obj?: { __typename?: any } | null): obj is FindAvailableSSOIDPOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFindAvailableSSOIDPOutput"')
      return FindAvailableSSOIDPOutput_possibleTypes.includes(obj.__typename)
    }
    


    const SetupSsoOutput_possibleTypes: string[] = ['SetupSsoOutput']
    export const isSetupSsoOutput = (obj?: { __typename?: any } | null): obj is SetupSsoOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSetupSsoOutput"')
      return SetupSsoOutput_possibleTypes.includes(obj.__typename)
    }
    


    const DeleteTwoFactorAuthenticationMethodOutput_possibleTypes: string[] = ['DeleteTwoFactorAuthenticationMethodOutput']
    export const isDeleteTwoFactorAuthenticationMethodOutput = (obj?: { __typename?: any } | null): obj is DeleteTwoFactorAuthenticationMethodOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDeleteTwoFactorAuthenticationMethodOutput"')
      return DeleteTwoFactorAuthenticationMethodOutput_possibleTypes.includes(obj.__typename)
    }
    


    const InitiateTwoFactorAuthenticationProvisioningOutput_possibleTypes: string[] = ['InitiateTwoFactorAuthenticationProvisioningOutput']
    export const isInitiateTwoFactorAuthenticationProvisioningOutput = (obj?: { __typename?: any } | null): obj is InitiateTwoFactorAuthenticationProvisioningOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInitiateTwoFactorAuthenticationProvisioningOutput"')
      return InitiateTwoFactorAuthenticationProvisioningOutput_possibleTypes.includes(obj.__typename)
    }
    


    const VerifyTwoFactorAuthenticationMethodOutput_possibleTypes: string[] = ['VerifyTwoFactorAuthenticationMethodOutput']
    export const isVerifyTwoFactorAuthenticationMethodOutput = (obj?: { __typename?: any } | null): obj is VerifyTwoFactorAuthenticationMethodOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerifyTwoFactorAuthenticationMethodOutput"')
      return VerifyTwoFactorAuthenticationMethodOutput_possibleTypes.includes(obj.__typename)
    }
    


    const AuthorizeApp_possibleTypes: string[] = ['AuthorizeApp']
    export const isAuthorizeApp = (obj?: { __typename?: any } | null): obj is AuthorizeApp => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthorizeApp"')
      return AuthorizeApp_possibleTypes.includes(obj.__typename)
    }
    


    const EmailPasswordResetLink_possibleTypes: string[] = ['EmailPasswordResetLink']
    export const isEmailPasswordResetLink = (obj?: { __typename?: any } | null): obj is EmailPasswordResetLink => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEmailPasswordResetLink"')
      return EmailPasswordResetLink_possibleTypes.includes(obj.__typename)
    }
    


    const InvalidatePassword_possibleTypes: string[] = ['InvalidatePassword']
    export const isInvalidatePassword = (obj?: { __typename?: any } | null): obj is InvalidatePassword => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isInvalidatePassword"')
      return InvalidatePassword_possibleTypes.includes(obj.__typename)
    }
    


    const AuthToken_possibleTypes: string[] = ['AuthToken']
    export const isAuthToken = (obj?: { __typename?: any } | null): obj is AuthToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthToken"')
      return AuthToken_possibleTypes.includes(obj.__typename)
    }
    


    const ApiKeyToken_possibleTypes: string[] = ['ApiKeyToken']
    export const isApiKeyToken = (obj?: { __typename?: any } | null): obj is ApiKeyToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApiKeyToken"')
      return ApiKeyToken_possibleTypes.includes(obj.__typename)
    }
    


    const AuthTokenPair_possibleTypes: string[] = ['AuthTokenPair']
    export const isAuthTokenPair = (obj?: { __typename?: any } | null): obj is AuthTokenPair => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthTokenPair"')
      return AuthTokenPair_possibleTypes.includes(obj.__typename)
    }
    


    const AuthTokens_possibleTypes: string[] = ['AuthTokens']
    export const isAuthTokens = (obj?: { __typename?: any } | null): obj is AuthTokens => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAuthTokens"')
      return AuthTokens_possibleTypes.includes(obj.__typename)
    }
    


    const TransientToken_possibleTypes: string[] = ['TransientToken']
    export const isTransientToken = (obj?: { __typename?: any } | null): obj is TransientToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTransientToken"')
      return TransientToken_possibleTypes.includes(obj.__typename)
    }
    


    const ValidatePasswordResetToken_possibleTypes: string[] = ['ValidatePasswordResetToken']
    export const isValidatePasswordResetToken = (obj?: { __typename?: any } | null): obj is ValidatePasswordResetToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isValidatePasswordResetToken"')
      return ValidatePasswordResetToken_possibleTypes.includes(obj.__typename)
    }
    


    const AvailableWorkspacesAndAccessTokensOutput_possibleTypes: string[] = ['AvailableWorkspacesAndAccessTokensOutput']
    export const isAvailableWorkspacesAndAccessTokensOutput = (obj?: { __typename?: any } | null): obj is AvailableWorkspacesAndAccessTokensOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAvailableWorkspacesAndAccessTokensOutput"')
      return AvailableWorkspacesAndAccessTokensOutput_possibleTypes.includes(obj.__typename)
    }
    


    const GetAuthorizationUrlForSSOOutput_possibleTypes: string[] = ['GetAuthorizationUrlForSSOOutput']
    export const isGetAuthorizationUrlForSSOOutput = (obj?: { __typename?: any } | null): obj is GetAuthorizationUrlForSSOOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGetAuthorizationUrlForSSOOutput"')
      return GetAuthorizationUrlForSSOOutput_possibleTypes.includes(obj.__typename)
    }
    


    const GetLoginTokenFromEmailVerificationTokenOutput_possibleTypes: string[] = ['GetLoginTokenFromEmailVerificationTokenOutput']
    export const isGetLoginTokenFromEmailVerificationTokenOutput = (obj?: { __typename?: any } | null): obj is GetLoginTokenFromEmailVerificationTokenOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isGetLoginTokenFromEmailVerificationTokenOutput"')
      return GetLoginTokenFromEmailVerificationTokenOutput_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceUrlsAndId_possibleTypes: string[] = ['WorkspaceUrlsAndId']
    export const isWorkspaceUrlsAndId = (obj?: { __typename?: any } | null): obj is WorkspaceUrlsAndId => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceUrlsAndId"')
      return WorkspaceUrlsAndId_possibleTypes.includes(obj.__typename)
    }
    


    const SignUpOutput_possibleTypes: string[] = ['SignUpOutput']
    export const isSignUpOutput = (obj?: { __typename?: any } | null): obj is SignUpOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSignUpOutput"')
      return SignUpOutput_possibleTypes.includes(obj.__typename)
    }
    


    const LoginToken_possibleTypes: string[] = ['LoginToken']
    export const isLoginToken = (obj?: { __typename?: any } | null): obj is LoginToken => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLoginToken"')
      return LoginToken_possibleTypes.includes(obj.__typename)
    }
    


    const CheckUserExistOutput_possibleTypes: string[] = ['CheckUserExistOutput']
    export const isCheckUserExistOutput = (obj?: { __typename?: any } | null): obj is CheckUserExistOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCheckUserExistOutput"')
      return CheckUserExistOutput_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceInviteHashValid_possibleTypes: string[] = ['WorkspaceInviteHashValid']
    export const isWorkspaceInviteHashValid = (obj?: { __typename?: any } | null): obj is WorkspaceInviteHashValid => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceInviteHashValid"')
      return WorkspaceInviteHashValid_possibleTypes.includes(obj.__typename)
    }
    


    const OnDbEventDTO_possibleTypes: string[] = ['OnDbEventDTO']
    export const isOnDbEventDTO = (obj?: { __typename?: any } | null): obj is OnDbEventDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOnDbEventDTO"')
      return OnDbEventDTO_possibleTypes.includes(obj.__typename)
    }
    


    const UserMappingOptionsUser_possibleTypes: string[] = ['UserMappingOptionsUser']
    export const isUserMappingOptionsUser = (obj?: { __typename?: any } | null): obj is UserMappingOptionsUser => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserMappingOptionsUser"')
      return UserMappingOptionsUser_possibleTypes.includes(obj.__typename)
    }
    


    const RemoteServer_possibleTypes: string[] = ['RemoteServer']
    export const isRemoteServer = (obj?: { __typename?: any } | null): obj is RemoteServer => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRemoteServer"')
      return RemoteServer_possibleTypes.includes(obj.__typename)
    }
    


    const RemoteTable_possibleTypes: string[] = ['RemoteTable']
    export const isRemoteTable = (obj?: { __typename?: any } | null): obj is RemoteTable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRemoteTable"')
      return RemoteTable_possibleTypes.includes(obj.__typename)
    }
    


    const ConfigVariable_possibleTypes: string[] = ['ConfigVariable']
    export const isConfigVariable = (obj?: { __typename?: any } | null): obj is ConfigVariable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfigVariable"')
      return ConfigVariable_possibleTypes.includes(obj.__typename)
    }
    


    const ConfigVariablesGroupData_possibleTypes: string[] = ['ConfigVariablesGroupData']
    export const isConfigVariablesGroupData = (obj?: { __typename?: any } | null): obj is ConfigVariablesGroupData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfigVariablesGroupData"')
      return ConfigVariablesGroupData_possibleTypes.includes(obj.__typename)
    }
    


    const ConfigVariablesOutput_possibleTypes: string[] = ['ConfigVariablesOutput']
    export const isConfigVariablesOutput = (obj?: { __typename?: any } | null): obj is ConfigVariablesOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConfigVariablesOutput"')
      return ConfigVariablesOutput_possibleTypes.includes(obj.__typename)
    }
    


    const SystemHealthService_possibleTypes: string[] = ['SystemHealthService']
    export const isSystemHealthService = (obj?: { __typename?: any } | null): obj is SystemHealthService => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemHealthService"')
      return SystemHealthService_possibleTypes.includes(obj.__typename)
    }
    


    const SystemHealth_possibleTypes: string[] = ['SystemHealth']
    export const isSystemHealth = (obj?: { __typename?: any } | null): obj is SystemHealth => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSystemHealth"')
      return SystemHealth_possibleTypes.includes(obj.__typename)
    }
    


    const UserInfo_possibleTypes: string[] = ['UserInfo']
    export const isUserInfo = (obj?: { __typename?: any } | null): obj is UserInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserInfo"')
      return UserInfo_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceInfo_possibleTypes: string[] = ['WorkspaceInfo']
    export const isWorkspaceInfo = (obj?: { __typename?: any } | null): obj is WorkspaceInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceInfo"')
      return WorkspaceInfo_possibleTypes.includes(obj.__typename)
    }
    


    const UserLookup_possibleTypes: string[] = ['UserLookup']
    export const isUserLookup = (obj?: { __typename?: any } | null): obj is UserLookup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isUserLookup"')
      return UserLookup_possibleTypes.includes(obj.__typename)
    }
    


    const VersionInfo_possibleTypes: string[] = ['VersionInfo']
    export const isVersionInfo = (obj?: { __typename?: any } | null): obj is VersionInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVersionInfo"')
      return VersionInfo_possibleTypes.includes(obj.__typename)
    }
    


    const AdminPanelWorkerQueueHealth_possibleTypes: string[] = ['AdminPanelWorkerQueueHealth']
    export const isAdminPanelWorkerQueueHealth = (obj?: { __typename?: any } | null): obj is AdminPanelWorkerQueueHealth => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAdminPanelWorkerQueueHealth"')
      return AdminPanelWorkerQueueHealth_possibleTypes.includes(obj.__typename)
    }
    


    const AdminPanelHealthServiceData_possibleTypes: string[] = ['AdminPanelHealthServiceData']
    export const isAdminPanelHealthServiceData = (obj?: { __typename?: any } | null): obj is AdminPanelHealthServiceData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAdminPanelHealthServiceData"')
      return AdminPanelHealthServiceData_possibleTypes.includes(obj.__typename)
    }
    


    const QueueMetricsDataPoint_possibleTypes: string[] = ['QueueMetricsDataPoint']
    export const isQueueMetricsDataPoint = (obj?: { __typename?: any } | null): obj is QueueMetricsDataPoint => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQueueMetricsDataPoint"')
      return QueueMetricsDataPoint_possibleTypes.includes(obj.__typename)
    }
    


    const QueueMetricsSeries_possibleTypes: string[] = ['QueueMetricsSeries']
    export const isQueueMetricsSeries = (obj?: { __typename?: any } | null): obj is QueueMetricsSeries => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQueueMetricsSeries"')
      return QueueMetricsSeries_possibleTypes.includes(obj.__typename)
    }
    


    const WorkerQueueMetrics_possibleTypes: string[] = ['WorkerQueueMetrics']
    export const isWorkerQueueMetrics = (obj?: { __typename?: any } | null): obj is WorkerQueueMetrics => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkerQueueMetrics"')
      return WorkerQueueMetrics_possibleTypes.includes(obj.__typename)
    }
    


    const QueueMetricsData_possibleTypes: string[] = ['QueueMetricsData']
    export const isQueueMetricsData = (obj?: { __typename?: any } | null): obj is QueueMetricsData => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQueueMetricsData"')
      return QueueMetricsData_possibleTypes.includes(obj.__typename)
    }
    


    const ImpersonateOutput_possibleTypes: string[] = ['ImpersonateOutput']
    export const isImpersonateOutput = (obj?: { __typename?: any } | null): obj is ImpersonateOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImpersonateOutput"')
      return ImpersonateOutput_possibleTypes.includes(obj.__typename)
    }
    


    const AppTokenEdge_possibleTypes: string[] = ['AppTokenEdge']
    export const isAppTokenEdge = (obj?: { __typename?: any } | null): obj is AppTokenEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAppTokenEdge"')
      return AppTokenEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ApplicationVariable_possibleTypes: string[] = ['ApplicationVariable']
    export const isApplicationVariable = (obj?: { __typename?: any } | null): obj is ApplicationVariable => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApplicationVariable"')
      return ApplicationVariable_possibleTypes.includes(obj.__typename)
    }
    


    const Application_possibleTypes: string[] = ['Application']
    export const isApplication = (obj?: { __typename?: any } | null): obj is Application => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApplication"')
      return Application_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineCalendarEventParticipant_possibleTypes: string[] = ['TimelineCalendarEventParticipant']
    export const isTimelineCalendarEventParticipant = (obj?: { __typename?: any } | null): obj is TimelineCalendarEventParticipant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineCalendarEventParticipant"')
      return TimelineCalendarEventParticipant_possibleTypes.includes(obj.__typename)
    }
    


    const LinkMetadata_possibleTypes: string[] = ['LinkMetadata']
    export const isLinkMetadata = (obj?: { __typename?: any } | null): obj is LinkMetadata => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinkMetadata"')
      return LinkMetadata_possibleTypes.includes(obj.__typename)
    }
    


    const LinksMetadata_possibleTypes: string[] = ['LinksMetadata']
    export const isLinksMetadata = (obj?: { __typename?: any } | null): obj is LinksMetadata => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinksMetadata"')
      return LinksMetadata_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineCalendarEvent_possibleTypes: string[] = ['TimelineCalendarEvent']
    export const isTimelineCalendarEvent = (obj?: { __typename?: any } | null): obj is TimelineCalendarEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineCalendarEvent"')
      return TimelineCalendarEvent_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineCalendarEventsWithTotal_possibleTypes: string[] = ['TimelineCalendarEventsWithTotal']
    export const isTimelineCalendarEventsWithTotal = (obj?: { __typename?: any } | null): obj is TimelineCalendarEventsWithTotal => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineCalendarEventsWithTotal"')
      return TimelineCalendarEventsWithTotal_possibleTypes.includes(obj.__typename)
    }
    


    const PublicDomain_possibleTypes: string[] = ['PublicDomain']
    export const isPublicDomain = (obj?: { __typename?: any } | null): obj is PublicDomain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicDomain"')
      return PublicDomain_possibleTypes.includes(obj.__typename)
    }
    


    const VerificationRecord_possibleTypes: string[] = ['VerificationRecord']
    export const isVerificationRecord = (obj?: { __typename?: any } | null): obj is VerificationRecord => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isVerificationRecord"')
      return VerificationRecord_possibleTypes.includes(obj.__typename)
    }
    


    const EmailingDomain_possibleTypes: string[] = ['EmailingDomain']
    export const isEmailingDomain = (obj?: { __typename?: any } | null): obj is EmailingDomain => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEmailingDomain"')
      return EmailingDomain_possibleTypes.includes(obj.__typename)
    }
    


    const AutocompleteResultDto_possibleTypes: string[] = ['AutocompleteResultDto']
    export const isAutocompleteResultDto = (obj?: { __typename?: any } | null): obj is AutocompleteResultDto => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAutocompleteResultDto"')
      return AutocompleteResultDto_possibleTypes.includes(obj.__typename)
    }
    


    const LocationDto_possibleTypes: string[] = ['LocationDto']
    export const isLocationDto = (obj?: { __typename?: any } | null): obj is LocationDto => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLocationDto"')
      return LocationDto_possibleTypes.includes(obj.__typename)
    }
    


    const PlaceDetailsResultDto_possibleTypes: string[] = ['PlaceDetailsResultDto']
    export const isPlaceDetailsResultDto = (obj?: { __typename?: any } | null): obj is PlaceDetailsResultDto => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPlaceDetailsResultDto"')
      return PlaceDetailsResultDto_possibleTypes.includes(obj.__typename)
    }
    


    const ConnectionParametersOutput_possibleTypes: string[] = ['ConnectionParametersOutput']
    export const isConnectionParametersOutput = (obj?: { __typename?: any } | null): obj is ConnectionParametersOutput => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConnectionParametersOutput"')
      return ConnectionParametersOutput_possibleTypes.includes(obj.__typename)
    }
    


    const ImapSmtpCaldavConnectionParameters_possibleTypes: string[] = ['ImapSmtpCaldavConnectionParameters']
    export const isImapSmtpCaldavConnectionParameters = (obj?: { __typename?: any } | null): obj is ImapSmtpCaldavConnectionParameters => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImapSmtpCaldavConnectionParameters"')
      return ImapSmtpCaldavConnectionParameters_possibleTypes.includes(obj.__typename)
    }
    


    const ConnectedImapSmtpCaldavAccount_possibleTypes: string[] = ['ConnectedImapSmtpCaldavAccount']
    export const isConnectedImapSmtpCaldavAccount = (obj?: { __typename?: any } | null): obj is ConnectedImapSmtpCaldavAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConnectedImapSmtpCaldavAccount"')
      return ConnectedImapSmtpCaldavAccount_possibleTypes.includes(obj.__typename)
    }
    


    const ImapSmtpCaldavConnectionSuccess_possibleTypes: string[] = ['ImapSmtpCaldavConnectionSuccess']
    export const isImapSmtpCaldavConnectionSuccess = (obj?: { __typename?: any } | null): obj is ImapSmtpCaldavConnectionSuccess => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isImapSmtpCaldavConnectionSuccess"')
      return ImapSmtpCaldavConnectionSuccess_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineThreadParticipant_possibleTypes: string[] = ['TimelineThreadParticipant']
    export const isTimelineThreadParticipant = (obj?: { __typename?: any } | null): obj is TimelineThreadParticipant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineThreadParticipant"')
      return TimelineThreadParticipant_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineThread_possibleTypes: string[] = ['TimelineThread']
    export const isTimelineThread = (obj?: { __typename?: any } | null): obj is TimelineThread => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineThread"')
      return TimelineThread_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineThreadsWithTotal_possibleTypes: string[] = ['TimelineThreadsWithTotal']
    export const isTimelineThreadsWithTotal = (obj?: { __typename?: any } | null): obj is TimelineThreadsWithTotal => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineThreadsWithTotal"')
      return TimelineThreadsWithTotal_possibleTypes.includes(obj.__typename)
    }
    


    const PostgresCredentials_possibleTypes: string[] = ['PostgresCredentials']
    export const isPostgresCredentials = (obj?: { __typename?: any } | null): obj is PostgresCredentials => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPostgresCredentials"')
      return PostgresCredentials_possibleTypes.includes(obj.__typename)
    }
    


    const SearchRecord_possibleTypes: string[] = ['SearchRecord']
    export const isSearchRecord = (obj?: { __typename?: any } | null): obj is SearchRecord => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchRecord"')
      return SearchRecord_possibleTypes.includes(obj.__typename)
    }
    


    const SearchResultEdge_possibleTypes: string[] = ['SearchResultEdge']
    export const isSearchResultEdge = (obj?: { __typename?: any } | null): obj is SearchResultEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultEdge"')
      return SearchResultEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SearchResultPageInfo_possibleTypes: string[] = ['SearchResultPageInfo']
    export const isSearchResultPageInfo = (obj?: { __typename?: any } | null): obj is SearchResultPageInfo => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultPageInfo"')
      return SearchResultPageInfo_possibleTypes.includes(obj.__typename)
    }
    


    const SearchResultConnection_possibleTypes: string[] = ['SearchResultConnection']
    export const isSearchResultConnection = (obj?: { __typename?: any } | null): obj is SearchResultConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSearchResultConnection"')
      return SearchResultConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowRun_possibleTypes: string[] = ['WorkflowRun']
    export const isWorkflowRun = (obj?: { __typename?: any } | null): obj is WorkflowRun => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowRun"')
      return WorkflowRun_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowVersionStepChanges_possibleTypes: string[] = ['WorkflowVersionStepChanges']
    export const isWorkflowVersionStepChanges = (obj?: { __typename?: any } | null): obj is WorkflowVersionStepChanges => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowVersionStepChanges"')
      return WorkflowVersionStepChanges_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowStepPosition_possibleTypes: string[] = ['WorkflowStepPosition']
    export const isWorkflowStepPosition = (obj?: { __typename?: any } | null): obj is WorkflowStepPosition => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowStepPosition"')
      return WorkflowStepPosition_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowAction_possibleTypes: string[] = ['WorkflowAction']
    export const isWorkflowAction = (obj?: { __typename?: any } | null): obj is WorkflowAction => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowAction"')
      return WorkflowAction_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowVersionDTO_possibleTypes: string[] = ['WorkflowVersionDTO']
    export const isWorkflowVersionDTO = (obj?: { __typename?: any } | null): obj is WorkflowVersionDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowVersionDTO"')
      return WorkflowVersionDTO_possibleTypes.includes(obj.__typename)
    }
    


    const ChannelSyncSuccess_possibleTypes: string[] = ['ChannelSyncSuccess']
    export const isChannelSyncSuccess = (obj?: { __typename?: any } | null): obj is ChannelSyncSuccess => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isChannelSyncSuccess"')
      return ChannelSyncSuccess_possibleTypes.includes(obj.__typename)
    }
    


    const BillingTrialPeriodDTO_possibleTypes: string[] = ['BillingTrialPeriodDTO']
    export const isBillingTrialPeriodDTO = (obj?: { __typename?: any } | null): obj is BillingTrialPeriodDTO => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBillingTrialPeriodDTO"')
      return BillingTrialPeriodDTO_possibleTypes.includes(obj.__typename)
    }
    


    const NativeModelCapabilities_possibleTypes: string[] = ['NativeModelCapabilities']
    export const isNativeModelCapabilities = (obj?: { __typename?: any } | null): obj is NativeModelCapabilities => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNativeModelCapabilities"')
      return NativeModelCapabilities_possibleTypes.includes(obj.__typename)
    }
    


    const ClientAIModelConfig_possibleTypes: string[] = ['ClientAIModelConfig']
    export const isClientAIModelConfig = (obj?: { __typename?: any } | null): obj is ClientAIModelConfig => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isClientAIModelConfig"')
      return ClientAIModelConfig_possibleTypes.includes(obj.__typename)
    }
    


    const Billing_possibleTypes: string[] = ['Billing']
    export const isBilling = (obj?: { __typename?: any } | null): obj is Billing => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBilling"')
      return Billing_possibleTypes.includes(obj.__typename)
    }
    


    const Support_possibleTypes: string[] = ['Support']
    export const isSupport = (obj?: { __typename?: any } | null): obj is Support => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSupport"')
      return Support_possibleTypes.includes(obj.__typename)
    }
    


    const Sentry_possibleTypes: string[] = ['Sentry']
    export const isSentry = (obj?: { __typename?: any } | null): obj is Sentry => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSentry"')
      return Sentry_possibleTypes.includes(obj.__typename)
    }
    


    const Captcha_possibleTypes: string[] = ['Captcha']
    export const isCaptcha = (obj?: { __typename?: any } | null): obj is Captcha => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCaptcha"')
      return Captcha_possibleTypes.includes(obj.__typename)
    }
    


    const ApiConfig_possibleTypes: string[] = ['ApiConfig']
    export const isApiConfig = (obj?: { __typename?: any } | null): obj is ApiConfig => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isApiConfig"')
      return ApiConfig_possibleTypes.includes(obj.__typename)
    }
    


    const PublicFeatureFlagMetadata_possibleTypes: string[] = ['PublicFeatureFlagMetadata']
    export const isPublicFeatureFlagMetadata = (obj?: { __typename?: any } | null): obj is PublicFeatureFlagMetadata => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicFeatureFlagMetadata"')
      return PublicFeatureFlagMetadata_possibleTypes.includes(obj.__typename)
    }
    


    const PublicFeatureFlag_possibleTypes: string[] = ['PublicFeatureFlag']
    export const isPublicFeatureFlag = (obj?: { __typename?: any } | null): obj is PublicFeatureFlag => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPublicFeatureFlag"')
      return PublicFeatureFlag_possibleTypes.includes(obj.__typename)
    }
    


    const Query_possibleTypes: string[] = ['Query']
    export const isQuery = (obj?: { __typename?: any } | null): obj is Query => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isQuery"')
      return Query_possibleTypes.includes(obj.__typename)
    }
    


    const Mutation_possibleTypes: string[] = ['Mutation']
    export const isMutation = (obj?: { __typename?: any } | null): obj is Mutation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMutation"')
      return Mutation_possibleTypes.includes(obj.__typename)
    }
    


    const Subscription_possibleTypes: string[] = ['Subscription']
    export const isSubscription = (obj?: { __typename?: any } | null): obj is Subscription => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSubscription"')
      return Subscription_possibleTypes.includes(obj.__typename)
    }
    


    const Links_possibleTypes: string[] = ['Links']
    export const isLinks = (obj?: { __typename?: any } | null): obj is Links => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isLinks"')
      return Links_possibleTypes.includes(obj.__typename)
    }
    


    const Currency_possibleTypes: string[] = ['Currency']
    export const isCurrency = (obj?: { __typename?: any } | null): obj is Currency => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCurrency"')
      return Currency_possibleTypes.includes(obj.__typename)
    }
    


    const Address_possibleTypes: string[] = ['Address']
    export const isAddress = (obj?: { __typename?: any } | null): obj is Address => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAddress"')
      return Address_possibleTypes.includes(obj.__typename)
    }
    


    const Actor_possibleTypes: string[] = ['Actor']
    export const isActor = (obj?: { __typename?: any } | null): obj is Actor => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isActor"')
      return Actor_possibleTypes.includes(obj.__typename)
    }
    


    const Emails_possibleTypes: string[] = ['Emails']
    export const isEmails = (obj?: { __typename?: any } | null): obj is Emails => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isEmails"')
      return Emails_possibleTypes.includes(obj.__typename)
    }
    


    const Phones_possibleTypes: string[] = ['Phones']
    export const isPhones = (obj?: { __typename?: any } | null): obj is Phones => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPhones"')
      return Phones_possibleTypes.includes(obj.__typename)
    }
    


    const RichTextV2_possibleTypes: string[] = ['RichTextV2']
    export const isRichTextV2 = (obj?: { __typename?: any } | null): obj is RichTextV2 => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRichTextV2"')
      return RichTextV2_possibleTypes.includes(obj.__typename)
    }
    


    const Attachment_possibleTypes: string[] = ['Attachment']
    export const isAttachment = (obj?: { __typename?: any } | null): obj is Attachment => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAttachment"')
      return Attachment_possibleTypes.includes(obj.__typename)
    }
    


    const AttachmentEdge_possibleTypes: string[] = ['AttachmentEdge']
    export const isAttachmentEdge = (obj?: { __typename?: any } | null): obj is AttachmentEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAttachmentEdge"')
      return AttachmentEdge_possibleTypes.includes(obj.__typename)
    }
    


    const AttachmentConnection_possibleTypes: string[] = ['AttachmentConnection']
    export const isAttachmentConnection = (obj?: { __typename?: any } | null): obj is AttachmentConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAttachmentConnection"')
      return AttachmentConnection_possibleTypes.includes(obj.__typename)
    }
    


    const AttachmentGroupByConnection_possibleTypes: string[] = ['AttachmentGroupByConnection']
    export const isAttachmentGroupByConnection = (obj?: { __typename?: any } | null): obj is AttachmentGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isAttachmentGroupByConnection"')
      return AttachmentGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Blocklist_possibleTypes: string[] = ['Blocklist']
    export const isBlocklist = (obj?: { __typename?: any } | null): obj is Blocklist => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlocklist"')
      return Blocklist_possibleTypes.includes(obj.__typename)
    }
    


    const BlocklistEdge_possibleTypes: string[] = ['BlocklistEdge']
    export const isBlocklistEdge = (obj?: { __typename?: any } | null): obj is BlocklistEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlocklistEdge"')
      return BlocklistEdge_possibleTypes.includes(obj.__typename)
    }
    


    const BlocklistConnection_possibleTypes: string[] = ['BlocklistConnection']
    export const isBlocklistConnection = (obj?: { __typename?: any } | null): obj is BlocklistConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlocklistConnection"')
      return BlocklistConnection_possibleTypes.includes(obj.__typename)
    }
    


    const BlocklistGroupByConnection_possibleTypes: string[] = ['BlocklistGroupByConnection']
    export const isBlocklistGroupByConnection = (obj?: { __typename?: any } | null): obj is BlocklistGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isBlocklistGroupByConnection"')
      return BlocklistGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEvent_possibleTypes: string[] = ['CalendarEvent']
    export const isCalendarEvent = (obj?: { __typename?: any } | null): obj is CalendarEvent => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEvent"')
      return CalendarEvent_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEventEdge_possibleTypes: string[] = ['CalendarEventEdge']
    export const isCalendarEventEdge = (obj?: { __typename?: any } | null): obj is CalendarEventEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEventEdge"')
      return CalendarEventEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEventConnection_possibleTypes: string[] = ['CalendarEventConnection']
    export const isCalendarEventConnection = (obj?: { __typename?: any } | null): obj is CalendarEventConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEventConnection"')
      return CalendarEventConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEventGroupByConnection_possibleTypes: string[] = ['CalendarEventGroupByConnection']
    export const isCalendarEventGroupByConnection = (obj?: { __typename?: any } | null): obj is CalendarEventGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEventGroupByConnection"')
      return CalendarEventGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannel_possibleTypes: string[] = ['CalendarChannel']
    export const isCalendarChannel = (obj?: { __typename?: any } | null): obj is CalendarChannel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannel"')
      return CalendarChannel_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannelEdge_possibleTypes: string[] = ['CalendarChannelEdge']
    export const isCalendarChannelEdge = (obj?: { __typename?: any } | null): obj is CalendarChannelEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannelEdge"')
      return CalendarChannelEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannelConnection_possibleTypes: string[] = ['CalendarChannelConnection']
    export const isCalendarChannelConnection = (obj?: { __typename?: any } | null): obj is CalendarChannelConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannelConnection"')
      return CalendarChannelConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannelGroupByConnection_possibleTypes: string[] = ['CalendarChannelGroupByConnection']
    export const isCalendarChannelGroupByConnection = (obj?: { __typename?: any } | null): obj is CalendarChannelGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannelGroupByConnection"')
      return CalendarChannelGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannelEventAssociation_possibleTypes: string[] = ['CalendarChannelEventAssociation']
    export const isCalendarChannelEventAssociation = (obj?: { __typename?: any } | null): obj is CalendarChannelEventAssociation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannelEventAssociation"')
      return CalendarChannelEventAssociation_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannelEventAssociationEdge_possibleTypes: string[] = ['CalendarChannelEventAssociationEdge']
    export const isCalendarChannelEventAssociationEdge = (obj?: { __typename?: any } | null): obj is CalendarChannelEventAssociationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannelEventAssociationEdge"')
      return CalendarChannelEventAssociationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannelEventAssociationConnection_possibleTypes: string[] = ['CalendarChannelEventAssociationConnection']
    export const isCalendarChannelEventAssociationConnection = (obj?: { __typename?: any } | null): obj is CalendarChannelEventAssociationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannelEventAssociationConnection"')
      return CalendarChannelEventAssociationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarChannelEventAssociationGroupByConnection_possibleTypes: string[] = ['CalendarChannelEventAssociationGroupByConnection']
    export const isCalendarChannelEventAssociationGroupByConnection = (obj?: { __typename?: any } | null): obj is CalendarChannelEventAssociationGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarChannelEventAssociationGroupByConnection"')
      return CalendarChannelEventAssociationGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEventParticipant_possibleTypes: string[] = ['CalendarEventParticipant']
    export const isCalendarEventParticipant = (obj?: { __typename?: any } | null): obj is CalendarEventParticipant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEventParticipant"')
      return CalendarEventParticipant_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEventParticipantEdge_possibleTypes: string[] = ['CalendarEventParticipantEdge']
    export const isCalendarEventParticipantEdge = (obj?: { __typename?: any } | null): obj is CalendarEventParticipantEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEventParticipantEdge"')
      return CalendarEventParticipantEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEventParticipantConnection_possibleTypes: string[] = ['CalendarEventParticipantConnection']
    export const isCalendarEventParticipantConnection = (obj?: { __typename?: any } | null): obj is CalendarEventParticipantConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEventParticipantConnection"')
      return CalendarEventParticipantConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CalendarEventParticipantGroupByConnection_possibleTypes: string[] = ['CalendarEventParticipantGroupByConnection']
    export const isCalendarEventParticipantGroupByConnection = (obj?: { __typename?: any } | null): obj is CalendarEventParticipantGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCalendarEventParticipantGroupByConnection"')
      return CalendarEventParticipantGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Company_possibleTypes: string[] = ['Company']
    export const isCompany = (obj?: { __typename?: any } | null): obj is Company => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompany"')
      return Company_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyEdge_possibleTypes: string[] = ['CompanyEdge']
    export const isCompanyEdge = (obj?: { __typename?: any } | null): obj is CompanyEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyEdge"')
      return CompanyEdge_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyConnection_possibleTypes: string[] = ['CompanyConnection']
    export const isCompanyConnection = (obj?: { __typename?: any } | null): obj is CompanyConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyConnection"')
      return CompanyConnection_possibleTypes.includes(obj.__typename)
    }
    


    const CompanyGroupByConnection_possibleTypes: string[] = ['CompanyGroupByConnection']
    export const isCompanyGroupByConnection = (obj?: { __typename?: any } | null): obj is CompanyGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isCompanyGroupByConnection"')
      return CompanyGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ConnectedAccount_possibleTypes: string[] = ['ConnectedAccount']
    export const isConnectedAccount = (obj?: { __typename?: any } | null): obj is ConnectedAccount => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConnectedAccount"')
      return ConnectedAccount_possibleTypes.includes(obj.__typename)
    }
    


    const ConnectedAccountEdge_possibleTypes: string[] = ['ConnectedAccountEdge']
    export const isConnectedAccountEdge = (obj?: { __typename?: any } | null): obj is ConnectedAccountEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConnectedAccountEdge"')
      return ConnectedAccountEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ConnectedAccountConnection_possibleTypes: string[] = ['ConnectedAccountConnection']
    export const isConnectedAccountConnection = (obj?: { __typename?: any } | null): obj is ConnectedAccountConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConnectedAccountConnection"')
      return ConnectedAccountConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ConnectedAccountGroupByConnection_possibleTypes: string[] = ['ConnectedAccountGroupByConnection']
    export const isConnectedAccountGroupByConnection = (obj?: { __typename?: any } | null): obj is ConnectedAccountGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isConnectedAccountGroupByConnection"')
      return ConnectedAccountGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Dashboard_possibleTypes: string[] = ['Dashboard']
    export const isDashboard = (obj?: { __typename?: any } | null): obj is Dashboard => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDashboard"')
      return Dashboard_possibleTypes.includes(obj.__typename)
    }
    


    const DashboardEdge_possibleTypes: string[] = ['DashboardEdge']
    export const isDashboardEdge = (obj?: { __typename?: any } | null): obj is DashboardEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDashboardEdge"')
      return DashboardEdge_possibleTypes.includes(obj.__typename)
    }
    


    const DashboardConnection_possibleTypes: string[] = ['DashboardConnection']
    export const isDashboardConnection = (obj?: { __typename?: any } | null): obj is DashboardConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDashboardConnection"')
      return DashboardConnection_possibleTypes.includes(obj.__typename)
    }
    


    const DashboardGroupByConnection_possibleTypes: string[] = ['DashboardGroupByConnection']
    export const isDashboardGroupByConnection = (obj?: { __typename?: any } | null): obj is DashboardGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isDashboardGroupByConnection"')
      return DashboardGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Favorite_possibleTypes: string[] = ['Favorite']
    export const isFavorite = (obj?: { __typename?: any } | null): obj is Favorite => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavorite"')
      return Favorite_possibleTypes.includes(obj.__typename)
    }
    


    const FavoriteEdge_possibleTypes: string[] = ['FavoriteEdge']
    export const isFavoriteEdge = (obj?: { __typename?: any } | null): obj is FavoriteEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavoriteEdge"')
      return FavoriteEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FavoriteConnection_possibleTypes: string[] = ['FavoriteConnection']
    export const isFavoriteConnection = (obj?: { __typename?: any } | null): obj is FavoriteConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavoriteConnection"')
      return FavoriteConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FavoriteGroupByConnection_possibleTypes: string[] = ['FavoriteGroupByConnection']
    export const isFavoriteGroupByConnection = (obj?: { __typename?: any } | null): obj is FavoriteGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavoriteGroupByConnection"')
      return FavoriteGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FavoriteFolder_possibleTypes: string[] = ['FavoriteFolder']
    export const isFavoriteFolder = (obj?: { __typename?: any } | null): obj is FavoriteFolder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavoriteFolder"')
      return FavoriteFolder_possibleTypes.includes(obj.__typename)
    }
    


    const FavoriteFolderEdge_possibleTypes: string[] = ['FavoriteFolderEdge']
    export const isFavoriteFolderEdge = (obj?: { __typename?: any } | null): obj is FavoriteFolderEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavoriteFolderEdge"')
      return FavoriteFolderEdge_possibleTypes.includes(obj.__typename)
    }
    


    const FavoriteFolderConnection_possibleTypes: string[] = ['FavoriteFolderConnection']
    export const isFavoriteFolderConnection = (obj?: { __typename?: any } | null): obj is FavoriteFolderConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavoriteFolderConnection"')
      return FavoriteFolderConnection_possibleTypes.includes(obj.__typename)
    }
    


    const FavoriteFolderGroupByConnection_possibleTypes: string[] = ['FavoriteFolderGroupByConnection']
    export const isFavoriteFolderGroupByConnection = (obj?: { __typename?: any } | null): obj is FavoriteFolderGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isFavoriteFolderGroupByConnection"')
      return FavoriteFolderGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineActivity_possibleTypes: string[] = ['TimelineActivity']
    export const isTimelineActivity = (obj?: { __typename?: any } | null): obj is TimelineActivity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineActivity"')
      return TimelineActivity_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineActivityEdge_possibleTypes: string[] = ['TimelineActivityEdge']
    export const isTimelineActivityEdge = (obj?: { __typename?: any } | null): obj is TimelineActivityEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineActivityEdge"')
      return TimelineActivityEdge_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineActivityConnection_possibleTypes: string[] = ['TimelineActivityConnection']
    export const isTimelineActivityConnection = (obj?: { __typename?: any } | null): obj is TimelineActivityConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineActivityConnection"')
      return TimelineActivityConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TimelineActivityGroupByConnection_possibleTypes: string[] = ['TimelineActivityGroupByConnection']
    export const isTimelineActivityGroupByConnection = (obj?: { __typename?: any } | null): obj is TimelineActivityGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTimelineActivityGroupByConnection"')
      return TimelineActivityGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewField_possibleTypes: string[] = ['ViewField']
    export const isViewField = (obj?: { __typename?: any } | null): obj is ViewField => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewField"')
      return ViewField_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFieldEdge_possibleTypes: string[] = ['ViewFieldEdge']
    export const isViewFieldEdge = (obj?: { __typename?: any } | null): obj is ViewFieldEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFieldEdge"')
      return ViewFieldEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFieldConnection_possibleTypes: string[] = ['ViewFieldConnection']
    export const isViewFieldConnection = (obj?: { __typename?: any } | null): obj is ViewFieldConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFieldConnection"')
      return ViewFieldConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFieldGroupByConnection_possibleTypes: string[] = ['ViewFieldGroupByConnection']
    export const isViewFieldGroupByConnection = (obj?: { __typename?: any } | null): obj is ViewFieldGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFieldGroupByConnection"')
      return ViewFieldGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilterGroup_possibleTypes: string[] = ['ViewFilterGroup']
    export const isViewFilterGroup = (obj?: { __typename?: any } | null): obj is ViewFilterGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilterGroup"')
      return ViewFilterGroup_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilterGroupEdge_possibleTypes: string[] = ['ViewFilterGroupEdge']
    export const isViewFilterGroupEdge = (obj?: { __typename?: any } | null): obj is ViewFilterGroupEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilterGroupEdge"')
      return ViewFilterGroupEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilterGroupConnection_possibleTypes: string[] = ['ViewFilterGroupConnection']
    export const isViewFilterGroupConnection = (obj?: { __typename?: any } | null): obj is ViewFilterGroupConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilterGroupConnection"')
      return ViewFilterGroupConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilterGroupGroupByConnection_possibleTypes: string[] = ['ViewFilterGroupGroupByConnection']
    export const isViewFilterGroupGroupByConnection = (obj?: { __typename?: any } | null): obj is ViewFilterGroupGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilterGroupGroupByConnection"')
      return ViewFilterGroupGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewGroup_possibleTypes: string[] = ['ViewGroup']
    export const isViewGroup = (obj?: { __typename?: any } | null): obj is ViewGroup => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewGroup"')
      return ViewGroup_possibleTypes.includes(obj.__typename)
    }
    


    const ViewGroupEdge_possibleTypes: string[] = ['ViewGroupEdge']
    export const isViewGroupEdge = (obj?: { __typename?: any } | null): obj is ViewGroupEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewGroupEdge"')
      return ViewGroupEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ViewGroupConnection_possibleTypes: string[] = ['ViewGroupConnection']
    export const isViewGroupConnection = (obj?: { __typename?: any } | null): obj is ViewGroupConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewGroupConnection"')
      return ViewGroupConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewGroupGroupByConnection_possibleTypes: string[] = ['ViewGroupGroupByConnection']
    export const isViewGroupGroupByConnection = (obj?: { __typename?: any } | null): obj is ViewGroupGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewGroupGroupByConnection"')
      return ViewGroupGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilter_possibleTypes: string[] = ['ViewFilter']
    export const isViewFilter = (obj?: { __typename?: any } | null): obj is ViewFilter => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilter"')
      return ViewFilter_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilterEdge_possibleTypes: string[] = ['ViewFilterEdge']
    export const isViewFilterEdge = (obj?: { __typename?: any } | null): obj is ViewFilterEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilterEdge"')
      return ViewFilterEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilterConnection_possibleTypes: string[] = ['ViewFilterConnection']
    export const isViewFilterConnection = (obj?: { __typename?: any } | null): obj is ViewFilterConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilterConnection"')
      return ViewFilterConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewFilterGroupByConnection_possibleTypes: string[] = ['ViewFilterGroupByConnection']
    export const isViewFilterGroupByConnection = (obj?: { __typename?: any } | null): obj is ViewFilterGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewFilterGroupByConnection"')
      return ViewFilterGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewSort_possibleTypes: string[] = ['ViewSort']
    export const isViewSort = (obj?: { __typename?: any } | null): obj is ViewSort => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewSort"')
      return ViewSort_possibleTypes.includes(obj.__typename)
    }
    


    const ViewSortEdge_possibleTypes: string[] = ['ViewSortEdge']
    export const isViewSortEdge = (obj?: { __typename?: any } | null): obj is ViewSortEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewSortEdge"')
      return ViewSortEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ViewSortConnection_possibleTypes: string[] = ['ViewSortConnection']
    export const isViewSortConnection = (obj?: { __typename?: any } | null): obj is ViewSortConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewSortConnection"')
      return ViewSortConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewSortGroupByConnection_possibleTypes: string[] = ['ViewSortGroupByConnection']
    export const isViewSortGroupByConnection = (obj?: { __typename?: any } | null): obj is ViewSortGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewSortGroupByConnection"')
      return ViewSortGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const View_possibleTypes: string[] = ['View']
    export const isView = (obj?: { __typename?: any } | null): obj is View => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isView"')
      return View_possibleTypes.includes(obj.__typename)
    }
    


    const ViewEdge_possibleTypes: string[] = ['ViewEdge']
    export const isViewEdge = (obj?: { __typename?: any } | null): obj is ViewEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewEdge"')
      return ViewEdge_possibleTypes.includes(obj.__typename)
    }
    


    const ViewConnection_possibleTypes: string[] = ['ViewConnection']
    export const isViewConnection = (obj?: { __typename?: any } | null): obj is ViewConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewConnection"')
      return ViewConnection_possibleTypes.includes(obj.__typename)
    }
    


    const ViewGroupByConnection_possibleTypes: string[] = ['ViewGroupByConnection']
    export const isViewGroupByConnection = (obj?: { __typename?: any } | null): obj is ViewGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isViewGroupByConnection"')
      return ViewGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Workflow_possibleTypes: string[] = ['Workflow']
    export const isWorkflow = (obj?: { __typename?: any } | null): obj is Workflow => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflow"')
      return Workflow_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowEdge_possibleTypes: string[] = ['WorkflowEdge']
    export const isWorkflowEdge = (obj?: { __typename?: any } | null): obj is WorkflowEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowEdge"')
      return WorkflowEdge_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowConnection_possibleTypes: string[] = ['WorkflowConnection']
    export const isWorkflowConnection = (obj?: { __typename?: any } | null): obj is WorkflowConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowConnection"')
      return WorkflowConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowGroupByConnection_possibleTypes: string[] = ['WorkflowGroupByConnection']
    export const isWorkflowGroupByConnection = (obj?: { __typename?: any } | null): obj is WorkflowGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowGroupByConnection"')
      return WorkflowGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowVersion_possibleTypes: string[] = ['WorkflowVersion']
    export const isWorkflowVersion = (obj?: { __typename?: any } | null): obj is WorkflowVersion => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowVersion"')
      return WorkflowVersion_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowVersionEdge_possibleTypes: string[] = ['WorkflowVersionEdge']
    export const isWorkflowVersionEdge = (obj?: { __typename?: any } | null): obj is WorkflowVersionEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowVersionEdge"')
      return WorkflowVersionEdge_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowVersionConnection_possibleTypes: string[] = ['WorkflowVersionConnection']
    export const isWorkflowVersionConnection = (obj?: { __typename?: any } | null): obj is WorkflowVersionConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowVersionConnection"')
      return WorkflowVersionConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowVersionGroupByConnection_possibleTypes: string[] = ['WorkflowVersionGroupByConnection']
    export const isWorkflowVersionGroupByConnection = (obj?: { __typename?: any } | null): obj is WorkflowVersionGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowVersionGroupByConnection"')
      return WorkflowVersionGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowRunEdge_possibleTypes: string[] = ['WorkflowRunEdge']
    export const isWorkflowRunEdge = (obj?: { __typename?: any } | null): obj is WorkflowRunEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowRunEdge"')
      return WorkflowRunEdge_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowRunConnection_possibleTypes: string[] = ['WorkflowRunConnection']
    export const isWorkflowRunConnection = (obj?: { __typename?: any } | null): obj is WorkflowRunConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowRunConnection"')
      return WorkflowRunConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowRunGroupByConnection_possibleTypes: string[] = ['WorkflowRunGroupByConnection']
    export const isWorkflowRunGroupByConnection = (obj?: { __typename?: any } | null): obj is WorkflowRunGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowRunGroupByConnection"')
      return WorkflowRunGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowAutomatedTrigger_possibleTypes: string[] = ['WorkflowAutomatedTrigger']
    export const isWorkflowAutomatedTrigger = (obj?: { __typename?: any } | null): obj is WorkflowAutomatedTrigger => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowAutomatedTrigger"')
      return WorkflowAutomatedTrigger_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowAutomatedTriggerEdge_possibleTypes: string[] = ['WorkflowAutomatedTriggerEdge']
    export const isWorkflowAutomatedTriggerEdge = (obj?: { __typename?: any } | null): obj is WorkflowAutomatedTriggerEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowAutomatedTriggerEdge"')
      return WorkflowAutomatedTriggerEdge_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowAutomatedTriggerConnection_possibleTypes: string[] = ['WorkflowAutomatedTriggerConnection']
    export const isWorkflowAutomatedTriggerConnection = (obj?: { __typename?: any } | null): obj is WorkflowAutomatedTriggerConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowAutomatedTriggerConnection"')
      return WorkflowAutomatedTriggerConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkflowAutomatedTriggerGroupByConnection_possibleTypes: string[] = ['WorkflowAutomatedTriggerGroupByConnection']
    export const isWorkflowAutomatedTriggerGroupByConnection = (obj?: { __typename?: any } | null): obj is WorkflowAutomatedTriggerGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkflowAutomatedTriggerGroupByConnection"')
      return WorkflowAutomatedTriggerGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceMemberEdge_possibleTypes: string[] = ['WorkspaceMemberEdge']
    export const isWorkspaceMemberEdge = (obj?: { __typename?: any } | null): obj is WorkspaceMemberEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceMemberEdge"')
      return WorkspaceMemberEdge_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceMemberConnection_possibleTypes: string[] = ['WorkspaceMemberConnection']
    export const isWorkspaceMemberConnection = (obj?: { __typename?: any } | null): obj is WorkspaceMemberConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceMemberConnection"')
      return WorkspaceMemberConnection_possibleTypes.includes(obj.__typename)
    }
    


    const WorkspaceMemberGroupByConnection_possibleTypes: string[] = ['WorkspaceMemberGroupByConnection']
    export const isWorkspaceMemberGroupByConnection = (obj?: { __typename?: any } | null): obj is WorkspaceMemberGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isWorkspaceMemberGroupByConnection"')
      return WorkspaceMemberGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Message_possibleTypes: string[] = ['Message']
    export const isMessage = (obj?: { __typename?: any } | null): obj is Message => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessage"')
      return Message_possibleTypes.includes(obj.__typename)
    }
    


    const MessageEdge_possibleTypes: string[] = ['MessageEdge']
    export const isMessageEdge = (obj?: { __typename?: any } | null): obj is MessageEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageEdge"')
      return MessageEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MessageConnection_possibleTypes: string[] = ['MessageConnection']
    export const isMessageConnection = (obj?: { __typename?: any } | null): obj is MessageConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageConnection"')
      return MessageConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageGroupByConnection_possibleTypes: string[] = ['MessageGroupByConnection']
    export const isMessageGroupByConnection = (obj?: { __typename?: any } | null): obj is MessageGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageGroupByConnection"')
      return MessageGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageThread_possibleTypes: string[] = ['MessageThread']
    export const isMessageThread = (obj?: { __typename?: any } | null): obj is MessageThread => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageThread"')
      return MessageThread_possibleTypes.includes(obj.__typename)
    }
    


    const MessageThreadEdge_possibleTypes: string[] = ['MessageThreadEdge']
    export const isMessageThreadEdge = (obj?: { __typename?: any } | null): obj is MessageThreadEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageThreadEdge"')
      return MessageThreadEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MessageThreadConnection_possibleTypes: string[] = ['MessageThreadConnection']
    export const isMessageThreadConnection = (obj?: { __typename?: any } | null): obj is MessageThreadConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageThreadConnection"')
      return MessageThreadConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageThreadGroupByConnection_possibleTypes: string[] = ['MessageThreadGroupByConnection']
    export const isMessageThreadGroupByConnection = (obj?: { __typename?: any } | null): obj is MessageThreadGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageThreadGroupByConnection"')
      return MessageThreadGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannel_possibleTypes: string[] = ['MessageChannel']
    export const isMessageChannel = (obj?: { __typename?: any } | null): obj is MessageChannel => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannel"')
      return MessageChannel_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannelEdge_possibleTypes: string[] = ['MessageChannelEdge']
    export const isMessageChannelEdge = (obj?: { __typename?: any } | null): obj is MessageChannelEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannelEdge"')
      return MessageChannelEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannelConnection_possibleTypes: string[] = ['MessageChannelConnection']
    export const isMessageChannelConnection = (obj?: { __typename?: any } | null): obj is MessageChannelConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannelConnection"')
      return MessageChannelConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannelGroupByConnection_possibleTypes: string[] = ['MessageChannelGroupByConnection']
    export const isMessageChannelGroupByConnection = (obj?: { __typename?: any } | null): obj is MessageChannelGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannelGroupByConnection"')
      return MessageChannelGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageParticipant_possibleTypes: string[] = ['MessageParticipant']
    export const isMessageParticipant = (obj?: { __typename?: any } | null): obj is MessageParticipant => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageParticipant"')
      return MessageParticipant_possibleTypes.includes(obj.__typename)
    }
    


    const MessageParticipantEdge_possibleTypes: string[] = ['MessageParticipantEdge']
    export const isMessageParticipantEdge = (obj?: { __typename?: any } | null): obj is MessageParticipantEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageParticipantEdge"')
      return MessageParticipantEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MessageParticipantConnection_possibleTypes: string[] = ['MessageParticipantConnection']
    export const isMessageParticipantConnection = (obj?: { __typename?: any } | null): obj is MessageParticipantConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageParticipantConnection"')
      return MessageParticipantConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageParticipantGroupByConnection_possibleTypes: string[] = ['MessageParticipantGroupByConnection']
    export const isMessageParticipantGroupByConnection = (obj?: { __typename?: any } | null): obj is MessageParticipantGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageParticipantGroupByConnection"')
      return MessageParticipantGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageFolder_possibleTypes: string[] = ['MessageFolder']
    export const isMessageFolder = (obj?: { __typename?: any } | null): obj is MessageFolder => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageFolder"')
      return MessageFolder_possibleTypes.includes(obj.__typename)
    }
    


    const MessageFolderEdge_possibleTypes: string[] = ['MessageFolderEdge']
    export const isMessageFolderEdge = (obj?: { __typename?: any } | null): obj is MessageFolderEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageFolderEdge"')
      return MessageFolderEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MessageFolderConnection_possibleTypes: string[] = ['MessageFolderConnection']
    export const isMessageFolderConnection = (obj?: { __typename?: any } | null): obj is MessageFolderConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageFolderConnection"')
      return MessageFolderConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageFolderGroupByConnection_possibleTypes: string[] = ['MessageFolderGroupByConnection']
    export const isMessageFolderGroupByConnection = (obj?: { __typename?: any } | null): obj is MessageFolderGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageFolderGroupByConnection"')
      return MessageFolderGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannelMessageAssociation_possibleTypes: string[] = ['MessageChannelMessageAssociation']
    export const isMessageChannelMessageAssociation = (obj?: { __typename?: any } | null): obj is MessageChannelMessageAssociation => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannelMessageAssociation"')
      return MessageChannelMessageAssociation_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannelMessageAssociationEdge_possibleTypes: string[] = ['MessageChannelMessageAssociationEdge']
    export const isMessageChannelMessageAssociationEdge = (obj?: { __typename?: any } | null): obj is MessageChannelMessageAssociationEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannelMessageAssociationEdge"')
      return MessageChannelMessageAssociationEdge_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannelMessageAssociationConnection_possibleTypes: string[] = ['MessageChannelMessageAssociationConnection']
    export const isMessageChannelMessageAssociationConnection = (obj?: { __typename?: any } | null): obj is MessageChannelMessageAssociationConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannelMessageAssociationConnection"')
      return MessageChannelMessageAssociationConnection_possibleTypes.includes(obj.__typename)
    }
    


    const MessageChannelMessageAssociationGroupByConnection_possibleTypes: string[] = ['MessageChannelMessageAssociationGroupByConnection']
    export const isMessageChannelMessageAssociationGroupByConnection = (obj?: { __typename?: any } | null): obj is MessageChannelMessageAssociationGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isMessageChannelMessageAssociationGroupByConnection"')
      return MessageChannelMessageAssociationGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Note_possibleTypes: string[] = ['Note']
    export const isNote = (obj?: { __typename?: any } | null): obj is Note => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNote"')
      return Note_possibleTypes.includes(obj.__typename)
    }
    


    const NoteEdge_possibleTypes: string[] = ['NoteEdge']
    export const isNoteEdge = (obj?: { __typename?: any } | null): obj is NoteEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteEdge"')
      return NoteEdge_possibleTypes.includes(obj.__typename)
    }
    


    const NoteConnection_possibleTypes: string[] = ['NoteConnection']
    export const isNoteConnection = (obj?: { __typename?: any } | null): obj is NoteConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteConnection"')
      return NoteConnection_possibleTypes.includes(obj.__typename)
    }
    


    const NoteGroupByConnection_possibleTypes: string[] = ['NoteGroupByConnection']
    export const isNoteGroupByConnection = (obj?: { __typename?: any } | null): obj is NoteGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteGroupByConnection"')
      return NoteGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const NoteTarget_possibleTypes: string[] = ['NoteTarget']
    export const isNoteTarget = (obj?: { __typename?: any } | null): obj is NoteTarget => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteTarget"')
      return NoteTarget_possibleTypes.includes(obj.__typename)
    }
    


    const NoteTargetEdge_possibleTypes: string[] = ['NoteTargetEdge']
    export const isNoteTargetEdge = (obj?: { __typename?: any } | null): obj is NoteTargetEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteTargetEdge"')
      return NoteTargetEdge_possibleTypes.includes(obj.__typename)
    }
    


    const NoteTargetConnection_possibleTypes: string[] = ['NoteTargetConnection']
    export const isNoteTargetConnection = (obj?: { __typename?: any } | null): obj is NoteTargetConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteTargetConnection"')
      return NoteTargetConnection_possibleTypes.includes(obj.__typename)
    }
    


    const NoteTargetGroupByConnection_possibleTypes: string[] = ['NoteTargetGroupByConnection']
    export const isNoteTargetGroupByConnection = (obj?: { __typename?: any } | null): obj is NoteTargetGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isNoteTargetGroupByConnection"')
      return NoteTargetGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Opportunity_possibleTypes: string[] = ['Opportunity']
    export const isOpportunity = (obj?: { __typename?: any } | null): obj is Opportunity => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpportunity"')
      return Opportunity_possibleTypes.includes(obj.__typename)
    }
    


    const OpportunityEdge_possibleTypes: string[] = ['OpportunityEdge']
    export const isOpportunityEdge = (obj?: { __typename?: any } | null): obj is OpportunityEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpportunityEdge"')
      return OpportunityEdge_possibleTypes.includes(obj.__typename)
    }
    


    const OpportunityConnection_possibleTypes: string[] = ['OpportunityConnection']
    export const isOpportunityConnection = (obj?: { __typename?: any } | null): obj is OpportunityConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpportunityConnection"')
      return OpportunityConnection_possibleTypes.includes(obj.__typename)
    }
    


    const OpportunityGroupByConnection_possibleTypes: string[] = ['OpportunityGroupByConnection']
    export const isOpportunityGroupByConnection = (obj?: { __typename?: any } | null): obj is OpportunityGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isOpportunityGroupByConnection"')
      return OpportunityGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Person_possibleTypes: string[] = ['Person']
    export const isPerson = (obj?: { __typename?: any } | null): obj is Person => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPerson"')
      return Person_possibleTypes.includes(obj.__typename)
    }
    


    const PersonEdge_possibleTypes: string[] = ['PersonEdge']
    export const isPersonEdge = (obj?: { __typename?: any } | null): obj is PersonEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonEdge"')
      return PersonEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PersonConnection_possibleTypes: string[] = ['PersonConnection']
    export const isPersonConnection = (obj?: { __typename?: any } | null): obj is PersonConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonConnection"')
      return PersonConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PersonGroupByConnection_possibleTypes: string[] = ['PersonGroupByConnection']
    export const isPersonGroupByConnection = (obj?: { __typename?: any } | null): obj is PersonGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPersonGroupByConnection"')
      return PersonGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Task_possibleTypes: string[] = ['Task']
    export const isTask = (obj?: { __typename?: any } | null): obj is Task => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTask"')
      return Task_possibleTypes.includes(obj.__typename)
    }
    


    const TaskEdge_possibleTypes: string[] = ['TaskEdge']
    export const isTaskEdge = (obj?: { __typename?: any } | null): obj is TaskEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaskEdge"')
      return TaskEdge_possibleTypes.includes(obj.__typename)
    }
    


    const TaskConnection_possibleTypes: string[] = ['TaskConnection']
    export const isTaskConnection = (obj?: { __typename?: any } | null): obj is TaskConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaskConnection"')
      return TaskConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TaskGroupByConnection_possibleTypes: string[] = ['TaskGroupByConnection']
    export const isTaskGroupByConnection = (obj?: { __typename?: any } | null): obj is TaskGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaskGroupByConnection"')
      return TaskGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TaskTarget_possibleTypes: string[] = ['TaskTarget']
    export const isTaskTarget = (obj?: { __typename?: any } | null): obj is TaskTarget => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaskTarget"')
      return TaskTarget_possibleTypes.includes(obj.__typename)
    }
    


    const TaskTargetEdge_possibleTypes: string[] = ['TaskTargetEdge']
    export const isTaskTargetEdge = (obj?: { __typename?: any } | null): obj is TaskTargetEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaskTargetEdge"')
      return TaskTargetEdge_possibleTypes.includes(obj.__typename)
    }
    


    const TaskTargetConnection_possibleTypes: string[] = ['TaskTargetConnection']
    export const isTaskTargetConnection = (obj?: { __typename?: any } | null): obj is TaskTargetConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaskTargetConnection"')
      return TaskTargetConnection_possibleTypes.includes(obj.__typename)
    }
    


    const TaskTargetGroupByConnection_possibleTypes: string[] = ['TaskTargetGroupByConnection']
    export const isTaskTargetGroupByConnection = (obj?: { __typename?: any } | null): obj is TaskTargetGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isTaskTargetGroupByConnection"')
      return TaskTargetGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Pet_possibleTypes: string[] = ['Pet']
    export const isPet = (obj?: { __typename?: any } | null): obj is Pet => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPet"')
      return Pet_possibleTypes.includes(obj.__typename)
    }
    


    const PetEdge_possibleTypes: string[] = ['PetEdge']
    export const isPetEdge = (obj?: { __typename?: any } | null): obj is PetEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPetEdge"')
      return PetEdge_possibleTypes.includes(obj.__typename)
    }
    


    const PetConnection_possibleTypes: string[] = ['PetConnection']
    export const isPetConnection = (obj?: { __typename?: any } | null): obj is PetConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPetConnection"')
      return PetConnection_possibleTypes.includes(obj.__typename)
    }
    


    const PetGroupByConnection_possibleTypes: string[] = ['PetGroupByConnection']
    export const isPetGroupByConnection = (obj?: { __typename?: any } | null): obj is PetGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isPetGroupByConnection"')
      return PetGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const Rocket_possibleTypes: string[] = ['Rocket']
    export const isRocket = (obj?: { __typename?: any } | null): obj is Rocket => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRocket"')
      return Rocket_possibleTypes.includes(obj.__typename)
    }
    


    const RocketEdge_possibleTypes: string[] = ['RocketEdge']
    export const isRocketEdge = (obj?: { __typename?: any } | null): obj is RocketEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRocketEdge"')
      return RocketEdge_possibleTypes.includes(obj.__typename)
    }
    


    const RocketConnection_possibleTypes: string[] = ['RocketConnection']
    export const isRocketConnection = (obj?: { __typename?: any } | null): obj is RocketConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRocketConnection"')
      return RocketConnection_possibleTypes.includes(obj.__typename)
    }
    


    const RocketGroupByConnection_possibleTypes: string[] = ['RocketGroupByConnection']
    export const isRocketGroupByConnection = (obj?: { __typename?: any } | null): obj is RocketGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isRocketGroupByConnection"')
      return RocketGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SurveyResult_possibleTypes: string[] = ['SurveyResult']
    export const isSurveyResult = (obj?: { __typename?: any } | null): obj is SurveyResult => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSurveyResult"')
      return SurveyResult_possibleTypes.includes(obj.__typename)
    }
    


    const SurveyResultEdge_possibleTypes: string[] = ['SurveyResultEdge']
    export const isSurveyResultEdge = (obj?: { __typename?: any } | null): obj is SurveyResultEdge => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSurveyResultEdge"')
      return SurveyResultEdge_possibleTypes.includes(obj.__typename)
    }
    


    const SurveyResultConnection_possibleTypes: string[] = ['SurveyResultConnection']
    export const isSurveyResultConnection = (obj?: { __typename?: any } | null): obj is SurveyResultConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSurveyResultConnection"')
      return SurveyResultConnection_possibleTypes.includes(obj.__typename)
    }
    


    const SurveyResultGroupByConnection_possibleTypes: string[] = ['SurveyResultGroupByConnection']
    export const isSurveyResultGroupByConnection = (obj?: { __typename?: any } | null): obj is SurveyResultGroupByConnection => {
      if (!obj?.__typename) throw new Error('__typename is missing in "isSurveyResultGroupByConnection"')
      return SurveyResultGroupByConnection_possibleTypes.includes(obj.__typename)
    }
    

export const enumFeatureFlagKey = {
   IS_AIRTABLE_INTEGRATION_ENABLED: 'IS_AIRTABLE_INTEGRATION_ENABLED' as const,
   IS_POSTGRESQL_INTEGRATION_ENABLED: 'IS_POSTGRESQL_INTEGRATION_ENABLED' as const,
   IS_STRIPE_INTEGRATION_ENABLED: 'IS_STRIPE_INTEGRATION_ENABLED' as const,
   IS_UNIQUE_INDEXES_ENABLED: 'IS_UNIQUE_INDEXES_ENABLED' as const,
   IS_JSON_FILTER_ENABLED: 'IS_JSON_FILTER_ENABLED' as const,
   IS_AI_ENABLED: 'IS_AI_ENABLED' as const,
   IS_APPLICATION_ENABLED: 'IS_APPLICATION_ENABLED' as const,
   IS_IMAP_SMTP_CALDAV_ENABLED: 'IS_IMAP_SMTP_CALDAV_ENABLED' as const,
   IS_MORPH_RELATION_ENABLED: 'IS_MORPH_RELATION_ENABLED' as const,
   IS_RELATION_CONNECT_ENABLED: 'IS_RELATION_CONNECT_ENABLED' as const,
   IS_CORE_VIEW_SYNCING_ENABLED: 'IS_CORE_VIEW_SYNCING_ENABLED' as const,
   IS_CORE_VIEW_ENABLED: 'IS_CORE_VIEW_ENABLED' as const,
   IS_WORKSPACE_MIGRATION_V2_ENABLED: 'IS_WORKSPACE_MIGRATION_V2_ENABLED' as const,
   IS_PAGE_LAYOUT_ENABLED: 'IS_PAGE_LAYOUT_ENABLED' as const,
   IS_RECORD_PAGE_LAYOUT_ENABLED: 'IS_RECORD_PAGE_LAYOUT_ENABLED' as const,
   IS_MESSAGE_FOLDER_CONTROL_ENABLED: 'IS_MESSAGE_FOLDER_CONTROL_ENABLED' as const,
   IS_CALENDAR_VIEW_ENABLED: 'IS_CALENDAR_VIEW_ENABLED' as const,
   IS_GROUP_BY_ENABLED: 'IS_GROUP_BY_ENABLED' as const,
   IS_PUBLIC_DOMAIN_ENABLED: 'IS_PUBLIC_DOMAIN_ENABLED' as const,
   IS_EMAILING_DOMAIN_ENABLED: 'IS_EMAILING_DOMAIN_ENABLED' as const,
   IS_DYNAMIC_SEARCH_FIELDS_ENABLED: 'IS_DYNAMIC_SEARCH_FIELDS_ENABLED' as const,
   IS_COMMON_API_ENABLED: 'IS_COMMON_API_ENABLED' as const
}

export const enumPermissionFlagType = {
   API_KEYS_AND_WEBHOOKS: 'API_KEYS_AND_WEBHOOKS' as const,
   WORKSPACE: 'WORKSPACE' as const,
   WORKSPACE_MEMBERS: 'WORKSPACE_MEMBERS' as const,
   ROLES: 'ROLES' as const,
   DATA_MODEL: 'DATA_MODEL' as const,
   ADMIN_PANEL: 'ADMIN_PANEL' as const,
   SECURITY: 'SECURITY' as const,
   WORKFLOWS: 'WORKFLOWS' as const,
   IMPERSONATE: 'IMPERSONATE' as const,
   SEND_EMAIL_TOOL: 'SEND_EMAIL_TOOL' as const,
   IMPORT_CSV: 'IMPORT_CSV' as const,
   EXPORT_CSV: 'EXPORT_CSV' as const
}

export const enumWorkspaceMemberDateFormatEnum = {
   SYSTEM: 'SYSTEM' as const,
   MONTH_FIRST: 'MONTH_FIRST' as const,
   DAY_FIRST: 'DAY_FIRST' as const,
   YEAR_FIRST: 'YEAR_FIRST' as const
}

export const enumWorkspaceMemberTimeFormatEnum = {
   SYSTEM: 'SYSTEM' as const,
   HOUR_24: 'HOUR_24' as const,
   HOUR_12: 'HOUR_12' as const
}

export const enumWorkspaceMemberNumberFormatEnum = {
   SYSTEM: 'SYSTEM' as const,
   COMMAS_AND_DOT: 'COMMAS_AND_DOT' as const,
   SPACES_AND_COMMA: 'SPACES_AND_COMMA' as const,
   DOTS_AND_COMMA: 'DOTS_AND_COMMA' as const,
   APOSTROPHE_AND_DOT: 'APOSTROPHE_AND_DOT' as const
}

export const enumAggregateOperations = {
   MIN: 'MIN' as const,
   MAX: 'MAX' as const,
   AVG: 'AVG' as const,
   SUM: 'SUM' as const,
   COUNT: 'COUNT' as const,
   COUNT_UNIQUE_VALUES: 'COUNT_UNIQUE_VALUES' as const,
   COUNT_EMPTY: 'COUNT_EMPTY' as const,
   COUNT_NOT_EMPTY: 'COUNT_NOT_EMPTY' as const,
   COUNT_TRUE: 'COUNT_TRUE' as const,
   COUNT_FALSE: 'COUNT_FALSE' as const,
   PERCENTAGE_EMPTY: 'PERCENTAGE_EMPTY' as const,
   PERCENTAGE_NOT_EMPTY: 'PERCENTAGE_NOT_EMPTY' as const
}

export const enumViewFilterGroupLogicalOperator = {
   AND: 'AND' as const,
   OR: 'OR' as const,
   NOT: 'NOT' as const
}

export const enumViewFilterOperand = {
   IS: 'IS' as const,
   IS_NOT_NULL: 'IS_NOT_NULL' as const,
   IS_NOT: 'IS_NOT' as const,
   LESS_THAN_OR_EQUAL: 'LESS_THAN_OR_EQUAL' as const,
   GREATER_THAN_OR_EQUAL: 'GREATER_THAN_OR_EQUAL' as const,
   IS_BEFORE: 'IS_BEFORE' as const,
   IS_AFTER: 'IS_AFTER' as const,
   CONTAINS: 'CONTAINS' as const,
   DOES_NOT_CONTAIN: 'DOES_NOT_CONTAIN' as const,
   IS_EMPTY: 'IS_EMPTY' as const,
   IS_NOT_EMPTY: 'IS_NOT_EMPTY' as const,
   IS_RELATIVE: 'IS_RELATIVE' as const,
   IS_IN_PAST: 'IS_IN_PAST' as const,
   IS_IN_FUTURE: 'IS_IN_FUTURE' as const,
   IS_TODAY: 'IS_TODAY' as const,
   VECTOR_SEARCH: 'VECTOR_SEARCH' as const
}

export const enumViewSortDirection = {
   ASC: 'ASC' as const,
   DESC: 'DESC' as const
}

export const enumViewType = {
   TABLE: 'TABLE' as const,
   KANBAN: 'KANBAN' as const,
   CALENDAR: 'CALENDAR' as const
}

export const enumViewKey = {
   INDEX: 'INDEX' as const
}

export const enumViewOpenRecordIn = {
   SIDE_PANEL: 'SIDE_PANEL' as const,
   RECORD_PAGE: 'RECORD_PAGE' as const
}

export const enumViewCalendarLayout = {
   DAY: 'DAY' as const,
   WEEK: 'WEEK' as const,
   MONTH: 'MONTH' as const
}

export const enumWorkspaceActivationStatus = {
   ONGOING_CREATION: 'ONGOING_CREATION' as const,
   PENDING_CREATION: 'PENDING_CREATION' as const,
   ACTIVE: 'ACTIVE' as const,
   INACTIVE: 'INACTIVE' as const,
   SUSPENDED: 'SUSPENDED' as const
}

export const enumOnboardingStatus = {
   PLAN_REQUIRED: 'PLAN_REQUIRED' as const,
   WORKSPACE_ACTIVATION: 'WORKSPACE_ACTIVATION' as const,
   PROFILE_CREATION: 'PROFILE_CREATION' as const,
   SYNC_EMAIL: 'SYNC_EMAIL' as const,
   INVITE_TEAM: 'INVITE_TEAM' as const,
   BOOK_ONBOARDING: 'BOOK_ONBOARDING' as const,
   COMPLETED: 'COMPLETED' as const
}

export const enumWidgetType = {
   VIEW: 'VIEW' as const,
   IFRAME: 'IFRAME' as const,
   FIELDS: 'FIELDS' as const,
   GRAPH: 'GRAPH' as const
}

export const enumGraphType = {
   NUMBER: 'NUMBER' as const,
   GAUGE: 'GAUGE' as const,
   PIE: 'PIE' as const,
   VERTICAL_BAR: 'VERTICAL_BAR' as const,
   HORIZONTAL_BAR: 'HORIZONTAL_BAR' as const,
   LINE: 'LINE' as const
}

export const enumExtendedAggregateOperations = {
   MIN: 'MIN' as const,
   MAX: 'MAX' as const,
   AVG: 'AVG' as const,
   SUM: 'SUM' as const,
   COUNT: 'COUNT' as const,
   COUNT_UNIQUE_VALUES: 'COUNT_UNIQUE_VALUES' as const,
   COUNT_EMPTY: 'COUNT_EMPTY' as const,
   COUNT_NOT_EMPTY: 'COUNT_NOT_EMPTY' as const,
   COUNT_TRUE: 'COUNT_TRUE' as const,
   COUNT_FALSE: 'COUNT_FALSE' as const,
   PERCENTAGE_EMPTY: 'PERCENTAGE_EMPTY' as const,
   PERCENTAGE_NOT_EMPTY: 'PERCENTAGE_NOT_EMPTY' as const,
   EARLIEST: 'EARLIEST' as const,
   LATEST: 'LATEST' as const
}

export const enumGraphOrderBy = {
   FIELD_ASC: 'FIELD_ASC' as const,
   FIELD_DESC: 'FIELD_DESC' as const,
   VALUE_ASC: 'VALUE_ASC' as const,
   VALUE_DESC: 'VALUE_DESC' as const
}

export const enumAxisNameDisplay = {
   NONE: 'NONE' as const,
   X: 'X' as const,
   Y: 'Y' as const,
   BOTH: 'BOTH' as const
}

export const enumBarChartGroupMode = {
   STACKED: 'STACKED' as const,
   GROUPED: 'GROUPED' as const
}

export const enumPageLayoutType = {
   RECORD_INDEX: 'RECORD_INDEX' as const,
   RECORD_PAGE: 'RECORD_PAGE' as const,
   DASHBOARD: 'DASHBOARD' as const
}

export const enumFieldMetadataType = {
   UUID: 'UUID' as const,
   TEXT: 'TEXT' as const,
   PHONES: 'PHONES' as const,
   EMAILS: 'EMAILS' as const,
   DATE_TIME: 'DATE_TIME' as const,
   DATE: 'DATE' as const,
   BOOLEAN: 'BOOLEAN' as const,
   NUMBER: 'NUMBER' as const,
   NUMERIC: 'NUMERIC' as const,
   LINKS: 'LINKS' as const,
   CURRENCY: 'CURRENCY' as const,
   FULL_NAME: 'FULL_NAME' as const,
   RATING: 'RATING' as const,
   SELECT: 'SELECT' as const,
   MULTI_SELECT: 'MULTI_SELECT' as const,
   RELATION: 'RELATION' as const,
   MORPH_RELATION: 'MORPH_RELATION' as const,
   POSITION: 'POSITION' as const,
   ADDRESS: 'ADDRESS' as const,
   RAW_JSON: 'RAW_JSON' as const,
   RICH_TEXT: 'RICH_TEXT' as const,
   RICH_TEXT_V2: 'RICH_TEXT_V2' as const,
   ACTOR: 'ACTOR' as const,
   ARRAY: 'ARRAY' as const,
   TS_VECTOR: 'TS_VECTOR' as const
}

export const enumIndexType = {
   BTREE: 'BTREE' as const,
   GIN: 'GIN' as const
}

export const enumBillingPlanKey = {
   PRO: 'PRO' as const,
   ENTERPRISE: 'ENTERPRISE' as const
}

export const enumBillingUsageType = {
   METERED: 'METERED' as const,
   LICENSED: 'LICENSED' as const
}

export const enumBillingProductKey = {
   BASE_PRODUCT: 'BASE_PRODUCT' as const,
   WORKFLOW_NODE_EXECUTION: 'WORKFLOW_NODE_EXECUTION' as const
}

export const enumSubscriptionInterval = {
   Month: 'Month' as const,
   Year: 'Year' as const
}

export const enumSubscriptionStatus = {
   Active: 'Active' as const,
   Canceled: 'Canceled' as const,
   Incomplete: 'Incomplete' as const,
   IncompleteExpired: 'IncompleteExpired' as const,
   PastDue: 'PastDue' as const,
   Paused: 'Paused' as const,
   Trialing: 'Trialing' as const,
   Unpaid: 'Unpaid' as const
}

export const enumServerlessFunctionExecutionStatus = {
   IDLE: 'IDLE' as const,
   SUCCESS: 'SUCCESS' as const,
   ERROR: 'ERROR' as const
}

export const enumHttpMethod = {
   GET: 'GET' as const,
   POST: 'POST' as const,
   PUT: 'PUT' as const,
   PATCH: 'PATCH' as const,
   DELETE: 'DELETE' as const
}

export const enumIdentityProviderType = {
   OIDC: 'OIDC' as const,
   SAML: 'SAML' as const
}

export const enumSsoIdentityProviderStatus = {
   Active: 'Active' as const,
   Inactive: 'Inactive' as const,
   Error: 'Error' as const
}

export const enumRelationType = {
   ONE_TO_MANY: 'ONE_TO_MANY' as const,
   MANY_TO_ONE: 'MANY_TO_ONE' as const
}

export const enumDatabaseEventAction = {
   CREATED: 'CREATED' as const,
   UPDATED: 'UPDATED' as const,
   DELETED: 'DELETED' as const,
   DESTROYED: 'DESTROYED' as const,
   RESTORED: 'RESTORED' as const,
   UPSERTED: 'UPSERTED' as const
}

export const enumRemoteTableStatus = {
   SYNCED: 'SYNCED' as const,
   NOT_SYNCED: 'NOT_SYNCED' as const
}

export const enumDistantTableUpdate = {
   TABLE_DELETED: 'TABLE_DELETED' as const,
   COLUMNS_DELETED: 'COLUMNS_DELETED' as const,
   COLUMNS_ADDED: 'COLUMNS_ADDED' as const,
   COLUMNS_TYPE_CHANGED: 'COLUMNS_TYPE_CHANGED' as const
}

export const enumConfigSource = {
   ENVIRONMENT: 'ENVIRONMENT' as const,
   DATABASE: 'DATABASE' as const,
   DEFAULT: 'DEFAULT' as const
}

export const enumConfigVariableType = {
   BOOLEAN: 'BOOLEAN' as const,
   NUMBER: 'NUMBER' as const,
   ARRAY: 'ARRAY' as const,
   STRING: 'STRING' as const,
   ENUM: 'ENUM' as const
}

export const enumConfigVariablesGroup = {
   ServerConfig: 'ServerConfig' as const,
   RateLimiting: 'RateLimiting' as const,
   StorageConfig: 'StorageConfig' as const,
   GoogleAuth: 'GoogleAuth' as const,
   MicrosoftAuth: 'MicrosoftAuth' as const,
   EmailSettings: 'EmailSettings' as const,
   Logging: 'Logging' as const,
   Metering: 'Metering' as const,
   ExceptionHandler: 'ExceptionHandler' as const,
   Other: 'Other' as const,
   BillingConfig: 'BillingConfig' as const,
   CaptchaConfig: 'CaptchaConfig' as const,
   CloudflareConfig: 'CloudflareConfig' as const,
   LLM: 'LLM' as const,
   ServerlessConfig: 'ServerlessConfig' as const,
   SSL: 'SSL' as const,
   SupportChatConfig: 'SupportChatConfig' as const,
   AnalyticsConfig: 'AnalyticsConfig' as const,
   TokensDuration: 'TokensDuration' as const,
   TwoFactorAuthentication: 'TwoFactorAuthentication' as const,
   AwsSesSettings: 'AwsSesSettings' as const
}

export const enumHealthIndicatorId = {
   database: 'database' as const,
   redis: 'redis' as const,
   worker: 'worker' as const,
   connectedAccount: 'connectedAccount' as const,
   app: 'app' as const
}

export const enumAdminPanelHealthServiceStatus = {
   OPERATIONAL: 'OPERATIONAL' as const,
   OUTAGE: 'OUTAGE' as const
}

export const enumQueueMetricsTimeRange = {
   SevenDays: 'SevenDays' as const,
   OneDay: 'OneDay' as const,
   TwelveHours: 'TwelveHours' as const,
   FourHours: 'FourHours' as const,
   OneHour: 'OneHour' as const
}

export const enumCalendarChannelVisibility = {
   METADATA: 'METADATA' as const,
   SHARE_EVERYTHING: 'SHARE_EVERYTHING' as const
}

export const enumEmailingDomainDriver = {
   AWS_SES: 'AWS_SES' as const
}

export const enumEmailingDomainStatus = {
   PENDING: 'PENDING' as const,
   VERIFIED: 'VERIFIED' as const,
   FAILED: 'FAILED' as const,
   TEMPORARY_FAILURE: 'TEMPORARY_FAILURE' as const
}

export const enumMessageChannelVisibility = {
   METADATA: 'METADATA' as const,
   SUBJECT: 'SUBJECT' as const,
   SHARE_EVERYTHING: 'SHARE_EVERYTHING' as const
}

export const enumModelProvider = {
   NONE: 'NONE' as const,
   OPENAI: 'OPENAI' as const,
   ANTHROPIC: 'ANTHROPIC' as const,
   OPENAI_COMPATIBLE: 'OPENAI_COMPATIBLE' as const,
   XAI: 'XAI' as const
}

export const enumSupportDriver = {
   NONE: 'NONE' as const,
   FRONT: 'FRONT' as const
}

export const enumCaptchaDriverType = {
   GOOGLE_RECAPTCHA: 'GOOGLE_RECAPTCHA' as const,
   TURNSTILE: 'TURNSTILE' as const
}

export const enumFilterIs = {
   NULL: 'NULL' as const,
   NOT_NULL: 'NOT_NULL' as const,
   NotNull: 'NotNull' as const,
   Null: 'Null' as const
}

export const enumAnalyticsType = {
   PAGEVIEW: 'PAGEVIEW' as const,
   TRACK: 'TRACK' as const
}

export const enumFileFolder = {
   ProfilePicture: 'ProfilePicture' as const,
   WorkspaceLogo: 'WorkspaceLogo' as const,
   Attachment: 'Attachment' as const,
   PersonPicture: 'PersonPicture' as const,
   ServerlessFunction: 'ServerlessFunction' as const,
   ServerlessFunctionToDelete: 'ServerlessFunctionToDelete' as const,
   File: 'File' as const,
   AgentChat: 'AgentChat' as const
}

export const enumOrderByDirection = {
   AscNullsFirst: 'AscNullsFirst' as const,
   AscNullsLast: 'AscNullsLast' as const,
   DescNullsFirst: 'DescNullsFirst' as const,
   DescNullsLast: 'DescNullsLast' as const
}

export const enumActorSourceEnum = {
   EMAIL: 'EMAIL' as const,
   CALENDAR: 'CALENDAR' as const,
   WORKFLOW: 'WORKFLOW' as const,
   AGENT: 'AGENT' as const,
   API: 'API' as const,
   IMPORT: 'IMPORT' as const,
   MANUAL: 'MANUAL' as const,
   SYSTEM: 'SYSTEM' as const,
   WEBHOOK: 'WEBHOOK' as const
}

export const enumDateGranularityEnum = {
   DAY: 'DAY' as const,
   MONTH: 'MONTH' as const,
   QUARTER: 'QUARTER' as const,
   YEAR: 'YEAR' as const,
   DAY_OF_THE_WEEK: 'DAY_OF_THE_WEEK' as const,
   MONTH_OF_THE_YEAR: 'MONTH_OF_THE_YEAR' as const,
   QUARTER_OF_THE_YEAR: 'QUARTER_OF_THE_YEAR' as const,
   NONE: 'NONE' as const
}

export const enumCalendarChannelSyncStatusEnum = {
   ONGOING: 'ONGOING' as const,
   NOT_SYNCED: 'NOT_SYNCED' as const,
   ACTIVE: 'ACTIVE' as const,
   FAILED_INSUFFICIENT_PERMISSIONS: 'FAILED_INSUFFICIENT_PERMISSIONS' as const,
   FAILED_UNKNOWN: 'FAILED_UNKNOWN' as const
}

export const enumCalendarChannelSyncStageEnum = {
   CALENDAR_EVENT_LIST_FETCH_PENDING: 'CALENDAR_EVENT_LIST_FETCH_PENDING' as const,
   CALENDAR_EVENT_LIST_FETCH_SCHEDULED: 'CALENDAR_EVENT_LIST_FETCH_SCHEDULED' as const,
   CALENDAR_EVENT_LIST_FETCH_ONGOING: 'CALENDAR_EVENT_LIST_FETCH_ONGOING' as const,
   CALENDAR_EVENTS_IMPORT_PENDING: 'CALENDAR_EVENTS_IMPORT_PENDING' as const,
   CALENDAR_EVENTS_IMPORT_SCHEDULED: 'CALENDAR_EVENTS_IMPORT_SCHEDULED' as const,
   CALENDAR_EVENTS_IMPORT_ONGOING: 'CALENDAR_EVENTS_IMPORT_ONGOING' as const,
   FAILED: 'FAILED' as const,
   FULL_CALENDAR_EVENT_LIST_FETCH_PENDING: 'FULL_CALENDAR_EVENT_LIST_FETCH_PENDING' as const,
   PARTIAL_CALENDAR_EVENT_LIST_FETCH_PENDING: 'PARTIAL_CALENDAR_EVENT_LIST_FETCH_PENDING' as const,
   PENDING_CONFIGURATION: 'PENDING_CONFIGURATION' as const
}

export const enumCalendarChannelVisibilityEnum = {
   METADATA: 'METADATA' as const,
   SHARE_EVERYTHING: 'SHARE_EVERYTHING' as const
}

export const enumCalendarChannelContactAutoCreationPolicyEnum = {
   AS_PARTICIPANT_AND_ORGANIZER: 'AS_PARTICIPANT_AND_ORGANIZER' as const,
   AS_PARTICIPANT: 'AS_PARTICIPANT' as const,
   AS_ORGANIZER: 'AS_ORGANIZER' as const,
   NONE: 'NONE' as const
}

export const enumCalendarEventParticipantResponseStatusEnum = {
   NEEDS_ACTION: 'NEEDS_ACTION' as const,
   DECLINED: 'DECLINED' as const,
   TENTATIVE: 'TENTATIVE' as const,
   ACCEPTED: 'ACCEPTED' as const
}

export const enumCompanyWorkPolicyEnum = {
   ON_SITE: 'ON_SITE' as const,
   HYBRID: 'HYBRID' as const,
   REMOTE_WORK: 'REMOTE_WORK' as const
}

export const enumViewFieldAggregateOperationEnum = {
   AVG: 'AVG' as const,
   COUNT: 'COUNT' as const,
   MAX: 'MAX' as const,
   MIN: 'MIN' as const,
   SUM: 'SUM' as const,
   COUNT_EMPTY: 'COUNT_EMPTY' as const,
   COUNT_NOT_EMPTY: 'COUNT_NOT_EMPTY' as const,
   COUNT_UNIQUE_VALUES: 'COUNT_UNIQUE_VALUES' as const,
   PERCENTAGE_EMPTY: 'PERCENTAGE_EMPTY' as const,
   PERCENTAGE_NOT_EMPTY: 'PERCENTAGE_NOT_EMPTY' as const,
   COUNT_TRUE: 'COUNT_TRUE' as const,
   COUNT_FALSE: 'COUNT_FALSE' as const
}

export const enumViewFilterGroupLogicalOperatorEnum = {
   AND: 'AND' as const,
   OR: 'OR' as const,
   NOT: 'NOT' as const
}

export const enumViewKeyEnum = {
   INDEX: 'INDEX' as const
}

export const enumViewOpenRecordInEnum = {
   SIDE_PANEL: 'SIDE_PANEL' as const,
   RECORD_PAGE: 'RECORD_PAGE' as const
}

export const enumViewKanbanAggregateOperationEnum = {
   AVG: 'AVG' as const,
   COUNT: 'COUNT' as const,
   MAX: 'MAX' as const,
   MIN: 'MIN' as const,
   SUM: 'SUM' as const,
   COUNT_EMPTY: 'COUNT_EMPTY' as const,
   COUNT_NOT_EMPTY: 'COUNT_NOT_EMPTY' as const,
   COUNT_UNIQUE_VALUES: 'COUNT_UNIQUE_VALUES' as const,
   PERCENTAGE_EMPTY: 'PERCENTAGE_EMPTY' as const,
   PERCENTAGE_NOT_EMPTY: 'PERCENTAGE_NOT_EMPTY' as const,
   COUNT_TRUE: 'COUNT_TRUE' as const,
   COUNT_FALSE: 'COUNT_FALSE' as const
}

export const enumWorkflowStatusesEnum = {
   DRAFT: 'DRAFT' as const,
   ACTIVE: 'ACTIVE' as const,
   DEACTIVATED: 'DEACTIVATED' as const
}

export const enumWorkflowVersionStatusEnum = {
   DRAFT: 'DRAFT' as const,
   ACTIVE: 'ACTIVE' as const,
   DEACTIVATED: 'DEACTIVATED' as const,
   ARCHIVED: 'ARCHIVED' as const
}

export const enumWorkflowRunStatusEnum = {
   NOT_STARTED: 'NOT_STARTED' as const,
   RUNNING: 'RUNNING' as const,
   COMPLETED: 'COMPLETED' as const,
   FAILED: 'FAILED' as const,
   ENQUEUED: 'ENQUEUED' as const
}

export const enumWorkflowAutomatedTriggerTypeEnum = {
   DATABASE_EVENT: 'DATABASE_EVENT' as const,
   CRON: 'CRON' as const
}

export const enumMessageChannelVisibilityEnum = {
   METADATA: 'METADATA' as const,
   SUBJECT: 'SUBJECT' as const,
   SHARE_EVERYTHING: 'SHARE_EVERYTHING' as const
}

export const enumMessageChannelTypeEnum = {
   email: 'email' as const,
   sms: 'sms' as const
}

export const enumMessageChannelContactAutoCreationPolicyEnum = {
   SENT_AND_RECEIVED: 'SENT_AND_RECEIVED' as const,
   SENT: 'SENT' as const,
   NONE: 'NONE' as const
}

export const enumMessageChannelMessageFolderImportPolicyEnum = {
   ALL_FOLDERS: 'ALL_FOLDERS' as const,
   SELECTED_FOLDERS: 'SELECTED_FOLDERS' as const
}

export const enumMessageChannelSyncStatusEnum = {
   ONGOING: 'ONGOING' as const,
   NOT_SYNCED: 'NOT_SYNCED' as const,
   ACTIVE: 'ACTIVE' as const,
   FAILED_INSUFFICIENT_PERMISSIONS: 'FAILED_INSUFFICIENT_PERMISSIONS' as const,
   FAILED_UNKNOWN: 'FAILED_UNKNOWN' as const
}

export const enumMessageChannelSyncStageEnum = {
   MESSAGE_LIST_FETCH_PENDING: 'MESSAGE_LIST_FETCH_PENDING' as const,
   MESSAGE_LIST_FETCH_SCHEDULED: 'MESSAGE_LIST_FETCH_SCHEDULED' as const,
   MESSAGE_LIST_FETCH_ONGOING: 'MESSAGE_LIST_FETCH_ONGOING' as const,
   MESSAGES_IMPORT_PENDING: 'MESSAGES_IMPORT_PENDING' as const,
   MESSAGES_IMPORT_SCHEDULED: 'MESSAGES_IMPORT_SCHEDULED' as const,
   MESSAGES_IMPORT_ONGOING: 'MESSAGES_IMPORT_ONGOING' as const,
   FAILED: 'FAILED' as const,
   FULL_MESSAGE_LIST_FETCH_PENDING: 'FULL_MESSAGE_LIST_FETCH_PENDING' as const,
   PARTIAL_MESSAGE_LIST_FETCH_PENDING: 'PARTIAL_MESSAGE_LIST_FETCH_PENDING' as const,
   PENDING_CONFIGURATION: 'PENDING_CONFIGURATION' as const
}

export const enumMessageParticipantRoleEnum = {
   from: 'from' as const,
   to: 'to' as const,
   cc: 'cc' as const,
   bcc: 'bcc' as const
}

export const enumMessageChannelMessageAssociationDirectionEnum = {
   INCOMING: 'INCOMING' as const,
   OUTGOING: 'OUTGOING' as const
}

export const enumOpportunityStageEnum = {
   NEW: 'NEW' as const,
   SCREENING: 'SCREENING' as const,
   MEETING: 'MEETING' as const,
   PROPOSAL: 'PROPOSAL' as const,
   CUSTOMER: 'CUSTOMER' as const
}

export const enumPersonWorkPreferenceEnum = {
   ON_SITE: 'ON_SITE' as const,
   HYBRID: 'HYBRID' as const,
   REMOTE_WORK: 'REMOTE_WORK' as const
}

export const enumPersonPerformanceRatingEnum = {
   RATING_1: 'RATING_1' as const,
   RATING_2: 'RATING_2' as const,
   RATING_3: 'RATING_3' as const,
   RATING_4: 'RATING_4' as const,
   RATING_5: 'RATING_5' as const
}

export const enumTaskStatusEnum = {
   TODO: 'TODO' as const,
   IN_PROGRESS: 'IN_PROGRESS' as const,
   DONE: 'DONE' as const
}

export const enumPetSpeciesEnum = {
   DOG: 'DOG' as const,
   CAT: 'CAT' as const,
   BIRD: 'BIRD' as const,
   FISH: 'FISH' as const,
   RABBIT: 'RABBIT' as const,
   HAMSTER: 'HAMSTER' as const
}

export const enumPetTraitsEnum = {
   PLAYFUL: 'PLAYFUL' as const,
   FRIENDLY: 'FRIENDLY' as const,
   PROTECTIVE: 'PROTECTIVE' as const,
   SHY: 'SHY' as const,
   BRAVE: 'BRAVE' as const,
   CURIOUS: 'CURIOUS' as const
}

export const enumPetSoundSwagEnum = {
   RATING_1: 'RATING_1' as const,
   RATING_2: 'RATING_2' as const,
   RATING_3: 'RATING_3' as const,
   RATING_4: 'RATING_4' as const,
   RATING_5: 'RATING_5' as const
}
